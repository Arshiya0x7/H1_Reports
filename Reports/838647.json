{
  "id": 838647,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC84Mzg2NDc=",
  "url": "https://hackerone.com/reports/838647",
  "title": "Improper Input Validation on User's Location on PUT /WhoService/putLocation Could Affect Availability/Falsify Users",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "low",
  "readable_substate": "Resolved",
  "created_at": "2020-04-04T05:48:28.091Z",
  "submitted_at": "2020-04-04T05:48:28.091Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "spaceraccoon",
    "url": "/spaceraccoon",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/c5zYRQsvGPQP6MxHYYN4r5Jp/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1"
    },
    "is_me?": false,
    "cleared": true,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 51543,
    "url": "https://hackerone.com/who-covid-19-mobile-app",
    "handle": "who-covid-19-mobile-app",
    "profile_picture_urls": {
      "small": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/wz2z6d5e6ox7n48beetcuc5kewkx/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1?response-content-disposition=inline%3B%20filename%3D%22covidAssassinBadge_web_smaller.png%22%3B%20filename%2A%3DUTF-8%27%27covidAssassinBadge_web_smaller.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2F4GPPEV%2F20250921%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250921T075511Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEIf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQD5JdQKlCbnZAttyGgCBG%2B65HCT3wAz9AGgnbPCZoBOTAIhAORUEJHWeQXQu2tJUkVGi2iq2YrHwW1CK5zNb0R7yG6jKrIFCBAQAxoMMDEzNjE5Mjc0ODQ5IgzHL45tKDL42kKMU3EqjwVIG%2BEUK29uPLBwrattBa58mRZZ7DSFS454QxJm%2BgjOU0wt5yDtMJvIFLJysfllK3u6V1Z3BJYsGv1FLO5u2Vrn5GztB6iULQfR14kLr599oKSoLKCnuFLLmXjKrNAMZvJNaDs%2Bzb0NWorBrzq8fwIXN4wQ%2FlRcxGJkEAEsoF35t3ufazopoqjqH8yPmY7%2Foac6v5Xh48ZEoQhpUYuIU%2BIuJlVenKEgFKyVXaGJhsNI77xPLzZzqGhGxbtFZhXGSGE3mme7C5la%2F88x9O3erhMnL5PjbWaHwlsTp57QITb%2BACmTaq92cVv3WXnDPydosCygZqRHeIRKZdO2Pf8B8rFarqNzglRWEFzIDxH%2FZiHbhi3orwwfNgbYvoTDUc%2B6jxed4qckcCWmBS%2Bncp0Y1DZNF0Ued15bR%2FttHQG162nfrXqXROET5ZsRkY9MZW0Aq8rSRXPJWL%2BWuojdqMdqTA12rV3vj89Jon4i%2Bj8QTpt6rw9QOlzmHwk%2FbysolmKw7omDtT87C1YhCrHVb%2FnHrHtTDP2SFoC9%2BdQbWKizTxHplM%2BUP1AHP5S8sMUYnuG5Tbrzh4IEsCXbPQyiaQyGF4D1HjDUxrd1e1oPx7iyyCZz5nhsXS2SwGhDOMmk1y%2Bx6c%2Fpa03La0Mu4zdyyPelBY%2Ffl5fNW4EQbwfNkmnMkDJec8s1OWPZzskxg2QYcLhYE5P7jXP8BukzlYp3w4fecfwMlwAqEnBkcATFDQHRZ37X2sh76vJqr3Ig8VuUwYNwrZvf4T9bsR%2FbcdTdpjZKkjJIul%2Bm1qRqsI1dka%2BC5G85K8yp7%2FqseF8kjQ62je%2FS25dpg1xKZPupxg9bJxZ0ztlIbRj3BM10u3KEbNjANbvcMLS1vsYGOrAB7ybOD4bPqjrU7mnlIGEtUGW1fqIb09c9eQfue1zLDHy4l6in7KtiszPZY4KE6vwDcUG%2BbqoE85X8ngOXghorc%2FQRAyu2%2FNxzIVf9IzqaY5KbI129unjiqMqKujdnsGb0Clm8uwzo5cEO1fqyLcLUxLe18hwj9zGeGVqZcGgJ66cq09qaS%2BULcVsYK5X2fA1hh5Og5WlJY3j2pD79x6zMR8y%2F9CqYsc%2Bvrko0jQBIIFg%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=65dba790fadeb8d24231a58ad8c2d556a7c7d23126382e7ab479df2f7e253ead",
      "medium": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/wz2z6d5e6ox7n48beetcuc5kewkx/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c?response-content-disposition=inline%3B%20filename%3D%22covidAssassinBadge_web_smaller.png%22%3B%20filename%2A%3DUTF-8%27%27covidAssassinBadge_web_smaller.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2F4GPPEV%2F20250921%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250921T075511Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEIf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQD5JdQKlCbnZAttyGgCBG%2B65HCT3wAz9AGgnbPCZoBOTAIhAORUEJHWeQXQu2tJUkVGi2iq2YrHwW1CK5zNb0R7yG6jKrIFCBAQAxoMMDEzNjE5Mjc0ODQ5IgzHL45tKDL42kKMU3EqjwVIG%2BEUK29uPLBwrattBa58mRZZ7DSFS454QxJm%2BgjOU0wt5yDtMJvIFLJysfllK3u6V1Z3BJYsGv1FLO5u2Vrn5GztB6iULQfR14kLr599oKSoLKCnuFLLmXjKrNAMZvJNaDs%2Bzb0NWorBrzq8fwIXN4wQ%2FlRcxGJkEAEsoF35t3ufazopoqjqH8yPmY7%2Foac6v5Xh48ZEoQhpUYuIU%2BIuJlVenKEgFKyVXaGJhsNI77xPLzZzqGhGxbtFZhXGSGE3mme7C5la%2F88x9O3erhMnL5PjbWaHwlsTp57QITb%2BACmTaq92cVv3WXnDPydosCygZqRHeIRKZdO2Pf8B8rFarqNzglRWEFzIDxH%2FZiHbhi3orwwfNgbYvoTDUc%2B6jxed4qckcCWmBS%2Bncp0Y1DZNF0Ued15bR%2FttHQG162nfrXqXROET5ZsRkY9MZW0Aq8rSRXPJWL%2BWuojdqMdqTA12rV3vj89Jon4i%2Bj8QTpt6rw9QOlzmHwk%2FbysolmKw7omDtT87C1YhCrHVb%2FnHrHtTDP2SFoC9%2BdQbWKizTxHplM%2BUP1AHP5S8sMUYnuG5Tbrzh4IEsCXbPQyiaQyGF4D1HjDUxrd1e1oPx7iyyCZz5nhsXS2SwGhDOMmk1y%2Bx6c%2Fpa03La0Mu4zdyyPelBY%2Ffl5fNW4EQbwfNkmnMkDJec8s1OWPZzskxg2QYcLhYE5P7jXP8BukzlYp3w4fecfwMlwAqEnBkcATFDQHRZ37X2sh76vJqr3Ig8VuUwYNwrZvf4T9bsR%2FbcdTdpjZKkjJIul%2Bm1qRqsI1dka%2BC5G85K8yp7%2FqseF8kjQ62je%2FS25dpg1xKZPupxg9bJxZ0ztlIbRj3BM10u3KEbNjANbvcMLS1vsYGOrAB7ybOD4bPqjrU7mnlIGEtUGW1fqIb09c9eQfue1zLDHy4l6in7KtiszPZY4KE6vwDcUG%2BbqoE85X8ngOXghorc%2FQRAyu2%2FNxzIVf9IzqaY5KbI129unjiqMqKujdnsGb0Clm8uwzo5cEO1fqyLcLUxLe18hwj9zGeGVqZcGgJ66cq09qaS%2BULcVsYK5X2fA1hh5Og5WlJY3j2pD79x6zMR8y%2F9CqYsc%2Bvrko0jQBIIFg%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=22ad4063fbec5cb1d8c0663f2fe3c11493299c610cbc57b26d77dc73f25dc5cb"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": false,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "WHO COVID-19 Mobile App",
      "twitter_handle": "",
      "website": "",
      "about": ""
    }
  },
  "has_bounty?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2020-12-22T04:26:13.630Z",
  "bug_reporter_agreed_on_going_public_at": "2020-12-22T04:26:13.495Z",
  "team_member_agreed_on_going_public_at": "2020-12-22T04:24:03.359Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "## Summary:\nNote: I noticed that that the team has fixed issues like an XSS that's caused only from a header value (typically OOS since it's not directly exploitable) https://github.com/WorldHealthOrganization/app/pull/855, so in the spirit of this I'm also reporting another \"good-to-fix\" issue.\n\nOn the WHO app, users send approximate location data to the `WhoService` API:\n\n`/app/client/flutter/lib/pages/onboarding/location_sharing_page.dart`:\n\n```\n  Future<void> _allowLocationSharing() async {\n    try {\n      await Location().requestPermission();\n      if (await Location().hasPermission() == PermissionStatus.granted) {\n        if (await Location().requestService()) {\n          LocationData location = await Location().getLocation();\n          Map jitteredLocationData = JitterLocation().jitter(\n              location.latitude, location.longitude,\n              5 /*kms refers to kilometers*/);\n\n          await WhoService.putLocation(\n              latitude: jitteredLocationData['lat'],\n              longitude: jitteredLocationData['lng']);\n        }\n      }\n    } catch(_) {\n      // ignore for now.\n    } finally {\n      _complete();\n    }\n  }\n```\n\nWhich in turn translates to a call to `https://staging.whocoronavirus.org/WhoService/putDeviceToken`:\n\n```\ncurl --request POST \\\n  --url 'https://hackerone.whocoronavirus.org/WhoService/putLocation' \\\n  --header 'content-type: application/json' \\\n  --header 'who-client-id: ██████████' \\\n  --header 'who-platform: ios' \\\n  --data '{\n\t\"latitude\": 22222222,\n\t\"longitude\": \"9999999\"\n}'\n```\n\nThis returns a `200 OK` response. On the server side, we see that it uses the following logic:\n\n```\n  @Override public Void putLocation(PutLocationRequest request) throws IOException {\n    Client client = Client.current();\n    client.latitude = request.latitude;\n    client.longitude = request.longitude;\n    S2LatLng coordinates = S2LatLng.fromDegrees(request.latitude, request.longitude);\n    client.location = S2CellId.fromLatLng(coordinates).id();\n    ofy().save().entities(client);\n    return new Void();\n  }\n```\n\nThere is no validation on `request.latitude, request.longitude` before it is stored into the Google App Engine datastore. This is because the `S2LatLng.fromDegrees` (which transforms the values into a `S2LatLng` object) from the `s2-geometry-library-java` library specifically does not validate these values because, according to their comments at https://github.com/google/s2-geometry-library-java/blob/master/src/com/google/common/geometry/S2LatLng.java:\n\n```\nLike the rest of the \"geometry\" package, the\nintent is to represent spherical geometry as a mathematical abstraction, so\nfunctions that are specifically related to the Earth's geometry (e.g.\neasting/northing conversions) should be put elsewhere.\n```\n\nThus, even these values:\n\n```\n\t\"latitude\": 22222222,\n\t\"longitude\": \"9999999\"\n```\n\nAre accepted and stored in the database even though they are technically non-existent coordinates on earth.\n\nTo reproduce, just run this request with different `who-client-id` UUID you generated yourself and impossible `latitude` and `longitude`.\n\n```\ncurl --request POST \\\n  --url 'https://hackerone.whocoronavirus.org/WhoService/putLocation' \\\n  --header 'content-type: application/json' \\\n  --header 'who-client-id: ████████' \\\n  --header 'who-platform: ios' \\\n  --data '{\n\t\"latitude\": 22222222,\n\t\"longitude\": \"9999999\"\n}'\n```\n\n## Impact\n\nAn attacker can exploit this to affect the Availability or Integrity of the analytics data by injecting false location values and falsifying user data. A fix for this would be to implement a quick lat lng validator that is specifically meant to validate Earth geometry, instead of the `S2LatLng` class.",
  "weakness": {
    "id": 107,
    "name": "Improper Input Validation"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 15,
  "voters": [
    "emanuelharijanto",
    "mirhat",
    "phibz",
    "ali",
    "bibekshah",
    "bl4de",
    "iamrjarpan",
    "ayoub0x1",
    "newfunction",
    "0nlymohammed",
    "and 5 more..."
  ],
  "severity": {
    "rating": "low",
    "author_type": "User"
  },
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
