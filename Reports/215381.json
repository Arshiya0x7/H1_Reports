{
  "id": 215381,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8yMTUzODE=",
  "url": "https://hackerone.com/reports/215381",
  "title": "CSRF on Periscope Web OAuth authorization endpoint ",
  "state": "Closed",
  "substate": "resolved",
  "readable_substate": "Resolved",
  "created_at": "2017-03-22T16:01:27.460Z",
  "submitted_at": "2017-03-22T16:01:27.460Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "filedescriptor",
    "url": "/filedescriptor",
    "profile_picture_urls": {
      "small": "/assets/avatars/default-14ffa99f59cd01423c64904352cc130ffcb6a802eadfd11777a54485749e60f2.png"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 61,
    "url": "https://hackerone.com/x",
    "handle": "x",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/ikx4ept298unt534kpz4am2bd4zs/3cb67cc78dc0cba55b102dd9eca2ee89b206d3e960be830f070583d9070b69ef",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/ikx4ept298unt534kpz4am2bd4zs/d9695107bfcd68eeb1c9e0912b109cdae9a6c00c0bda6fd4cbd6d9bdb828840a"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "X / xAI",
      "twitter_handle": "XSecurity",
      "website": "https://x.com",
      "about": "X helps you create and share ideas and information instantly, without barriers."
    }
  },
  "has_bounty?": true,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2017-07-26T23:02:48.018Z",
  "bug_reporter_agreed_on_going_public_at": "2017-07-20T16:00:28.912Z",
  "team_member_agreed_on_going_public_at": "2017-07-26T23:02:47.960Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Hi,\nI would like to report an issue in the OAuth authorization endpoint on Periscope Web. This allows a malicious 3rd party application to gain full API access to a victim's Periscope account.\n\n#Details\nPeriscope has developer APIs that allow a 3rd party application to access resources on behalf of a user. The authorizion page is like this https://www.periscope.tv/oauth?client_id=█████████&redirect_uri=https://getmevo.com/oauth/periscope\n\nIt was found that the authorize endpoint does not have any protection against CSRF. The request to authorize a 3rd party application to access one's Periscope account is as follows:\n```http\nPOST https://www.periscope.tv/oauthAuthorize HTTP/1.1\nHost: www.periscope.tv\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36\nContent-Type: application/x-www-form-urlencoded\nCookie: sid=[...]\n\nclient_id=████&redirect_uri=https%3A%2F%2Fgetmevo.com%2Foauth%2Fperiscope?abc\n```\nAs one can see, there is no CSRF token or Origin validation.\n\nAfter a 3rd party application gets the *authorization code* from *redirect_uri*, it can then exchange it for an access token.\n\n#Impact\nSince the Developer APIs are not public, I have no information what the APIs can perform. Based on the the description on the authorization page however, it looks intimidating that it has **full access** to an account.\n{F170579}\nAt minimum, I found endpoints that allow creating a broadcast (https://public-api.periscope.tv/v1/broadcast/create), tweeting it (https://public-api.periscope.tv/v1/broadcast/publish) and deleting a broadcast (https://public-api.periscope.tv/v1/broadcast/delete).\n\n#PoC\n1. Make sure you are logged into Periscope Web (https://periscope.tv)\n2. Go to http://innerht.ml/pocs/periscope-oauth-csrf/\n3. You will be redirected to something like https://getmevo.com/oauth/periscope?code=abcde&state=, copy the *code* value in the parameter\n4. Go to http://innerht.ml/pocs/periscope-oauth-csrf/code.php?code=abcde and replace the above code in the parameter\n5. A tweet will be posted in your timeline with a broadcast\n\nThe behind the scene is:\n1. Exchange *code* for *access_token* (https://public-api.periscope.tv/v1/oauth/token)\n2. Create a broadcast (https://public-api.periscope.tv/v1/broadcast/create)\n3. Publish it (https://public-api.periscope.tv/v1/broadcast/publish)\n\nNote that a real attack does not require user interaction. In this PoC the manual copying of *code* is because I don't have a 3rd party Periscope application. \n\n#Fix\nAdd CSRF protection",
  "weakness": {
    "id": 45,
    "name": "Cross-Site Request Forgery (CSRF)"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 170579,
      "file_name": "periscope-fullaccess.PNG",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/170/579/3e178eb084c267491a3e41fddee17c764739889e/periscope-fullaccess.PNG?response-content-disposition=attachment%3B%20filename%3D%22periscope-fullaccess.PNG%22%3B%20filename%2A%3DUTF-8%27%27periscope-fullaccess.PNG&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2672TXP5%2F20250921%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250921T211623Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJP%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIFBmwDDQUjrdjJhinf%2BPozodz2NBZ3ix0Y8C72gnYQ%2BwAiB1ZGS0We0mouO%2FzCEMLuto1WvU398SUNLLODhQNoXNFiqxBQgcEAMaDDAxMzYxOTI3NDg0OSIMhA3wwmG7UKJP9AAGKo4FbP9vJ5gC0u5tjxMKfJmGUvInEf1CNrVtkwLSCE8QLqbaBz5bhdVOMWP5KlwGVPiUtWYs7d77h6ZbeXNCEdBPXnpuS17139h2lSdad8KHRt5CbpY9SX66049DiMVxNA08uU8S1%2BYXH8XU3BGxlkmIBbe5aYq67U6MxsQZjp53Dj6WYqrjDDRntYWlHtbOQ4BbiMRfQlVh2tBNFnwj3Vwmau3IQBMLoqwAI6Or%2FcE1LJr0Oq%2BrX8IuLoy8VDmtY%2FBJYcLyArjgz9RQ7VYZbeOdHXdkI7GQ5DKYoN7T3X506ZanWbQUyKVRwNOhNrbT6VfVWP7x1EtHWLsT4vxQTR0PasMeyB9TSn4dHCQvuP7s9hlNF6zm0kjghZmtmaqQIg83FcxwCskYKt3LQuvlJdCVKg3%2BtK3hseuCEJ2p0HvfujAElfJS79p4DFvUVVVie%2Fpv1baDSDfVQjsHo6D%2BGgbNaVWaHEzvFOif8xb%2Fnw8Sg1cSQNhWk0bk8GiRgzSHrbYHLCMbFj2Cnf8nR2h4sm%2FQobzQsNQTE6tgGhcCaHDk2UAiyF5Ee6iPbonvuImIaZlEJ6yzRQD4uo9q7jcqdZi69MbxXF1QC8Rk9%2BeLctZ5lPveRRRQnpmPkCe9xpKlqM6H0JPk3RhV%2B0NR2t7h64akePhaOcmjg1jRrbi03vD4QvuIUPPm9p1cvn5k4HABpm3s5QWqWQr5MFv1hOSNiSK%2B04ToI5RB5iNbSTASQkzF7%2BZef2jrUVgzn5NO3op%2B0OJBRaMBHgQVaMe5xJUn0gK4UfgkBPq00LjqOeMYvBpW1JpKrTaWejkv0C%2F0jfcHOryQ53qfMWzA6uhkAUOsEmJ%2BkF%2BjTLZyQCs9XAuSSDBsMIeVwcYGOrIBgXU9lwrHyKH50udgPH%2BqkLge1TXo7aEsWD%2B0cJkrWkN2NGW7jdl2zNlZ7Nx%2FTdaKqZHglwKVTU1aS9vxMaFN0Vvp4Az5%2FX4PuNNDgCOaKVD9rKQHbR0Omu1NiPDVfv7sREi1GAtWsu%2Bz0iin4S%2BcvkCV26ke3DPe43AHO6Cjw7YWbbsqibZmbFzAfQ482l%2BkgOaZ6sdPNOfAubg6f7BxQtJRegFlN0XizYJKjRFDJAlRPw%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=47e7defcfa46957607ab15d730cf7345851ec67b5b256af602aef138a211d972",
      "file_size": 40126,
      "type": "image/png",
      "moderated": null
    }
  ],
  "allow_singular_disclosure_at": "2017-08-19T16:00:28.960Z",
  "allow_singular_disclosure_after": -255330954.4437738,
  "singular_disclosure_allowed": true,
  "vote_count": 71,
  "voters": [
    "mr-medi",
    "flamezzz",
    "n1m0",
    "jensec",
    "cdl",
    "7odamoo",
    "tess",
    "cubed",
    "bl4de",
    "spam404",
    "and 61 more..."
  ],
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
