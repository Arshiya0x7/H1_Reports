{
  "id": 208363,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8yMDgzNjM=",
  "url": "https://hackerone.com/reports/208363",
  "title": "Memory corrouption in mrb_gc_mark",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "high",
  "readable_substate": "Resolved",
  "created_at": "2017-02-23T07:15:38.002Z",
  "submitted_at": "2017-02-23T07:15:38.002Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "minhrau",
    "url": "/minhrau",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/003/621/93eac54c6d663681d5f278d44e2f49570990cf5c_original.jpg/3cb67cc78dc0cba55b102dd9eca2ee89b206d3e960be830f070583d9070b69ef"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 15668,
    "url": "https://hackerone.com/shopify-scripts",
    "handle": "shopify-scripts",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/015/668/ebbe467de8ef2fc936053593e1289e30f04c3b06_original.jpg/3cb67cc78dc0cba55b102dd9eca2ee89b206d3e960be830f070583d9070b69ef",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/015/668/ebbe467de8ef2fc936053593e1289e30f04c3b06_original.jpg/d9695107bfcd68eeb1c9e0912b109cdae9a6c00c0bda6fd4cbd6d9bdb828840a"
    },
    "permissions": [],
    "submission_state": "paused",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "shopify-scripts",
      "twitter_handle": "",
      "website": "",
      "about": ""
    }
  },
  "has_bounty?": true,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2017-04-17T02:42:13.361Z",
  "bug_reporter_agreed_on_going_public_at": "2017-04-17T02:42:13.324Z",
  "team_member_agreed_on_going_public_at": "2017-04-13T21:32:25.204Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "The memory corruption in mrb_gc_mark function can lead to code execution or at least DoS on mruby.\n\nPoC attached.\n\n### Crash debug\n\n>mr@minhrau ~ $ ./mrubylatest/mruby/build/bench/bin/mruby ./mruby/fuzz03/crashes/mrb_gc_mark.rb\n>Reading symbols from ./mrubylatest/mruby/build/bench/bin/mruby...done.\n>(gdb) r ./mruby/fuzz03/crashes/mrb_gc_mark.rb\n>Starting program: /home/minhrau/mrubylatest/mruby/build/bench/bin/mruby ./mruby/fuzz03/crashes/mrb_gc_mark.rb\n>{:r=>[\"h1MuXist\", \"kenea\", \"mini[g\", \"\\377\\377\\365\"]}\n>\n>---snip---\n>\n>Program received signal SIGSEGV, Segmentation fault.\n>mrb_gc_mark (obj=0x4b563330305c3035, mrb=0x69f010) at /home/minhrau/mrubylatest/mruby/src/gc.c:696\n>696   if (!is_white(obj)) return;\n>(gdb) p obj\n>$1 = (struct RBasic *) 0x4b563330305c3035\n>(gdb) x/i $rip\n>=> 0x4185fe <incremental_gc+78>:    movzbl 0x1(%rax),%edx\n>(gdb) i r\n>rax            0x4b563330305c3035   5428582682904506421\n>rbx            0x7422a0 7611040\n>rcx            0x0  0\n>rdx            0xffffffffffffffff   -1\n>rsi            0x69f0e8 6942952\n>rdi            0x69f010 6942736\n>rbp            0xffffffffffffffff   0xffffffffffffffff\n>rsp            0x7fffffffdc90   0x7fffffffdc90\n>r8             0x4  4\n>r9             0x6b2660 7022176\n>r10            0x6b2650 7022160\n>r11            0x7ffff73ea760   140737341466464\n>r12            0x69f010 6942736\n>r13            0x69f0e8 6942952\n>r14            0x0  0\n>r15            0x69f010 6942736\n>rip            0x4185fe 0x4185fe <incremental_gc+78>\n>eflags         0x10206  [ PF IF RF ]\n>cs             0x33 51\n>ss             0x2b 43\n>ds             0x0  0\n>es             0x0  0\n>fs             0x0  0\n>gs             0x0  0\n>(gdb) \n\n### Backtrace\n\n>(gdb) bt\n>   #0  mrb_gc_mark (obj=0x4b563330305c3035, mrb=0x69f010) at /home/minhrau/mrubylatest/mruby/src/gc.c:696\n>   #1  gc_mark_children (gc=0x69f0e8, obj=<optimized out>, mrb=0x69f010) at /home/minhrau/mrubylatest/mruby/src/gc.c:600\n>   #2  gc_gray_mark (obj=<optimized out>, gc=0x69f0e8, mrb=0x69f010) at /home/minhrau/mrubylatest/mruby/src/gc.c:887\n>   #3  incremental_marking_phase (limit=<optimized out>, gc=<optimized out>, mrb=<optimized out>) at /home/minhrau/mrubylatest/mruby/src/gc.c:982\n>   #4  incremental_gc (mrb=mrb@entry=0x69f010, gc=gc@entry=0x69f0e8, limit=limit@entry=18446744073709551615) at /home/minhrau/mrubylatest/mruby/src/gc.c:1086\n>   #5  0x000000000041988a in incremental_gc (limit=18446744073709551615, gc=0x69f0e8, mrb=0x69f010) at /home/minhrau/mrubylatest/mruby/src/gc.c:1081\n>   #6  incremental_gc_until (to_state=<optimized out>, gc=<optimized out>, mrb=<optimized out>) at /home/minhrau/mrubylatest/mruby/src/gc.c:1111\n>   #7  mrb_incremental_gc (mrb=mrb@entry=0x69f010) at /home/minhrau/mrubylatest/mruby/src/gc.c:1162\n>   #8  0x0000000000419dc0 in mrb_obj_alloc (mrb=mrb@entry=0x69f010, ttype=ttype@entry=MRB_TT_STRING, cls=0x6a94e0) at /home/minhrau/mrubylatest/mruby/src/gc.c:507\n>   #9  0x0000000000424841 in str_new (p=0x0, len=0, mrb=0x69f010) at /home/minhrau/mrubylatest/mruby/src/string.c:59\n>   #10 mrb_str_dup (mrb=mrb@entry=0x69f010, str=...) at /home/minhrau/mrubylatest/mruby/src/string.c:1069\n>   #11 0x00000000004439c3 in mrb_vm_exec (mrb=mrb@entry=0x69f010, proc=<optimized out>, proc@entry=0x6e4fa0, pc=<optimized out>) at /home/minhrau/mrubylatest/mruby/src/vm.c:2317\n>   #12 0x0000000000446e35 in mrb_vm_run (mrb=0x69f010, proc=0x6e4fa0, self=..., stack_keep=<optimized out>) at /home/minhrau/mrubylatest/mruby/src/vm.c:815\n>   #13 0x0000000000449331 in mrb_top_run (mrb=mrb@entry=0x69f010, proc=proc@entry=0x6e4fa0, self=..., stack_keep=stack_keep@entry=0) at /home/minhrau/mrubylatest/mruby/src/vm.c:2569\n>   #14 0x000000000043f87c in mrb_load_exec (mrb=mrb@entry=0x69f010, p=p@entry=0x6eb9c0, c=c@entry=0x6ea860) at /home/minhrau/mrubylatest/mruby/mrbgems/mruby-compiler/core/parse.y:5755\n>   #15 0x00000000004415d5 in mrb_load_file_cxt (mrb=mrb@entry=0x69f010, f=0x6eb590, c=c@entry=0x6ea860) at /home/minhrau/mrubylatest/mruby/mrbgems/mruby-compiler/core/parse.y:5764\n>   #16 0x00000000004020a5 in main (argc=<optimized out>, argv=<optimized out>) at /home/minhrau/mrubylatest/mruby/mrbgems/mruby-bin-mruby/tools/mruby/mruby.c:232\n\n",
  "bounty_amount": "100.0",
  "formatted_bounty": "$100",
  "weakness": {
    "id": 2,
    "name": "Memory Corruption - Generic"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 163046,
      "file_name": "mrb_gc_mark.rb",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/163/046/3b7e9849976bac02c4db4ed33817e71023f420fe/mrb_gc_mark.rb?response-content-disposition=attachment%3B%20filename%3D%22mrb_gc_mark.rb%22%3B%20filename%2A%3DUTF-8%27%27mrb_gc_mark.rb&response-content-type=application%2Foctet-stream&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ4TIMAWU3%2F20250921%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250921T225617Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJb%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCICUear5hhUgp5lHwtR0EziBRYEUmAfhJx%2FHCzrl0UWf6AiEAh1oG4bj0gKM3nKh2F9iUSBM8e%2B%2BmWtd47JpKUIy5yRYqsgUIHxADGgwwMTM2MTkyNzQ4NDkiDGyf5Tt0JxIOfVr8ASqPBZtH0jyj8DZB%2FdlM2SnALcW7YuXSYDzxwDULKmJdlH3rfT4PlZVZ0TXWp4Epm4zsycJQeDSExIGqDIKTL1wGmhviMY1TK3yfxgmAUq%2BLgrYgfvd1HW1awNKA5za%2F%2BuXH9JnkKD%2FFJogc5i7vGhF%2BLBW8UFYefjYsLUy31Nxm1Rtwc9sqktefbeqIkKbNoPqnPVwMbiRTXxX1dz2IVr7CLe%2FYxXAeUlPKXmlYT7RUhuz40KJsLo5QvblC6259dnfAbaXkKiP6IRKXwS7rR6VhtDHf2dvQgS2RaMUXilhX9QTPRu8cP%2FfgD%2B3G4yzAKyKeBMHKv8LpDOtJPsvsZVxy%2B7a7zJv%2BgidjTHDPAxFdm3QgVu1eZXExfe6jieqO7UO4Ao0%2FUhjFiX1pelLGuVrglZmDBJjrXdGMYcug7FbNcgOYkCpHuZTtO5UVQaw555Pc86mAXjjQPJt51dqYyXPz%2FACepzOSzKl1GTO6ZJUSe5UyWXObvso1367PsBubEH0iEGjut04SQLnitEoMS0tHRPj%2BImP6zK312zbXJJ%2BRVVJkq0XbHAeqiVo3P5Itp94QywfMOkYLXjf%2FtQT2HlW5wTwXemISLvPpHuptEx5tF6eTH2VqOy7Y2rtOUVeb2sH29zRb%2BlLA3%2BDWUR7Pv8uk97d0HjS9xKW6jRl3s5dkVjCxlv49%2FOZWFDFQXwMxH04zWWE6AKLpljQO4alMwE%2Fe%2BcO4lhZOQQwanEr29HALD4v7dvnXj2glcSKN5YZJUJYClYvj18LmyKXl%2B1g2RuvurMBCUYvtJVYp3PEE4P3VM3E4DP3UDwbcXSlp12XRB6aXliuGEMoAt8myD5gRGq%2BuH0QJuBHBD%2FP%2FbFVC7B7RZC8wyeDBxgY6sQHObFjMvjppQvYKLnZ9Es9qnpfT%2FAC1dQ0OjpzVaJ2c7EeH%2BH8ET79vZ%2FP09MTFS8WCyla%2FDSfYPgo99txVPqY5v2fQ3%2Biu8xViWOZ1G3rvjh%2BV9HfQcz%2FNDgU6VJBBbPORugZYacPfuITViEetUiKKWi3nxLzjYglF2CpHxdbC0VeMqyAklVYUg4lpm5k0TGLQFTzofw5oFqmx0v4Mcmxs9nwFnij0lGCsA3JLmJFcBuE%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=321444e2e5792140c018d0e78d40241377dd55d17246ad694372c10fac5ee3bf",
      "file_size": 13064,
      "type": "application/octet-stream",
      "moderated": null
    }
  ],
  "allow_singular_disclosure_at": "2017-05-13T21:32:25.239Z",
  "allow_singular_disclosure_after": -263784232.59373084,
  "singular_disclosure_allowed": true,
  "vote_count": 6,
  "voters": [
    "eveeez",
    "khizer47",
    "japz",
    "sumit7",
    "spetr0x",
    "pan0ptik"
  ],
  "severity": {
    "rating": "high",
    "score": 7.3,
    "author_type": "User",
    "metrics": {
      "attack_vector": "local",
      "attack_complexity": "high",
      "privileges_required": "none",
      "user_interaction": "none",
      "scope": "changed",
      "confidentiality": "low",
      "integrity": "low",
      "availability": "high"
    }
  },
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
