{
  "id": 732987,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC83MzI5ODc=",
  "url": "https://hackerone.com/reports/732987",
  "title": "Reflected XSS ",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "high",
  "readable_substate": "Resolved",
  "created_at": "2019-11-09T07:09:03.393Z",
  "submitted_at": "2019-11-09T07:09:03.393Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "imthehackerlor",
    "url": "/imthehackerlor",
    "profile_picture_urls": {
      "small": "https://hackerone.com/rails/active_storage/representations/redirect/eyJfcmFpbHMiOnsiZGF0YSI6MTk0NjY5MiwicHVyIjoiYmxvYl9pZCJ9fQ==--010b64dfec6340b2ec4afdfee633bf8f30543d8c/eyJfcmFpbHMiOnsiZGF0YSI6eyJmb3JtYXQiOiJqcGciLCJncmF2aXR5IjoiQ2VudGVyIiwicmVzaXplIjoiNjJ4NjJeIiwiY3JvcCI6IjYyeDYyKzArMCJ9LCJwdXIiOiJ2YXJpYXRpb24ifX0=--2de8067d228529d65848a4eeed0bed0bb2531bc3/0402b8c8694fa611ff5e.jpg"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 12633,
    "url": "https://hackerone.com/owox",
    "handle": "owox",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/012/633/b14ae8476ac40405c091161f2338c091b5fecdc4_original./235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/012/633/b14ae8476ac40405c091161f2338c091b5fecdc4_original./3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": false,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "OWOX, Inc.",
      "twitter_handle": "owoxbi",
      "website": "https://bi.owox.com",
      "about": "Get more advantages from Google Analytics and complete control over your data in Google BigQuery"
    }
  },
  "has_bounty?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2019-12-09T15:24:52.729Z",
  "bug_reporter_agreed_on_going_public_at": "2019-11-09T15:24:51.900Z",
  "team_member_agreed_on_going_public_at": null,
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Hi team,\n\nI have found an XSS at https://bi.owox.com/ui/6177527534dc114eb07fa829e4ce4d28/dashboard/?trial=activated\nBecause the input is not properly filtered, resulting in XSS being executed\nVulnerable area: \n-----\n``6177527534dc114eb07fa829e4ce4d28``\nThe URL will now be: https://bi.owox.com/ui/6177527534dc114eb07fa829e4ce4d28%3Cimg%20src=xss%20onerror=prompt('XSS')%3E/dashboard/?trial=activated\n\nPoC\n---\n1, go to https://bi.owox.com/ui/6177527534dc114eb07fa829e4ce4d28%3Cimg%20src=xss%20onerror=prompt('XSS')%3E/dashboard/?trial=activated\n2, Log in and ``XSS`` will execute\n██████████\n\nTested browser\n---\nFirefox \nChrome\n\n## Impact\n\nThis vulnerability is aimed at all victims and they do not need to be involved in the ``Project``. Just paste this URL and login, XSS will automatically execute.\nTherefore, it will have a ``high impact``, because before XSS is executed, the application will ask the user to login.\n+ The attacker can execute JS code.\n████████\n████████\n\nDocuments related to ``Impact``\n---\nhttps://portswigger.net/web-security/cross-site-scripting/reflected\nhttps://portswigger.net/web-security/cross-site-scripting/exploiting\n\nRecommendation\n----\n+ Revisit the entire application and validate the user input at server side.\n+ Sanitize the data collected from input fields before further processing.\n+ Filter out special and meta-characters from user input.\n\nBest regards,\n@dat",
  "weakness": {
    "id": 61,
    "name": "Cross-site Scripting (XSS) - Reflected"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2019-12-09T15:24:51.940Z",
  "allow_singular_disclosure_after": -182554827.3309549,
  "singular_disclosure_allowed": true,
  "vote_count": 20,
  "voters": [
    "thaivu",
    "tiger24",
    "null_rhythm",
    "cryptographer",
    "imthehackerlor",
    "armansameer",
    "herdsec",
    "manoj_hodal",
    "canas360",
    "hasan_zmzm",
    "and 10 more..."
  ],
  "severity": {
    "rating": "high",
    "author_type": "User"
  },
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
