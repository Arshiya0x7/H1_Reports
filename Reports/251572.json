{
  "id": 251572,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8yNTE1NzI=",
  "url": "https://hackerone.com/reports/251572",
  "title": "Length extension attack leading to HTML injection",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2017-07-20T10:22:27.318Z",
  "submitted_at": "2017-07-20T10:22:27.318Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "b1t",
    "url": "/b1t",
    "profile_picture_urls": {
      "small": "https://hackerone.com/rails/active_storage/representations/redirect/eyJfcmFpbHMiOnsiZGF0YSI6NjI3MywicHVyIjoiYmxvYl9pZCJ9fQ==--c6df1682a28ad10dae6f02952c3bd8fc274cfce2/eyJfcmFpbHMiOnsiZGF0YSI6eyJmb3JtYXQiOiJqcGciLCJncmF2aXR5IjoiQ2VudGVyIiwicmVzaXplIjoiNjJ4NjJeIiwiY3JvcCI6IjYyeDYyKzArMCJ9LCJwdXIiOiJ2YXJpYXRpb24ifX0=--2de8067d228529d65848a4eeed0bed0bb2531bc3/20046684_1241187152676960_7295204261415442075_n.jpg"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 2943,
    "url": "https://hackerone.com/eternal",
    "handle": "eternal",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/9525xdsq4bz7ubnoie172ssjv8ul/3cb67cc78dc0cba55b102dd9eca2ee89b206d3e960be830f070583d9070b69ef",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/9525xdsq4bz7ubnoie172ssjv8ul/d9695107bfcd68eeb1c9e0912b109cdae9a6c00c0bda6fd4cbd6d9bdb828840a"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "Eternal",
      "twitter_handle": "Zomato",
      "website": "https://www.eternal.com",
      "about": "Eternal is India’s largest new-age tech company by market cap, comprising of 4 businesses (as of now) – Zomato, Blinkit, District, & Hyperpure."
    }
  },
  "has_bounty?": true,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2017-09-01T14:02:50.489Z",
  "bug_reporter_agreed_on_going_public_at": "2017-08-02T14:02:48.206Z",
  "team_member_agreed_on_going_public_at": null,
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "At the profile setting page where I can set my personal website I found this url:\n*https://www.zomato.com/redirect?u=xxx&t=yyy*\nWhere `xxx` is the `url` that we can control and `yyy` is the `hash`. Through out blackbox testing I find out that if md5(`somescret` + `url`) == t then the redirect is allowed. This is vulnable to <https://blog.skullsecurity.org/2012/everything-you-need-to-know-about-hash-length-extension-attacks>. With this vulnerability I can append what ever I want into the `url` in `u` variable.  <https://www.zomato.com/redirect?u=http%3A//a.c%80%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%E8%00%00%00%00%00%00%00%3Cstyle%3Ebody%7Bbackground-color%3A%20black%3B%7D%3C/style%3E%3Cmarquee%20bgcolor%3D%23000000%3E%3Cfont%20color%3D%2300FF00%3Eb1t%20%3D%2C%3D%3C/font%3E%3C/marquee%3E&t=cb3efc9cbeb3d7b84dfc5cb2bef5a3c4>. As a result I can inject arbitrary HTML content into your page because of the `Redirecting you to...` message and there is no escaping on this page. At first I was aiming at an `XSS` but your `WAF` blocks all my attemps, a more skilled attacker may be able to bypass it. Because the nullbyte in `url` breaks your `Refresh` header the page won't redirect anymore and display my injected content. Visit the `poc` above and look at the request and response you will have a clearer view of what happened. A correct fix for this would be using a `correct ``HMAC` implementation not just simple `md5(secret+message)`. There is an attachment script below which I used to exploit the vulnerability. You have get <https://github.com/iagox86/hash_extender> to be able to use the script.",
  "bounty_amount": "100.0",
  "formatted_bounty": "$100",
  "weakness": {
    "id": 32,
    "name": "Cryptographic Issues - Generic"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 204786,
      "file_name": "exploit.py",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/204/786/478f187e450497106eb18ee6ab299ebadb0d6f84/exploit.py?response-content-disposition=attachment%3B%20filename%3D%22exploit.py%22%3B%20filename%2A%3DUTF-8%27%27exploit.py&response-content-type=application%2Foctet-stream&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQZH4PP2EU%2F20250921%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250921T203811Z&X-Amz-Expires=1951&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEI%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDPsHKy%2B9Z18ppMHR%2Brz4JYjOICNwdECPQPDmd48flZ2AIhALHRZOgDMcraak9k1Q5mE5pZOgrP7j7NKrP972DuBDwIKrIFCBgQAxoMMDEzNjE5Mjc0ODQ5Igx5185VGHELQR28cdcqjwX4UX5NRHC6WIhvqJBCzs%2FhOK8pzByrzZVmTgU2PgPOZS5Fc0o8EmtsaWh4D4NJgdRweBOpRWWBhVb43Xo%2BUjf9gQn6XDs60OFCAo5tdLyXu9x15q8lb7e6UDWrASQilfDRNtfc9aWmwlhvAp5Iz0izFAm9CLmZH9MVJryn1u%2FF3lJbdO6nv3rmZPuqetb%2BoMxrGX%2BNPlif6l0%2Bqkj6rB7zCZGmPQtg2ZeN4k9FTconG%2FSFKV0i8s9oe3bVkjIlfcoMj0uJ50wA5BvG%2B7yjlzW0X%2F6WUMwmyQx135WzZ6WzFWaA0cSVCr9AYHNsiYJP9JW24j40LBqx%2Bcr6YxLBbKasZCxeskDMD%2BtJDR8vaHtOpDY2umjTSKDr9zW2mJk4SH6Xk5psuntJC5qKqq6FjH1kgqEmYyZ2eun%2FkHgl4c6W8obz22R1Zz0GdBIheHvBFg9QD0Og9IzISx36BMJ9NwqS9bSzGWFndTRJvHTCNrLXKEcsvBv4XT2H0QlefyaJSASCoZtaojrs6M09JC0JBIze94REepEuQtaV5WN8dGogRj4LCy8wangKg4nMy0Nv07tnAfsmi0AbB86giBDl8xjJ2MuArKtIfs3plSGML31j8QBoTaTSMuQsabfIUae%2FXDnADWLslgnwHZMyHnK0HTYfJbdPvR%2FHoNr8%2BI1qrq%2FAEYn%2FPKD48LgmykyI8PIdgbHy7%2BHDgiFBCMveKJRIEYRSswlcc13jYW7yyQ075nWLGE6GaBft%2Bk71MnlIm3f98AoRCm7yGq1FHidipqYPUYdH2ECzV59OJUr7vQo6FpM6kBli0HjnqXMt4NJyvDuVEx9X%2FYr7NG2rNeU9hMotrGJdFtHp%2B9hcaXrq7ZEekrw4MIKqwMYGOrAB8vOzOXkAO8w6yO95SepBdPR3u4MwaaWSTz%2FfnIG1RAgmz4rXzoKUb3jsULsqFm%2Bej0xl99ee5FaRTDJPiDMbKgih1BukouxDCvzhaCXJL8WsiSrMaG9cqATSigwkBJLoY%2BZOYsf%2FsWX77kgB29lxf6cXKnae1XeRj1cgMKO0RmYSJoi0yU5wBaasoufS3SuFu2MoMAPikvnikZvtPPWH6cEyxLvagkOOxVcoUmgai3A%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=16195f8b59540f224c4003231dc8543de4664d25b5d9f8d90886d32ff2716ff0",
      "file_size": 1868,
      "type": "text/html",
      "moderated": null
    }
  ],
  "allow_singular_disclosure_at": "2017-09-01T14:02:48.276Z",
  "allow_singular_disclosure_after": -254212522.9438167,
  "singular_disclosure_allowed": true,
  "vote_count": 21,
  "voters": [
    "flamezzz",
    "jensec",
    "sp1d3rs",
    "bogdantc",
    "sameerphad72",
    "grouptherapy",
    "gerben_javado",
    "thisishrsh",
    "fa1rlight",
    "mysterican",
    "and 11 more..."
  ],
  "severity": {
    "rating": "medium",
    "author_type": "User"
  },
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
