{
  "id": 1036886,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xMDM2ODg2",
  "url": "https://hackerone.com/reports/1036886",
  "title": "Kubelet follows symlinks as root in /var/log from the /logs server endpoint ",
  "state": "Closed",
  "substate": "informative",
  "severity_rating": "medium",
  "readable_substate": "Informative",
  "created_at": "2020-11-17T16:54:29.472Z",
  "submitted_at": "2020-11-17T16:54:29.509Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "danielsagi",
    "url": "/danielsagi",
    "profile_picture_urls": {
      "small": "/assets/avatars/default-14ffa99f59cd01423c64904352cc130ffcb6a802eadfd11777a54485749e60f2.png"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 39386,
    "url": "https://hackerone.com/kubernetes",
    "handle": "kubernetes",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/039/386/486f4380e09776d05a912ca9f46be23f72fe8197_original.png/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/039/386/486f4380e09776d05a912ca9f46be23f72fe8197_original.png/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "Kubernetes",
      "twitter_handle": "kubernetesio",
      "website": "https://kubernetes.io/",
      "about": ""
    }
  },
  "has_bounty?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2021-04-01T18:13:00.639Z",
  "bug_reporter_agreed_on_going_public_at": null,
  "team_member_agreed_on_going_public_at": "2020-12-16T19:42:05.276Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "## Summary:\nPrivilege escalation from a  pod, to root read permissions on the entire filesytem of the node, by creating symlinks inside /var/log.\nThe kubelet is simply serving a fileserver at /var/log:\n\n_kubernetes\\pkg\\kubelet\\kubelet.go:1371_\n```golang\nif kl.logServer == nil {\n\t\tkl.logServer = http.StripPrefix(\"/logs/\", http.FileServer(http.Dir(\"/var/log/\")))\n\t}\n```\nThe kubelet naturally runs as root on the node, so this basically gives the ability for pods with write permissions to /var/log directory a directory traversal as a root user on the host (potentially taking over the whole cluster by getting secret keys)\nAn easy fix is checking the symlink destination, to figure out whether it is inside /var/lib/docker or other whitelisted paths to not break to mechanism of logs correlations\n\nA while back, I discovered this bug, when you didn't had the Bug Bounty program. \nI Published the following blog:\nhttps://blog.aquasec.com/kubernetes-security-pod-escape-log-mounts\nDescribing the vulnerability.\n\n(it  requires RBAC permissions to read logs, or a kubelet configured with AlwaysAllow. and a mount point to any child directory inside /var/log)\nI researched some log collectors projects in github, seems like alot of them are freely using this mount point.\nAs a user I would not imagine those projects can potentially take clusters. \n\n## Kubernetes Version:\nAll versions\n\n## Component Version:\nThe kubelet\n\n## Steps To Reproduce:\n  1. create a pod with a mount path to `/var/log`\n  1. create a symlink in the mount point: `/var/log/rootfs_symlink -> /`\n  1. curl from within the pod: `https://<ip_of_node>:10250/logs/rootfs_symlink/etc/shadow`\n\n## Supporting Material/References:\nhttps://blog.aquasec.com/kubernetes-security-pod-escape-log-mounts\nhttps://github.com/danielsagi/kube-pod-escape\n\n## Impact\n\nRoot read permissions on the entire filesystem of the node",
  "weakness": {
    "id": 75,
    "name": "Privilege Escalation"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 1,
  "voters": [
    "khizer47"
  ],
  "severity": {
    "rating": "medium",
    "score": 4.0,
    "author_type": "Team",
    "metrics": {
      "attack_vector": "local",
      "attack_complexity": "low",
      "privileges_required": "none",
      "user_interaction": "none",
      "scope": "unchanged",
      "confidentiality": "none",
      "integrity": "low",
      "availability": "none"
    }
  },
  "structured_scope": {
    "databaseId": 32489,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "https://github.com/kubernetes/kubelet",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
