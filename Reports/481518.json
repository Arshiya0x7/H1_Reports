{
  "id": 481518,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC80ODE1MTg=",
  "url": "https://hackerone.com/reports/481518",
  "title": "Bypass GraphQL rate limit by abusing negative cost queries",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "low",
  "readable_substate": "Resolved",
  "created_at": "2019-01-17T16:51:07.923Z",
  "submitted_at": "2019-01-17T16:51:07.923Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "emitrani",
    "url": "/emitrani",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/206/181/54e8d7444534dbe32a21bd75c87febb777a18496_original.PNG/65551465b0d18d952f306b2d0c5e69ed082a8c9bc5c9b7bec024e5edc01c00a5"
    },
    "is_me?": false,
    "cleared": true,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 1382,
    "url": "https://hackerone.com/shopify",
    "handle": "shopify",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/fjjiC5585s8WoDGHv2M5okbJ/3cb67cc78dc0cba55b102dd9eca2ee89b206d3e960be830f070583d9070b69ef",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/fjjiC5585s8WoDGHv2M5okbJ/d9695107bfcd68eeb1c9e0912b109cdae9a6c00c0bda6fd4cbd6d9bdb828840a"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "Shopify",
      "twitter_handle": "",
      "website": "https://www.shopify.com",
      "about": "Shopify is a multi-channel commerce platform that helps people sell online, in-store, and everywhere in between."
    }
  },
  "has_bounty?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2019-01-24T15:29:24.263Z",
  "bug_reporter_agreed_on_going_public_at": "2019-01-24T15:25:50.147Z",
  "team_member_agreed_on_going_public_at": "2019-01-24T15:29:24.068Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Hi security team,\n\nWhile looking into the graphql app I noticed an interesting implementation where each app has a bucket of query cost they are allowed to used in a given time with a certain refresh rate associated with it.\n\nThe details can be found at https://help.shopify.com/en/api/graphql-admin-api/call-limit\n\nNow Using the app I noticed by calling something like `first(-100)` will give you a negative cost \n{F408086}\n\nThis doesn't give you more than the maximum amount however you can deplete your resources down to 50 and then use a negative query to fill it back up to a maximum of 1000 to keep querying indefinitely.\n\nIn order to reproduce I used a high cost query like:\n```\n{\n  appInstallations(first: 10) {\n    edges {\n      node {\n        id\n        uninstallUrl\n        accessScopes {\n          description\n          handle\n        }\n        accessScopes {\n          description\n          handle\n        }\n        accessScopes {\n          description\n          handle\n        }\n        accessScopes {\n          description\n          handle\n        }\n        launchUrl\n        app {\n          pricingDetailsSummary\n          apiKey\n          banner {\n            altText\n            metafields(first: 2) {\n              edges {\n                node {\n                  description\n                  value\n                  namespace\n                  id\n                }\n              }\n            }\n          }\n          handle\n          features\n          pricingDetails\n          published\n          feedback {\n            messages {\n              message\n            }\n            link {\n              url\n            }\n          }\n        }\n      }\n    }\n  }\n}\n```\nAnd hit sent 10-15 times at https://emitrani.myshopify.com/admin/apps/shopify-graphiql-app\n\nAfter that change one of the `first` parameters into `(first: -1000)` and try a regular query again and you will see it succeeds as the pool will be back up to full.\n\n## Impact\n\nIt is possible to leverage the logic error to bypass GraphQL rate limiting.\n\nBest,\nEray",
  "weakness": {
    "id": 65,
    "name": "Business Logic Errors"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 408086,
      "file_name": "Screen_Shot_2019-01-17_at_11.24.35_AM.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/408/086/60f58eb7776d0d0ab1acb6081296d517815f01d1/Screen_Shot_2019-01-17_at_11.24.35_AM.png?response-content-disposition=attachment%3B%20filename%3D%22Screen_Shot_2019-01-17_at_11.24.35_AM.png%22%3B%20filename%2A%3DUTF-8%27%27Screen_Shot_2019-01-17_at_11.24.35_AM.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ4VJHFUDL%2F20250921%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250921T161456Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEI%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIBUkC6R1%2Bmwy3Djm2ephCgSb7sTXNcHLM4%2FmxGwcCfmpAiEA9dsaTJy9S7QlKFDg8Si2eHPaC36Y0esMOfwsGBwPzpAqsgUIGBADGgwwMTM2MTkyNzQ4NDkiDHw6us71e4hJK1wBPSqPBYBqvrw5esflEscp%2F9KSw3CxrJs0K1ytw0zKkl2hnmIvPIFzuo9x9pTkMzp%2FTG9CEC6YFMnxmsKhJ9JjfS4FYi6QH%2BAG0264uHO2bOn5MRKGbwwsTvuEY1vPbBrRJSzkyNJ1ROczjVa2y%2F%2BxDyO5LcS83nKrcug3H0dgv0gB6u7s2XuGbVZQUpJ2Hzo%2FQUictB%2BkT2PwHv6pAxEi23LCCuf0QKWWpXjipYa%2FCKQYIBDdYsr2RomoGGA1D%2BHFnlnwWF%2FsMVFMFUUcXsSE7DXDqwzgsMLET6lZGknP0BEHUkNRK%2F1naZ43EcBNkO0cSnJZRiMfK4y47iMSz6MItsINLAwuIaphWTv5Egq5gX99aSBbdJg6VQ%2B2ECedGcgtjzRrrmdRf%2FCHaSnq0G4Mr4hcEG7DHnDX4xJ%2FWUowWYo00bIDLF6%2BxkWdbyKJAj8wktdvTiCnNHLhjZYvQH7HTek9QoumlAFVwQAQpd6QodZGL5Q9oRtg83s9UCJA2r0xHm4kvLJCLgaaucsgvlJUlgo8ZunJy2w0oXJ77b3DTLHPyDjNBgWQeAN8Dgaov%2BuLPKyGSrDLx7svwiAdeBixqPm6OCwrb7U%2BVjChcEHJJITcbrKiA7dcMwi7gHWQ0%2BwKh3JOhwdqUMNKUlPE3uuTsYcWkspFiUtFJy7yHiSljQ0td0V4BtVVDI6wqfbymR6vIxfhMSPbCOlymDBvnaEYHvNOUs5WPQISNcOS%2FoDOyOlrMILQvFlBkYPliIz2khArF8%2B%2BG6QjfZITmCgSrYq4K%2BP1YloenBPoJldtjUfvFdiNPqU9%2Fbl1oq5bOG0IyrwP7%2F2u0fgIisP04KdP7bGZDSvaERG9maaJtIzmsrzsyESSu0Yw%2BJ7AxgY6sQHYyASZMPK8FfY6FGy%2B5kepYrU6kfi72LwDq4YyhvKbpjN0%2FZtG56c7lpsDfrRnyi2dJV5jf3%2BjeEWwx8CYxdOqATwiNmwnkQb9lOL6smDyi6HNqbSvwm2wjIGxOWcGgvxH4IeRtbKU7bLNEs0s8XSd%2BHtu1HUVnWnzLv%2Fs3cJkqa7TxDfFk60FvKcY74ZSD9ILfmd4orZqHv0Qppn8D9Qk8C%2BXqKBBSIlm4OzKuug0AB4%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=b2d55bae3d031c409f7a41ea3d465e00f4a203d41ef21dd0e7d548b73e440f80",
      "file_size": 251590,
      "type": "image/png",
      "moderated": null
    }
  ],
  "allow_singular_disclosure_at": null,
  "vote_count": 22,
  "voters": [
    "drsniper",
    "foobar7",
    "kapytein",
    "ali",
    "sameerphad72",
    "dhakal_ananda",
    "thalaivar304",
    "0xc0ffee",
    "savitar0x01",
    "mohaned0101",
    "and 12 more..."
  ],
  "severity": {
    "rating": "low",
    "author_type": "Team"
  },
  "structured_scope": {
    "databaseId": 413,
    "asset_type": "URL",
    "asset_identifier": "your-store.myshopify.com",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
