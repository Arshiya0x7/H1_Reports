{
  "id": 633245,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC82MzMyNDU=",
  "url": "https://hackerone.com/reports/633245",
  "title": "Delete permission can be added on reshare",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "low",
  "readable_substate": "Resolved",
  "created_at": "2019-07-01T16:12:45.510Z",
  "submitted_at": "2019-07-01T16:12:45.510Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "phil-davis",
    "url": "/phil-davis",
    "profile_picture_urls": {
      "small": "/assets/avatars/default-14ffa99f59cd01423c64904352cc130ffcb6a802eadfd11777a54485749e60f2.png"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 13291,
    "url": "https://hackerone.com/nextcloud",
    "handle": "nextcloud",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/tnqlkt8d6fcch8hj8brdjp8nw864/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/tnqlkt8d6fcch8hj8brdjp8nw864/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "Nextcloud",
      "twitter_handle": "nextclouders",
      "website": "https://nextcloud.com",
      "about": "Access, share and protect your files, calendars, contacts, communication & more at home and in your enterprise."
    }
  },
  "has_bounty?": true,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2019-09-03T13:14:41.352Z",
  "bug_reporter_agreed_on_going_public_at": "2019-09-03T13:14:41.279Z",
  "team_member_agreed_on_going_public_at": "2019-09-03T12:08:51.151Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "user0 creates folder /test\nuser0 creates file /test/file.txt\nuser0 shares folder /test with user1 with read+share permissions (17)\nuser1 receives the folder /test and can read-download /test/file.txt but not delete - good\nuser1 uses the sharing API to share folder /test with user2, and specifies read(1)+reshare(16)+delete(8)=permissions 25 e.g.\n\ncurl --user user1:user1 \"http://172.17.0.1:8081/ocs/v1.php/apps/files_sharing/api/v1/shares\" -H \"OCS-APIRequest: true\"  -X POST --data 'path=/test&shareType=0&shareWith=user2&permissions=25'\n\nuser2 deletes /test/file.txt\n\ncurl --user user2:user2 \"http://172.17.0.1:8081/remote.php/dav/files/user2/test/file.txt\" -H \"OCS-APIRequest: true\" -X DELETE\n\nor with the webUI.\n\nThis seems to be a side-effect of https://github.com/nextcloud/server/blob/master/lib/private/Files/View.php#L1389 \n\n```\n\t\t\tif ($mount instanceof MoveableMount && $internalPath === '') {\n\t\t\t\t$data['permissions'] |= \\OCP\\Constants::PERMISSION_DELETE;\n\t\t\t}\n```\nwhich seems to be there so that a user that receives a share gets \"implied delete\" access to the share \"root\" so that they can unshare. (They cannot really delete the whole received share, when they \"delete\" they are actually just \"unsharing\". But when they reshare on to `user2` then this \"implied delete\" is able to be passed on.\n\nThe problem also happens if user1 shares with a group, and adds the delete permission. Users in the group can delete files. user1 can share with a group that they are already a member of. That gives user1 delete access to the files in the folder.\n\n## Impact\n\nA malicious user can reshare any received share, adding the delete permission to the reshare. Thus giving themselves (if they are in the group) or the end-user the ability to delete files of the first user.\n\nThe scenario works with current server master. I guess it will work with 16.* release...",
  "weakness": {
    "id": 75,
    "name": "Privilege Escalation"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2019-10-03T12:08:51.235Z",
  "allow_singular_disclosure_after": -188361473.11104167,
  "singular_disclosure_allowed": true,
  "vote_count": 14,
  "voters": [
    "ali",
    "sameerphad72",
    "pr0f0x01",
    "cryptographer",
    "z41b1337_",
    "st3fan",
    "vani_00",
    "youssef-xf7",
    "kennedy123",
    "dkmr",
    "and 4 more..."
  ],
  "severity": {
    "rating": "low",
    "score": 3.5,
    "author_type": "Team",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "low",
      "privileges_required": "low",
      "user_interaction": "required",
      "scope": "unchanged",
      "confidentiality": "none",
      "integrity": "none",
      "availability": "low"
    }
  },
  "structured_scope": {
    "databaseId": 13,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "nextcloud/server",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
