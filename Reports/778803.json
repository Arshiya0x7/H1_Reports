{
  "id": 778803,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC83Nzg4MDM=",
  "url": "https://hackerone.com/reports/778803",
  "title": "Compromise of auth via subset/superset namespace names.",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2020-01-21T06:10:38.317Z",
  "submitted_at": "2020-01-21T06:10:38.317Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "alex_orange",
    "url": "/alex_orange",
    "profile_picture_urls": {
      "small": "/assets/avatars/default-14ffa99f59cd01423c64904352cc130ffcb6a802eadfd11777a54485749e60f2.png"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 39386,
    "url": "https://hackerone.com/kubernetes",
    "handle": "kubernetes",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/039/386/486f4380e09776d05a912ca9f46be23f72fe8197_original.png/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/039/386/486f4380e09776d05a912ca9f46be23f72fe8197_original.png/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "Kubernetes",
      "twitter_handle": "kubernetesio",
      "website": "https://kubernetes.io/",
      "about": ""
    }
  },
  "has_bounty?": true,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [
    "CVE-2020-8553"
  ],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2020-10-30T21:59:19.836Z",
  "bug_reporter_agreed_on_going_public_at": "2020-10-30T21:59:19.733Z",
  "team_member_agreed_on_going_public_at": "2020-10-30T21:27:59.877Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Report Submission Form\n\n## Summary:\nUse of nginx.ingress.kubernetes.io/auth* annotations results in a file named {namespace}-{ingress}.passwd. If user knows the namespace and ingress of an ingress they want to compromise they need to be able to create a namespace that is some subset of {namespace}-{ingress}. Then they create an ingress with the remainder of the name and a passwd file of their choosing, this overwrites the other namespace's passwd file and effectively removes the auth layer provided by nginx ingress.\n\n## Kubernetes Version:\n$ kubectl version\nClient Version: version.Info{Major:\"1\", Minor:\"16+\", GitVersion:\"v1.16.5-beta.0\", GitCommit:\"224be7bdce5a9dd0c2fd0d46b83865648e2fe0ba\", GitTreeState:\"archive\", BuildDate:\"2019-12-31T22:42:08Z\", GoVersion:\"go1.12.13\", Compiler:\"gc\", Platform:\"linux/amd64\"}\nServer Version: version.Info{Major:\"1\", Minor:\"16\", GitVersion:\"v1.16.2\", GitCommit:\"c97fe5036ef3df2967d086711e6c0c405941e14b\", GitTreeState:\"clean\", BuildDate:\"2019-10-15T19:09:08Z\", GoVersion:\"go1.12.10\", Compiler:\"gc\", Platform:\"linux/amd64\"}\n\nInstalled via kubeadm on gentoo (though I don't think this is relevant to vulnerability).\n\n## Component Version:\nquay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.26.1\n\n## Steps To Reproduce:\n  1. Install nginx ingress\n  2. Create namespace a and ingress b-c within a with an auth annotation.\n  3. Create namespace a-b and ingress c within a-b with an auth annotation that overrides the passwd file from #2.\n  4. Auth to ingress on a/b-c is now governed by the htpasswd file generated for a-b/c.\n\n## Suggested Resolution:\n1. Change line 141 of internal/ingress/annotations/auth/main.go to %v/%v/%v.\n2. Create folder to go along with.\n3. Check that the folder and file will actually be in the right location (.. is allowed as a namespace).\n\n## Impact\n\nAttacker can override the htpasswd file of another ingress effectively neutralizing the http authentication.",
  "weakness": {
    "id": 142,
    "name": "Authentication Bypass Using an Alternate Path or Channel"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2020-11-29T21:27:59.984Z",
  "allow_singular_disclosure_after": -151758512.78167525,
  "singular_disclosure_allowed": true,
  "vote_count": 7,
  "voters": [
    "ali",
    "sa1tama0",
    "hakivvi",
    "xenonm2r",
    "karca",
    "jeyanthan",
    "destinedtohack"
  ],
  "severity": {
    "rating": "medium",
    "score": 6.6,
    "author_type": "Team",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "high",
      "privileges_required": "high",
      "user_interaction": "none",
      "scope": "unchanged",
      "confidentiality": "high",
      "integrity": "high",
      "availability": "none"
    }
  },
  "structured_scope": {
    "databaseId": 32524,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "https://github.com/kubernetes/ingress-nginx",
    "max_severity": "none"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
