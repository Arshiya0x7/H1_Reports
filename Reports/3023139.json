{
  "id": 3023139,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8zMDIzMTM5",
  "url": "https://hackerone.com/reports/3023139",
  "title": "Memory leak of ftp (with proxy reuse)",
  "state": "Closed",
  "substate": "informative",
  "severity_rating": "none",
  "readable_substate": "Informative",
  "created_at": "2025-03-05T10:53:46.531Z",
  "submitted_at": "2025-03-05T10:53:46.695Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "catenacyber",
    "url": "/catenacyber",
    "profile_picture_urls": {
      "small": "/assets/avatars/default-14ffa99f59cd01423c64904352cc130ffcb6a802eadfd11777a54485749e60f2.png"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 35663,
    "url": "https://hackerone.com/curl",
    "handle": "curl",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/035/663/2faf4c279d437d64bfda6d23d62ce1833813a4d9_original.png/36bca6668139d77be42208d896968344ae7a76c55ee0f8b0f28281ccd492ff02",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/035/663/2faf4c279d437d64bfda6d23d62ce1833813a4d9_original.png/19c85a12ac35f466af1ea2b0ae853bfe5e8f057fb1d6fb62db131707bb67b30d"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "curl",
      "twitter_handle": "",
      "website": "https://curl.se",
      "about": "cURL is an Open Source project providing a library and command-line tool doing internet transfers"
    }
  },
  "has_bounty?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2025-07-01T16:25:41.311Z",
  "bug_reporter_agreed_on_going_public_at": "2025-07-01T16:25:41.166Z",
  "team_member_agreed_on_going_public_at": "2025-07-01T14:10:14.995Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "## Summary:\n[summary of the vulnerability]\n\nThere is a memory leak with FTP (see reproducer and stack trace)\nI found it via fuzzing with https://github.com/catenacyber/curl-fuzzer/tree/proxy (after fixing a small memory leak in curl)\n\nJust reporting a bit raw, not sure this is not just a small leak that does not go out of security vulnerabilities.\nLooks like there are 2 connections `struct connectdata *conn` and the first one of them gets cleaned by `ftp_disconnect` but the second one (with reuse from proxy) is not even if it allocates stuff in `ftp_setup_connection`\n\nI am not even sure the bug is within curl, or if it is in curl_fuzzer\n\n## Affected version\n[Which curl/libcurl version are you using to reproduce? On which platform? `curl -V` typically generates good output to include]\n\ncurl 8.13.0-DEV (x86_64-apple-darwin23.6.0) libcurl/8.13.0-DEV OpenSSL/1.0.2n zlib/1.2.11 libidn2/2.0.4 libpsl/0.19.1 nghttp2/1.55.1 librtmp/2.3\nRelease-Date: [unreleased]\nProtocols: dict file ftp ftps gopher gophers http https imap imaps ipfs ipns ldap ldaps mqtt pop3 pop3s rtmp rtsp smb smbs smtp smtps telnet tftp ws wss\nFeatures: alt-svc AsynchDNS HSTS HTTP2 HTTPS-proxy IDN IPv6 Largefile libz NTLM PSL SSL threadsafe TLS-SRP UnixSockets\n\n## Steps To Reproduce:\n[add details for how we can reproduce the issue]\n\nRun attached fuzz reproducer with the targets built with\n```diff\ndiff --git a/projects/curl/Dockerfile b/projects/curl/Dockerfile\nindex 1dc106a53..23245c9bf 100644\n--- a/projects/curl/Dockerfile\n+++ b/projects/curl/Dockerfile\n@@ -16,11 +16,11 @@\n \n FROM gcr.io/oss-fuzz-base/base-builder\n \n-RUN git clone --depth 1 https://github.com/curl/curl.git /src/curl\n-RUN git clone --depth 1 https://github.com/curl/curl-fuzzer.git /src/curl_fuzzer\n+RUN git clone --depth 1 --branch dummy https://github.com/catenacyber/curl.git /src/curl\n+RUN git clone --depth 1 --branch proxy https://github.com/catenacyber/curl-fuzzer.git /src/curl_fuzzer\n \n # Use curl-fuzzer's scripts to get latest dependencies.\n RUN $SRC/curl_fuzzer/scripts/ossfuzzdeps.sh\n \n WORKDIR $SRC/curl_fuzzer\n```\n\n## Supporting Material/References:\n[list any additional material (e.g. screenshots, logs, etc.)]\n\nOutput of `FUZZ_VERBOSE=1 ./curl_fuzzer_ftp ./minimized-from-5ab60dd6d34f13da35bcebf1f965f8dd6e409e88`\n\n```\nTLV: type 1 length 37\nCheck length of data: 43 \nRemaining length of data: 262 \nTLV: type 2 length 11\nCheck length of data: 60 \nRemaining length of data: 262 \nTLV: type 11 length 9\nCheck length of data: 75 \nRemaining length of data: 262 \nTLV: type 12 length 9\nCheck length of data: 90 \nRemaining length of data: 262 \nTLV: type 13 length 9\nCheck length of data: 105 \nRemaining length of data: 262 \nTLV: type 14 length 9\nCheck length of data: 120 \nRemaining length of data: 262 \nTLV: type 15 length 50\nCheck length of data: 176 \nRemaining length of data: 262 \nTLV: type 16 length 9\nCheck length of data: 191 \nRemaining length of data: 262 \nTLV: type 17 length 34\nCheck length of data: 231 \nRemaining length of data: 262 \nTLV: type 18 length 9\nCheck length of data: 246 \nRemaining length of data: 262 \nTLV: type 72 length 0\nCheck length of data: 252 \nRemaining length of data: 262 \nTLV: type 21 length 4\nCheck length of data: 262 \nRemaining length of data: 262 \nFUZZ: Using socket manager 0 \nFUZZ[0]: Using socket manager 0 \nFUZZ[0]: Sending initial response \nFUZZ: Initial perform; still running? 1 \nFUZZ: loop still running=1 \nFUZZ: select rc=1 \nFUZZ[0]: Received 16 bytes \n==>\nUSER anonymous\n\n<==\nFUZZ[0]: Sending next response: 1 \nFUZZ: send rc=0 \nFUZZ: loop still running=1 \nFUZZ: select rc=1 \nFUZZ[0]: Received 5 bytes \n==>\nPWD\n\n<==\nFUZZ[0]: Sending next response: 2 \nFUZZ: send rc=0 \nFUZZ: loop still running=1 \nFUZZ: select rc=1 \nFUZZ[0]: Received 15 bytes \n==>\nCWD test-%ist\n\n<==\nFUZZ[0]: Sending next response: 3 \nFUZZ: send rc=0 \nFUZZ: loop still running=1 \nFUZZ: select rc=1 \nFUZZ[0]: Received 6 bytes \n==>\nEPSV\n\n<==\nFUZZ[0]: Sending next response: 4 \nFUZZ: send rc=0 \nFUZZ: loop still running=1 \nFUZZ: select rc=1 \nFUZZ[0]: Received 6 bytes \n==>\nPASV\n\n<==\nFUZZ[0]: Sending next response: 5 \n* Connecting to 127.0.1.127 (127.0.1.127) port 55300\n*   Trying 127.0.1.127:55300...\n* Could not set TCP_NODELAY: Operation not supported\n* Connected 2nd connection to 127.0.1.127 port 55300\n> TYPE A\n* pp_statematch, timeout=185\n* pp_statematch, timeout=185\n< 200 Sure\n> LIST\n* pp_statematch, timeout=185\n< 150 Success\n* Maxdownload = -1\n* sendrecv_dl: we are done\n* nread <= 0, server closed connection, bailing\n* abort upload\n* Remembering we are in dir \"test-%ist/\"\n< 226 Everyt???? sent\n* Connection #0 to host 127.0.1.127 left intact\n* Connecting to hostname: 127.0.1.127\n* Re-using existing ftp: connection with host 127.0.0.1\n* Remembering we are in dir \"test-%ist/*.html\"\n* Connection #0 to host 127.0.1.127 left intact\n\n=================================================================\n==15473==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 17 byte(s) in 1 object(s) allocated from:\n    #0 0x55ce0ef26f0f in malloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:68:3\n    #1 0x55ce0ef92cb7 in curl_dbg_malloc /src/curl/lib/memdebug.c:146:9\n    #2 0x55ce0ef92cb7 in curl_dbg_strdup /src/curl/lib/memdebug.c:200:9\n    #3 0x55ce0f093870 in ftp_setup_connection /src/curl/lib/ftp.c:4381:21\n    #4 0x55ce0f005d5d in setup_connection_internals /src/curl/lib/url.c:2024:14\n    #5 0x55ce0efff415 in create_conn /src/curl/lib/url.c:3522:12\n    #6 0x55ce0efff415 in Curl_connect /src/curl/lib/url.c:3803:12\n    #7 0x55ce0efbadff in state_connect /src/curl/lib/multi.c:2149:21\n    #8 0x55ce0efbadff in multi_runsingle /src/curl/lib/multi.c:2273:12\n    #9 0x55ce0efb64d2 in curl_multi_perform /src/curl/lib/multi.c:2619:16\n    #10 0x55ce0ef67b02 in fuzz_handle_transfer(fuzz_data*) /src/curl_fuzzer/curl_fuzzer.cc:424:5\n    #11 0x55ce0ef669a7 in LLVMFuzzerTestOneInput /src/curl_fuzzer/curl_fuzzer.cc:97:3\n```\n\n## Impact\n\n## Summary:",
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 4114183,
      "file_name": "leak-ed83ae30011a435cabd4237bb9a99f920e6d18a8",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/7n8uksw52oehgtc7j43ge9o26r43?response-content-disposition=attachment%3B%20filename%3D%22leak-ed83ae30011a435cabd4237bb9a99f920e6d18a8%22%3B%20filename%2A%3DUTF-8%27%27leak-ed83ae30011a435cabd4237bb9a99f920e6d18a8&response-content-type=font%2Fttf&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ5OK2AYKV%2F20250704%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250704T193251Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECkaCXVzLXdlc3QtMiJHMEUCIQDQS37zLIsGOdtkY4n7Xg2L5thycp5Hy8T7o3qpq71LBAIgJiS73%2FTVArx9lM7xkJLSeum8V8KEjfBVXB1FRq2Yy1EqsQUIMhADGgwwMTM2MTkyNzQ4NDkiDGoPlQ7Cz%2BWdiqn5gSqOBclvxX2Z3Q5lo5IsOmmYfP%2BCb07WIa%2FzHP6y3dCevP3beiay4V56LttMzG9F02Y9gAskEJ86OsDZ1I80NulabdzpH0SUtVBTd6s02%2FTHjxwqZUN%2FHkGsQVqMunC%2BUe9nAqWPpwzyJ7q3SjzQurHfUFaHFpFlUB7rNmOnX4eHmHgkcf2JJFprCbxZV1wbrlsoSKCCaJelE%2FdoJKtFFWg%2FfoDe1B5Vb5mq0hkErGkgx9ZsS30Xaz7na%2BJitPpQfXD1UxQKJwI9SFXCrrHT1dyF0X8klInwV8f6cGIzaxyIikRMOKJnr%2BFmRPyOnsU0RYl%2Fsh3IB0AZO6vPssfwHWMt5FdzfoxxI6xhichwF2pC9h9bw5cZVWkcKAll5bVq%2BzBYxFigfvePBy6HPRSiWP1yR1wiodISAvZ6y%2FGNNIDwxoWa0snu8hHOjDQLkkTP5rUkqcklo8BiAPra%2BEsMsLR%2FhtyM%2FUMTcGGb%2BqZlBV671pJTnwexfouOdt6SFGgGbzWQT%2BVF4QXieYRIewSp396crufE5mn2yiuFGpcAiJNMQ%2FfEj9pkItJvJ70YTZwcsTI95k51q%2FJbNGU2xqx2Q3mMu%2BMyjyL3Ayzjw4X%2FKRDWuipzuuQ41XM7fFJgTura8riJlhm6GUgY0N%2FeCY8o9fG1YAltCIIHHaRnjNRnk4JJmE6LtaQf%2BRUEJTf9JxvYkNr0KCj7wCJnwud%2F%2FrqZYlk2BlPg306HCZKFDKDD9RUYWcW6DWK8%2FZfPxratFNjJW%2FZkSOFvbSktDu07FGeD%2B%2BjkCUxWd12bjivOiOujfomaN76eCZAs5Lag905ap6olcMwVCW90iFzEheISomQIFG%2B8K9gqqF31dQwPuA4xk1MuLzDRkqDDBjqxAb%2Fi5K85aEWyeOeMz3Ye4Pc2w5AapcStBAh06%2FWxx0L8Ot0kL4auM04%2FXqp%2FRGDnCmQTj8CtrxETKV%2Fm%2FKJmpwIbKv58bM%2F3VSzTpgjJYQJvYXuqrATTXozbvoNStiaj7JbAfFXLSCeF5JFgwY%2BpAlqSs7LpvbnihvWGBEpmyPt75LrZDMpQ0k6qHCwaq1Xp0gS8Rsd7U8bYjCd8SztvWMWSX7RGEYjpmK8bQWO9%2FkjQRg%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=cb9e31a5861596672d3b408c2e474a490f3dd7301ab5bc0a0a4d0a6bc3a58568",
      "file_size": 885,
      "type": "font/ttf",
      "moderated": null
    }
  ],
  "allow_singular_disclosure_at": null,
  "vote_count": 11,
  "voters": [
    "zy9ard3",
    "2026",
    "polem4rch",
    "thalaivar304",
    "5picy",
    "neon_mm",
    "dansoappiah",
    "bilalhacker302",
    "agent_0",
    "croweye",
    "and 1 more..."
  ],
  "severity": {
    "rating": "none",
    "author_type": "User"
  },
  "structured_scope": {
    "databaseId": 18844,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "https://github.com/curl/curl",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
