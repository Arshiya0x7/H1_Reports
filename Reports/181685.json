{
  "id": 181685,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xODE2ODU=",
  "url": "https://hackerone.com/reports/181685",
  "title": "Range#initialize_copy null pointer dereference",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "high",
  "readable_substate": "Resolved",
  "created_at": "2016-11-12T01:19:47.017Z",
  "submitted_at": "2016-11-12T01:19:47.017Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "h72",
    "url": "/h72",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/llf9qq317dedunxi4grrtc0q8w2j/3cb67cc78dc0cba55b102dd9eca2ee89b206d3e960be830f070583d9070b69ef"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 15668,
    "url": "https://hackerone.com/shopify-scripts",
    "handle": "shopify-scripts",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/015/668/ebbe467de8ef2fc936053593e1289e30f04c3b06_original.jpg/3cb67cc78dc0cba55b102dd9eca2ee89b206d3e960be830f070583d9070b69ef",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/015/668/ebbe467de8ef2fc936053593e1289e30f04c3b06_original.jpg/d9695107bfcd68eeb1c9e0912b109cdae9a6c00c0bda6fd4cbd6d9bdb828840a"
    },
    "permissions": [],
    "submission_state": "paused",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "shopify-scripts",
      "twitter_handle": "",
      "website": "",
      "about": ""
    }
  },
  "has_bounty?": true,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2016-12-17T01:03:44.537Z",
  "bug_reporter_agreed_on_going_public_at": "2016-12-17T01:03:44.485Z",
  "team_member_agreed_on_going_public_at": "2016-12-16T19:47:51.689Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Heya!\n\nIt's possible to segfault mruby through mruby-engine with the following snippet of code:\n\n    Range.remove_method(:initialize_copy)\n    (1..2).dup.to_s\n\nThis can be triggered through mruby-engine like this:\n\n    MRubyEngine.new(512*1024, 1000, 1000).sandbox_eval(\"/tmp\", %{\n      Range.remove_method(:initialize_copy)\n      (1..2).dup.to_s\n    })\n\nThe `dup` and `clone` methods allocate a new object and then call `initialize_copy` on the new object with the old object as an argument to copy over internal state.\n\nRemoving `Range#initialize_copy` makes it possible to construct an uninitialized `Range` object. Calling (pretty much) any instance method on the uninitialized `Range` object afterwards causes mruby to dereference a null pointer, leading to a segfault.\n\nI've attached a patch that fixes the bug by copying internal range state before calling `initialize_copy`, similar to what mruby already does for classes and modules.",
  "bounty_amount": "10000.0",
  "formatted_bounty": "$10,000",
  "weakness": {
    "id": 48,
    "name": "Uncontrolled Resource Consumption"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 134226,
      "file_name": "range-initialize-copy-segfault.patch",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/134/226/c17732014bbc23d135074255a49138104c07766b/range-initialize-copy-segfault.patch?response-content-disposition=attachment%3B%20filename%3D%22range-initialize-copy-segfault.patch%22%3B%20filename%2A%3DUTF-8%27%27range-initialize-copy-segfault.patch&response-content-type=text%2Fx-diff&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQYHMKEKRC%2F20250922%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250922T001419Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJX%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDJMPTJY2Ir2MOCLrdRMnnjxUpuyBJjyMSNuEDmlSHuBAIhANPVh52Ag0ZhlNPMGw44%2B0wevQudlqNF3Xg6fRQMKiFjKrEFCB4QAxoMMDEzNjE5Mjc0ODQ5IgyIhbXp9Yg8uGlqM1QqjgWWsiaoe3I%2BSF7WxGq8IIhnVidUmZ%2F8C%2FhUgt8ldnpR11DICo9gXh0RZgZsnCVexOzrGuHMb16wqqfd8WQOAoJlOV1x72U3%2B6rjq0CLxhNhln%2FfEHgG31Sr7%2FrDSk3RKRGFOBTJWAQoAjFJnTJuZZ8iB6fayGRovsupR4yLVzJA83j8cj2n%2BEB%2Bs53pwmSpAq8rxnz9u4FIa%2B3%2BfIo05PSkTgHzWzRNNmC2o71Rc%2Bb2rYR1nDD4gGSurav%2FbrG%2FKpRrZI1V8pjr6ExTqDkyBeVD9na1ElVsFCY857mdjS9FXEqdmhf%2BauA0xpXkIVGF53wiSv5M%2BVNtV2%2BfzkFOQrz7F2ye5ED0%2BZ6yMxfoXzdGfqNIR0mtJRPYOVS%2FIDmrs98mPLHMrVXdW3BI8V876%2FdPUYJWumYigNynQ4CgDn67p%2BDNnV9A9PCEkb8ncroo3bqlhL9xtNhjcoUOmlDFKZ9IW046vzLFM3hY6nDX%2FCGFqZPvpyrCeukGZaMVhzsu0m%2BiOPpKkP0I2KiTJLiH0QfvqeKiuBPcpA9A%2BDjFlpMjYm%2BmrUjsJBj8I817PdjmifBAvJJBZmnzBHNtX3XpDWFTN2%2B8YdDSs4JnQce8cQ%2FgSll5wEqYAPGEbVXj6ZX4SZbwbRSt1fdPF7nhRAj92J9CBe4hyri7YYmVEBPuWtxdIp9oNOf7YIgBOYjxy4e5o4OEa2pen31rGqhCRXu1Rv5nDd8oHsji4cDy1xxQfASYHC9jkNHYaHFmKHs0RBVGQdEXa01q9t6Yt%2FMn80NulQaE5nqUuk%2F4YzOoe9CA%2FjeqNxMbnyk58tWVucpohqQeX0MQehKQ8cOvtjAEC63wZYyXpl6tTQY8Q0abSfPrtrUwv8%2FBxgY6sAF3RlFkBTDPOiSRIxQuSZc%2Fd3HVNzgDeHk03X20ZUfQXfQbd%2FlCxpmIFwoHLwWD4ZKv9oYtwyy0uSPXTyoVz3O7mwEOTOrq182tY%2BpcE%2BBDUfzyADgimUIfFAHPkQpe55dbUMq26YP4UOyD3TlXhsW%2B6SLeClfDefdoqWzRKCd29rzU9kQf7VFClo4z4bQhRTCB3Q9QmM9aLDYvrVAvrBiR5wn5y%2BiT%2BlODJolyFTOmRA%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=7f41c843ba64cdd955887d0d1f43418907775ff2bdf138d19c816e1011fbaed5",
      "file_size": 3563,
      "type": "text/x-diff",
      "moderated": null
    }
  ],
  "allow_singular_disclosure_at": "2017-01-15T19:47:51.751Z",
  "allow_singular_disclosure_after": -273990388.1472342,
  "singular_disclosure_allowed": true,
  "vote_count": 9,
  "voters": [
    "nischalxd",
    "mpz",
    "eveeez",
    "spetr0x",
    "scept1c",
    "elakrimi",
    "pr0x_r00t3r",
    "hackerjuan",
    "br0k3nsec"
  ],
  "severity": {
    "rating": "high",
    "author_type": "Team"
  },
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
