{
  "id": 3255707,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8zMjU1NzA3",
  "url": "https://hackerone.com/reports/3255707",
  "title": "Windows Device Names Still Allow Path Traversal in UNC Paths After CVE-2025-27210 Fix",
  "state": "Closed",
  "substate": "informative",
  "severity_rating": "high",
  "readable_substate": "Informative",
  "created_at": "2025-07-16T11:13:02.869Z",
  "submitted_at": "2025-07-16T11:13:02.994Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "oblivionsage",
    "url": "/oblivionsage",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/ip4cyu4gxdh9vdw49fk160hphdhf/36bca6668139d77be42208d896968344ae7a76c55ee0f8b0f28281ccd492ff02"
    },
    "is_me?": false,
    "cleared": false,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 22984,
    "url": "https://hackerone.com/nodejs",
    "handle": "nodejs",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/022/984/e600648ace4a8553247bce967d461a030aa81d49_original.png/36bca6668139d77be42208d896968344ae7a76c55ee0f8b0f28281ccd492ff02",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/022/984/e600648ace4a8553247bce967d461a030aa81d49_original.png/19c85a12ac35f466af1ea2b0ae853bfe5e8f057fb1d6fb62db131707bb67b30d"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "Node.js",
      "twitter_handle": "nodejs",
      "website": "https://nodejs.org",
      "about": "The Node.js JavaScript Runtime"
    }
  },
  "has_bounty?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2025-07-28T18:56:39.737Z",
  "bug_reporter_agreed_on_going_public_at": "2025-07-28T17:59:21.226Z",
  "team_member_agreed_on_going_public_at": "2025-07-28T18:56:39.432Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "## Summary:\n\nI found that Windows device names (CON, PRN, AUX, etc.) can still be used for path traversal attacks when working with UNC network paths, even after the CVE-2025-27210 patch. So basically, the fix only covered regular paths but missed the UNC path scenario when using `path.join()`\n\n## Description:\n\nI was testing the recent CVE-2025-27210 fix and noticed something . The patch works fine for regular paths - if I try `path.normalize('CON:../../secret.txt')`, it correctly returns `.\\CON:..\\..\\secret.txt.` Great that's fixed\n\n\n\nBut then I started testing UNC paths (you know, network paths like `\\\\server\\share`) and found the vulnerability still exists there. The issue is that when you use `path.join()` with a UNC path and a device name, the device name gets stripped and the traversal happens\n\n\n\nHere's what I mean:\n\n```javascript\nconst path = require('path');\n\n// This is fixed (regular path)\nconsole.log(path.normalize('CON:../../secret.txt'));\n// Output: .\\CON:..\\..\\secret.txt ✓\n\n// But this is still vulnerable (UNC path)\nconsole.log(path.join('\\\\\\\\server\\\\share\\\\uploads', 'CON:../../secret.txt'));\n// Output: \\\\server\\share\\secret.txt ✗\n// Should be: \\\\server\\share\\uploads\\.\\CON:..\\..\\secret.txt\n```\n\n{F4574346}\n\n\nThis happens because the normalize function inside `path.join()` handles UNC paths differently than regular paths\n\n\n\n## Steps to Reproduce:\n\n1. Use any Node.js version including the latest v24.4.1 (with CVE-2025-27210 fix)\n\n2. Create a simple test file:\n\n```javascript\nconst path = require('path');\n\nfunction getNetworkFile(userInput) {\n  const basePath = '\\\\\\\\\\\\\\\\fileserver\\\\\\\\public\\\\\\\\uploads';\n  return path.join(basePath, userInput);\n}\n\nconsole.log(getNetworkFile('CON:../../../private/passwords.txt'));\n\"\n```\n\n3. Run the code\n\n4. Expected result: `\\\\fileserver\\public\\uploads\\.\\CON:..\\..\\..\\private\\passwords.txt`\n\n5. Actual result: `\\\\fileserver\\public\\private\\passwords.txt` (escaped the uploads directory!)\n\n\n{F4574401}\n\n\n## Why This is Different from CVE-2025-27210:\n\nSo I know what you're thinking - \"didn't we just fix this?\" Well, kinda. CVE-2025-27210 fixed the issue for regular paths by adding the `.\\` prefix when it detects device names. But that fix only applies to direct `normalize()` calls or regular local paths\n\nThe difference:\n\n+ CVE-2025-27210: Fixed `path.normalize('CON:../')` for local paths\n+ This bug: UNC paths like `\\\\server\\share` + device names still vulnerable when using `path.join()`\n\nIt's essentially a bypass of the CVE-2025-27210 fix for network scenarios\n\n## Mitigation:\n\nTo fix this, you should apply the same device name validation logic to UNC paths in the `path.join()` function. Specifically, when joining paths that start with `\\\\,` the code needs to check for device names and add the `.\\` prefix just like it does for regular paths\n\nThe fix probably needs to go in the normalize function's UNC path handling section, around where it processes paths starting with `\\\\.`\n\n## Impact\n\nAn attacker could read files outside the intended directory on Windows network shares :\n\n+ File sharing applications (escape to other users' folders)\n+ Cloud storage systems using UNC paths\n+ Corporate network shares (access sensitive documents)\n+ Any Node.js app that serves files from network locations\n\nAlso, this could lead to lateral movement in corporate networks - imagine escaping from `\\\\webapp\\public` to `\\\\webapp\\C$\\Windows\\System32\\config` or even to other servers like `\\\\adminserver\\C$`.",
  "weakness": {
    "id": 19,
    "name": "Path Traversal"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 4574346,
      "file_name": "image.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/n0ak28lmrtxqzbi0fi8408sgzops?response-content-disposition=attachment%3B%20filename%3D%22image.png%22%3B%20filename%2A%3DUTF-8%27%27image.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQWRKOE2Z7%2F20250728%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250728T191508Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEGkaCXVzLXdlc3QtMiJHMEUCIQCiWf353OSM2ePMO2Fdv8XQxazUBt9PUFzJ7b9vwQRAyAIgBJ3lvz6l6jdiiGvKkXTcmhpkPZdO3WYnI3xID62ck4cquwUIkv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARADGgwwMTM2MTkyNzQ4NDkiDGm8U5DGIWIzTtIX8iqPBQeURO5pJSzA0fi8W3nLC9lj16bL4VVLiuYp5iu%2B9Jhnce7ktVbitNEE6vmjUh8Curl5X2AgPLcYPcFBGLOmEx3ZuwDgK%2FBAa5wNxtrhYNZ9xP5bUltEG6Zd1OLc9yp4AZ7QorSfFkdxIvlFUJkoVRkrH6%2BYWi%2Fp8B3nNeXWE1IKta3vSPJ7IhrrR9sCNzebCF%2F%2FqgTLF%2Bt4SfhVaz6j6NWO1SeYj%2FS1G2jHhGGT%2FD6P0SBd%2BQ%2BusCOYCwfnWmE%2Fh8eWIIg9JA4rb7mkbaCwn04QltTbF0hnbLCWDbcXwepNovLeqwNC4XvTBiOzO%2FDENfDhgmF%2BcwanBJ9RavQnatWNzJ4NEg3dF7AnVVVqi85p6oBMC4ft%2Bvy%2F0CBtPqXtIR1R6VGkQfxZP6V0nblOP%2B8qy9lJOYKfJTU1pOxotBXXTTSV3V5%2BLG80j1GRh2zbfVupy2Mvz9s7VHOSR0lJ9qfJm8KNePnpeZUCE9omnFijjl%2FRWOUnyB8Jk%2B4tYWRnQJqPtwVSebKVcg1aNdRbD3SbjlhXrkMIwUsCrPkXhLE3GojEjqMux3BKYFzzUjcNUgCv8eAGUkbS%2FS6IyQeABAsd4Lbo3dNGGkAx5rJxwzQYP0CooOOK0509hGyhDu%2B%2B6IXm8aWCa1Xe3mNQSSmasA7%2FBaHjTowfpDTFKzCtY3HZxM7LaN0n5rX%2BLTP1OxKI5iUplxqL4%2Bik6PWjwyZOdLcjuZ2HaEHxcACkLPmSqBGcFviRPXq4sLpWZ4NqUX7ICbS78ycNZmTf7e0e%2BsKZFULOdYKv6XgukgWakdbM6I9bPRwzsKW%2FnnZkiH3yG2ldJCtbYHvnJL0%2Bpw1GyY%2FAE6aMEw7CoUaceCDCg05UqmgwtsqexAY6sQG%2BHGrsEi9nRZqX9Dpj%2FWu9r3HApqQdUFi0aMJ2clVAwI6ELji1UfTanvPJwBDI1oEtGL1%2B6OukWU17bMuvImeSX887NwzkORBFnCiLHta9yCuwOX2esn8zgpdLO2wGkueTNO7j6gKUOgWLR1BvK4dOv5lo42zRCV59u84nOXsHscQcMus%2FYp6jZ0v7wU%2FMxcd56r%2FqR60%2B5%2FN434ROBcvEOmOVK1PiA2rOd%2BcGJqrKJi0%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=c3e29cc3014afebd9ac98582b79f1682965fcbab2a8d6570249183ecd5dafb9f",
      "file_size": 54026,
      "type": "image/png",
      "moderated": false
    },
    {
      "id": 4574401,
      "file_name": "image.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/lxr4cg5nrzsga6s2ae5xmdglp7r9?response-content-disposition=attachment%3B%20filename%3D%22image.png%22%3B%20filename%2A%3DUTF-8%27%27image.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQWRKOE2Z7%2F20250728%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250728T191508Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEGkaCXVzLXdlc3QtMiJHMEUCIQCiWf353OSM2ePMO2Fdv8XQxazUBt9PUFzJ7b9vwQRAyAIgBJ3lvz6l6jdiiGvKkXTcmhpkPZdO3WYnI3xID62ck4cquwUIkv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARADGgwwMTM2MTkyNzQ4NDkiDGm8U5DGIWIzTtIX8iqPBQeURO5pJSzA0fi8W3nLC9lj16bL4VVLiuYp5iu%2B9Jhnce7ktVbitNEE6vmjUh8Curl5X2AgPLcYPcFBGLOmEx3ZuwDgK%2FBAa5wNxtrhYNZ9xP5bUltEG6Zd1OLc9yp4AZ7QorSfFkdxIvlFUJkoVRkrH6%2BYWi%2Fp8B3nNeXWE1IKta3vSPJ7IhrrR9sCNzebCF%2F%2FqgTLF%2Bt4SfhVaz6j6NWO1SeYj%2FS1G2jHhGGT%2FD6P0SBd%2BQ%2BusCOYCwfnWmE%2Fh8eWIIg9JA4rb7mkbaCwn04QltTbF0hnbLCWDbcXwepNovLeqwNC4XvTBiOzO%2FDENfDhgmF%2BcwanBJ9RavQnatWNzJ4NEg3dF7AnVVVqi85p6oBMC4ft%2Bvy%2F0CBtPqXtIR1R6VGkQfxZP6V0nblOP%2B8qy9lJOYKfJTU1pOxotBXXTTSV3V5%2BLG80j1GRh2zbfVupy2Mvz9s7VHOSR0lJ9qfJm8KNePnpeZUCE9omnFijjl%2FRWOUnyB8Jk%2B4tYWRnQJqPtwVSebKVcg1aNdRbD3SbjlhXrkMIwUsCrPkXhLE3GojEjqMux3BKYFzzUjcNUgCv8eAGUkbS%2FS6IyQeABAsd4Lbo3dNGGkAx5rJxwzQYP0CooOOK0509hGyhDu%2B%2B6IXm8aWCa1Xe3mNQSSmasA7%2FBaHjTowfpDTFKzCtY3HZxM7LaN0n5rX%2BLTP1OxKI5iUplxqL4%2Bik6PWjwyZOdLcjuZ2HaEHxcACkLPmSqBGcFviRPXq4sLpWZ4NqUX7ICbS78ycNZmTf7e0e%2BsKZFULOdYKv6XgukgWakdbM6I9bPRwzsKW%2FnnZkiH3yG2ldJCtbYHvnJL0%2Bpw1GyY%2FAE6aMEw7CoUaceCDCg05UqmgwtsqexAY6sQG%2BHGrsEi9nRZqX9Dpj%2FWu9r3HApqQdUFi0aMJ2clVAwI6ELji1UfTanvPJwBDI1oEtGL1%2B6OukWU17bMuvImeSX887NwzkORBFnCiLHta9yCuwOX2esn8zgpdLO2wGkueTNO7j6gKUOgWLR1BvK4dOv5lo42zRCV59u84nOXsHscQcMus%2FYp6jZ0v7wU%2FMxcd56r%2FqR60%2B5%2FN434ROBcvEOmOVK1PiA2rOd%2BcGJqrKJi0%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=92db0cf2f40584fe697417753394cd67ca973cff8b24519b067c841ed0fbc4a7",
      "file_size": 46605,
      "type": "image/png",
      "moderated": false
    }
  ],
  "allow_singular_disclosure_at": null,
  "vote_count": 1,
  "voters": [
    "2026"
  ],
  "severity": {
    "rating": "high",
    "score": 7.5,
    "author_type": "User",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "low",
      "privileges_required": "none",
      "user_interaction": "none",
      "scope": "unchanged",
      "confidentiality": "none",
      "integrity": "none",
      "availability": "high"
    }
  },
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
