{
  "id": 78260,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC83ODI2MA==",
  "url": "https://hackerone.com/reports/78260",
  "title": "Stored XSS в имени песни (2) на платёжном гейте.",
  "state": "Closed",
  "substate": "resolved",
  "readable_substate": "Resolved",
  "created_at": "2015-07-24T00:35:07.871Z",
  "submitted_at": "2015-07-24T00:35:07.871Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "4lemon",
    "url": "/4lemon",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/002/194/aa0eb7d0d4c0ee7d20ae9b2550953b4eeda26ef9_original.jpg/3cb67cc78dc0cba55b102dd9eca2ee89b206d3e960be830f070583d9070b69ef"
    },
    "is_me?": false,
    "cleared": true,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 1782,
    "url": "https://hackerone.com/ok",
    "handle": "ok",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/001/782/0e7098faf92785cddc86bcf693dbb068dad14311_original.jpg/3cb67cc78dc0cba55b102dd9eca2ee89b206d3e960be830f070583d9070b69ef",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/001/782/0e7098faf92785cddc86bcf693dbb068dad14311_original.jpg/d9695107bfcd68eeb1c9e0912b109cdae9a6c00c0bda6fd4cbd6d9bdb828840a"
    },
    "permissions": [],
    "submission_state": "disabled",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": false,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "ok.ru",
      "twitter_handle": "",
      "website": "http://ok.ru",
      "about": "Odnoklassniki social network"
    }
  },
  "has_bounty?": true,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "no-content",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2017-03-20T16:04:22.093Z",
  "bug_reporter_agreed_on_going_public_at": "2017-02-27T16:05:12.585Z",
  "team_member_agreed_on_going_public_at": "2017-03-20T16:04:22.048Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "",
  "weakness": {
    "id": 60,
    "name": "Cross-site Scripting (XSS) - Generic"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2017-03-29T16:05:12.617Z",
  "allow_singular_disclosure_after": -267693022.2849889,
  "singular_disclosure_allowed": true,
  "vote_count": 5,
  "voters": [
    "sp1d3rs",
    "eveeez",
    "shivammusic",
    "spetr0x",
    "dyabla"
  ],
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "id": 3598,
      "category": "team",
      "content": "4lemon прислал способ эксплуатации хранимой XSS, использующий комбинацию уязвимостей сервиса покупки музыки в Одноклассниках:\n\n> Я уже описывал как сделать песню с опасными тэгами в предыдущем репорте. Нашлось, где это можно использывать ещё. Причём в данном случае эксплуатация на порядок проще.\n\n> 1. Открываем http://ok.ru/gifts\n> 2. Кликаем любой подарок\n> 3.Выбираем кому дарить (можно самому себе), это абсолютно не важно.\n> 4. На следующем экране кликаем \"добавить песню\". При выборе \"моя музыка\" систем говорит, что нету таких песен, которые можно добавить.\n> 5. Выбираем любую - дальше магия - в burp proxy выбираем \"перехватывать все запросы\" - и после нажатия кнопки \"добавить\", в перехаченом запросе, изменяем id трэка на наш (122884868317642), заряженный трэк. (Кстати, в итоге, получается что можно добавить любой трэк из системы, что, по всей видимости, тоже является логической ошибкой) 5.1 Отравляем запрос дальше.\n> 6. Происходит каскад редиректов. И срабатывает XSS\n> Самое интересное, что если достать из прокси запрос к paymentnew.ok.ru то в нём уже есть вся необходимая инфа и открытие этой ссылки не привязано к сессии пользователя его создавшего, таким образом, можно атаковать любого пользователя (для примера открыл эту ссылку в другом браузере).\n\n",
      "updated_at": "2017-03-20T16:02:12.967Z",
      "can_view?": true,
      "can_create?": false,
      "attachments": [],
      "user": {
        "id": 21822,
        "username": "alexandra_ok",
        "name": "Alexandra Svatikova",
        "bio": null,
        "cleared": false,
        "verified": false,
        "website": null,
        "location": null,
        "created_at": "2015-05-12T10:22:30.308Z",
        "url": "https://hackerone.com/alexandra_ok",
        "hackerone_triager": false,
        "hackerone_employee": false,
        "user_type": "company",
        "profile_picture_urls": {
          "small": "/assets/avatars/default-14ffa99f59cd01423c64904352cc130ffcb6a802eadfd11777a54485749e60f2.png",
          "medium": "/assets/avatars/default-14ffa99f59cd01423c64904352cc130ffcb6a802eadfd11777a54485749e60f2.png",
          "xtralarge": "/assets/avatars/default-14ffa99f59cd01423c64904352cc130ffcb6a802eadfd11777a54485749e60f2.png"
        }
      }
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
