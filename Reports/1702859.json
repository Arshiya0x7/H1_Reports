{
  "id": 1702859,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNzAyODU5",
  "url": "https://hackerone.com/reports/1702859",
  "title": "Unexpected deserialization in Kredis",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "high",
  "readable_substate": "Resolved",
  "created_at": "2022-09-17T07:55:51.178Z",
  "submitted_at": "2022-09-17T07:55:51.251Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "ooooooo_q",
    "url": "/ooooooo_q",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/012/811/4b35334fa2fcf93b2e510174e09470fb42bbf03a_original.gif/20fc426031f09e5347054871ae4e3af2478fd2b3d5e8a321468ecf6f2da5ac20"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 22,
    "url": "https://hackerone.com/rails",
    "handle": "rails",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/000/022/5e2b46658c8b86bed62f574d8e1793f353cbbc63_original.png/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/000/022/5e2b46658c8b86bed62f574d8e1793f353cbbc63_original.png/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "Ruby on Rails",
      "twitter_handle": "rails",
      "website": "http://rubyonrails.org/security",
      "about": "Web development that doesn't hurt."
    }
  },
  "has_bounty?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [
    "CVE-2023-27531"
  ],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2023-08-16T04:50:31.204Z",
  "bug_reporter_agreed_on_going_public_at": "2023-07-17T04:50:29.006Z",
  "team_member_agreed_on_going_public_at": null,
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Unexpected classes may be deserialized because `JSON.load` is used to cast json in [Kredis](https://github.com/rails/kredis).\n\nhttps://github.com/rails/kredis/blob/v1.3.0/lib/kredis/type/json.rb\n\n```ruby\nmodule Kredis\n  module Type\n    class Json < ActiveModel::Type::Value\n      def type\n        :json\n      end\n\n      def cast_value(value)\n        JSON.load(value)\n      end\n```      \n\n### PoC\n\nprepare kredis with rails\n\n```\n❯ rails new rails_server -G -M -O -C -A -J -T\n# Rails 7.0.4 install\n\n❯ cd rails_server\n\n# Edit Gemfile to uncomment `gem \"kredis\"` \n❯ bundle install\n# kredis 1.3.0 install\n\n❯ rails kredis:install\n```\n\n```ruby\n❯ bundle exec rails c\nLoading development environment (Rails 7.0.4)\nirb(main):001:0> abc = 'abc'.to_json_raw_object\n=> {\"json_class\"=>\"String\", \"raw\"=>[97, 98, 99]}\n\nirb(main):002:0> json = Kredis.json \"json_load\"\n=>\n#<Kredis::Types::Scalar:0x00000001099ea250\n...\n\nirb(main):003:0> json.value = abc\n=> {\"json_class\"=>\"String\", \"raw\"=>[97, 98, 99]}\n\nirb(main):004:0> json.value\n=> \"abc\"\n```\n\nThe return value of `json.value` should be a hash object, but it is deserialized as a string object.\n\n```ruby\nirb(main):005:0> json.value = /test/\n=> /test/\n\nirb(main):006:0> json.value\n=> \"(?-mix:test)\"\n\nirb(main):007:0> json.value = /test/.as_json\n=> \"(?-mix:test)\"\n\nirb(main):008:0> json.value\n=> \"(?-mix:test)\"\n\nirb(main):009:0> require 'json/add/core'\n=> true\n\nirb(main):010:0> json.value = /test/.as_json\n=> {\"json_class\"=>\"Regexp\", \"o\"=>0, \"s\"=>\"test\"}\n\nirb(main):011:0> json.value\n=> /test/\n```\n\nIf [json/add/core](https://github.com/flori/json/tree/master/lib/json/add)  is loaded, classes such as regular expressions can also be deserialized.\n\n## Impact\n\nIf a hash is passed to `Kredis.json` by user input, reading the value may cause unexpected problems.\n\nThe only deserializable classes are those with `self.json_create` declared, usually String class are possible.(https://github.com/flori/json/blob/v2.6.2/lib/json/pure/generator.rb#L434)\n\n\nIf `json/add/core` is loaded, it is possible to deserialize RegExp, etc., thus risking ReDoS, etc.",
  "weakness": {
    "id": 52,
    "name": "Deserialization of Untrusted Data"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2023-08-16T04:50:29.077Z",
  "allow_singular_disclosure_after": -66238444.225661725,
  "singular_disclosure_allowed": true,
  "vote_count": 11,
  "voters": [
    "he4am",
    "yxw21",
    "zy9ard3",
    "7odamoo",
    "kerolesmagdy",
    "eminfidan",
    "mo5gh0s7",
    "y1ld1r1m",
    "yau_",
    "williwaw",
    "and 1 more..."
  ],
  "severity": {
    "rating": "high",
    "author_type": "Team"
  },
  "structured_scope": {
    "databaseId": 160,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "https://github.com/rails/rails",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
