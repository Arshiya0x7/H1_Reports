{
  "id": 728110,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC83MjgxMTA=",
  "url": "https://hackerone.com/reports/728110",
  "title": "[HTAF4-213] [Pre-submission] CVE-2018-2879 (padding oracle attack in the Oracle Access Manager) at https://█████████",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "high",
  "readable_substate": "Resolved",
  "created_at": "2019-11-03T04:23:16.396Z",
  "submitted_at": "2019-11-03T04:23:16.396Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "sp1d3rs",
    "url": "/sp1d3rs",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/079/690/6853ada3e124bdd8616b1be752223b558de38195_original.png/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1"
    },
    "is_me?": false,
    "cleared": true,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 16064,
    "url": "https://hackerone.com/deptofdefense",
    "handle": "deptofdefense",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/016/064/46cd0286b1fa224aaa2cb9dfaaca9fa22b5b80b2_original.png/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/016/064/46cd0286b1fa224aaa2cb9dfaaca9fa22b5b80b2_original.png/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": false,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "U.S. Dept Of Defense",
      "twitter_handle": "DC3VDP",
      "website": "https://bit.ly/3ntULtN",
      "about": ""
    }
  },
  "has_bounty?": true,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": true,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [
    "CVE-2018-2879"
  ],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2021-07-29T19:43:36.746Z",
  "bug_reporter_agreed_on_going_public_at": "2021-07-27T08:02:26.597Z",
  "team_member_agreed_on_going_public_at": "2021-07-29T19:43:36.632Z",
  "comments_closed?": true,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "##Description\nWe were able to identify CVE-2018-2879 in Oracle Access Manager, used on the https://██████\nLink to the CVE: https://nvd.nist.gov/vuln/detail/CVE-2018-2879\nThis vulnerability is rated critical, and may allow unauthenticated attacker with network access via HTTP to compromise Oracle Access Manager.\nIt's possible to conduct padding oracle attack and recover plaintext from `encquery` parameter\nMaterials:\nhttps://sec-consult.com/en/blog/2018/05/oracle-access-managers-identity-crisis/\n\n##POC\nWe modified https://github.com/redtimmy/OAMBuster/blob/master/oambuster.py proof-of concept for https://█████ (it required some changes, for example `gcds-consent=true` is necessary in all requests to not face with consent banner page.\nHere is it:\n█████████\nIt can be launched in the next way to simply test for padding oracle and recover plaintext:\n```\noambuster.py -d https://██████████\n```\nThe result (decrypt process can take some time, for example on the screenshot above it's not fully finished, but you can already see readable parts):\n███████\n\nThis confirms that vulnerability is valid.\n\n##Suggested fix\nApply patch & update OAM instance\n\n## Impact\n\nPadding oracle attack allows us to decrypt any messages. As all the encrypted messages (encquery, encreply, OAMAuthnCookie) are encrypted with the same key, we can decrypt any of these messages.\nThis attack can also be used to encrypt messages. So if we construct a valid authentication cookie and encrypt it with our padding oracle attack, we can pass it off as valid to the web server and perform authentication bypass. \n\nWe will research this further and will update report with new information.",
  "weakness": {
    "id": 32,
    "name": "Cryptographic Issues - Generic"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 3,
  "voters": [
    "roland_hack",
    "run_win",
    "butterfly143"
  ],
  "severity": {
    "rating": "high",
    "author_type": "Team"
  },
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
