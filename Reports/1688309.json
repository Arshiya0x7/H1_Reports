{
  "id": 1688309,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNjg4MzA5",
  "url": "https://hackerone.com/reports/1688309",
  "title": "[MK8DX] Improper metadata parsing",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "critical",
  "readable_substate": "Resolved",
  "created_at": "2022-09-01T02:51:56.085Z",
  "submitted_at": "2022-09-01T02:51:56.172Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "crazy_man123",
    "url": "/crazy_man123",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/8r3fqcjglboqk3hwiqm07bomd3bl/3cb67cc78dc0cba55b102dd9eca2ee89b206d3e960be830f070583d9070b69ef"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 16634,
    "url": "https://hackerone.com/nintendo",
    "handle": "nintendo",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/016/634/999cefca933756faeeb2ea39c07557943437c94f_original.png/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/016/634/999cefca933756faeeb2ea39c07557943437c94f_original.png/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "Nintendo",
      "twitter_handle": "",
      "website": "http://www.nintendo.com",
      "about": ""
    }
  },
  "has_bounty?": true,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "no-content",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2023-08-17T00:16:05.217Z",
  "bug_reporter_agreed_on_going_public_at": "2022-12-20T14:12:57.991Z",
  "team_member_agreed_on_going_public_at": "2023-08-17T00:16:05.086Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "",
  "weakness": {
    "id": 51,
    "name": "NULL Pointer Dereference"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 23,
  "voters": [
    "roccodev",
    "lones",
    "zy9ard3",
    "neilx",
    "kerolesmagdy",
    "shivammusic",
    "securbyte",
    "wbd-",
    "godfatherjoy",
    "shell3d",
    "and 13 more..."
  ],
  "severity": {
    "rating": "critical",
    "score": 9.3,
    "author_type": "User",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "low",
      "privileges_required": "none",
      "user_interaction": "none",
      "scope": "changed",
      "confidentiality": "none",
      "integrity": "low",
      "availability": "high"
    }
  },
  "structured_scope": {
    "databaseId": 372585,
    "asset_type": "HARDWARE",
    "asset_identifier": "Nintendo Switch applications for which Nintendo is the publisher worldwide",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "id": 334194,
      "category": "team",
      "content": "-",
      "updated_at": "2023-08-17T00:15:47.219Z",
      "can_view?": true,
      "can_create?": false,
      "attachments": [],
      "user": {
        "id": 60412,
        "username": "tattsun",
        "name": "Ramen Chevalier",
        "bio": null,
        "cleared": false,
        "verified": false,
        "website": null,
        "location": null,
        "created_at": "2016-03-11T10:24:56.230Z",
        "url": "https://hackerone.com/tattsun",
        "hackerone_triager": false,
        "hackerone_employee": false,
        "user_type": "company",
        "profile_picture_urls": {
          "small": "/assets/avatars/default-14ffa99f59cd01423c64904352cc130ffcb6a802eadfd11777a54485749e60f2.png",
          "medium": "/assets/avatars/default-14ffa99f59cd01423c64904352cc130ffcb6a802eadfd11777a54485749e60f2.png",
          "xtralarge": "/assets/avatars/default-14ffa99f59cd01423c64904352cc130ffcb6a802eadfd11777a54485749e60f2.png"
        }
      }
    },
    {
      "id": 232966,
      "category": "researcher",
      "content": "# Introduction\n\nThis vulnerability impacts:\n\n- Mario Kart 8 Deluxe on the Switch\n- Mario Kart 8 on the WiiU\n\n**The vulnerability was fixed for Mario Kart 8 Deluxe the 7 December, 2022 with the release of v2.2 (or v851968 for the internal version)**\n**The vulnerability was fixed for Mario Kart 8 the 3 August, 2023 with the release of v4.2 (or v81 for the internal version)**\n\n---\n&nbsp;\n\nThe competition/tournaments ([SimpleSearchObject](https://github.com/kinnay/NintendoClients/wiki/Matchmake-Extension-Protocol-(MK8D)#simplesearchobject-structure)) contains a 'metadata' field, it is used by the game to store tournament data such as:\n\n- Competition name (**ID 2**)\n- Description (unused but still exists, **ID 4**)\n- Red/Blue team names (if applicable, **ID 7/8** respectively)\n- Icon type (**ID 3**)\n- etc ...\n\nIt's stored with the ``ChunkData`` format: (stored in little endian for MK8DX)\n\n**ChunkData**\n\n| Type     | Description |\n| ------------| ----------- |\n| uint16_t      | Magic (0x5a5a, 'ZZ' in ASCII)       |\n| ChunkDataList[]  | List of chunk data 'list', goes until end marker       |\n| uint8_t      | End marker ( 0xff)     |\n\n**ChunkDataList**\n\n| Type     | Description |\n| ------------| ----------- |\n| uint8_t      | ID       |\n| uint16_t  | Length       |\n| T    | Any data of size 'length' (previous field)     |\n\nThen the game would try to extract competition data like this: \n\n```c++\nvoid ChunkDataAccessor::reset(uchar* pData, uint dataSize);\nbool ChunkDataAccessor::parse();\nChunkDataAccessor::ChunkDataList* ChunkDataAccessor::getDataList(uint id);\nvoid* ChunkDataAccessor::ChunkDataList::getData(uint offset?);\n\nbool CompetitionInfo::extractUniqueAppData_() {\n    g_ChunkDataAccessor->reset(this->simpleSearchObject.mMetadata.data(), 0x200);\n    g_ChunkDataAccessor->parse();\n    // The parsing function verifies the header magic then loops on the structure to extract all ChunkDataList entries, used to not validate the chunk length\n   // The chunk length is now limited to 0x400 bytes (even if the maximum size the server/client allows is 0x200 bytes)\n\n    /* ... */\n    \n    // 2 == Competition name index in the tournament metadata (ChunkData)\n    char16_t* compName = (char16_t*)g_ChunkDataAccessor->getDataList(2)->getData(0);\n    sead::BufferedSafeStringBase<char16_t> compNameStr(compName);\n    this->mCompetitionName = compNameStr; // operator= override, calls sead::BufferedSafeStringBase<T>::copy()\n\n    /* ... */\n}\n\nbool ChunkDataAccessor::parse() {\n    sead::RamReadStream readStream(this->mBuffer, this->mBufferSize, sead::Stream::Modes::Binary);\n    \n    // must be a custom type probably\n    uint16_t magic;\n    readStream.readMemBlock(&magic, sizeof(uint16_t));\n    if(magic != 0x5a5a /* gear::ChunkDataAccessor::cStart */) {\n        return false;\n    }\n\n    uint8_t id;\n    uint16_t length;\n    readStream.readU8(&id);\n    while(id != 0xff) {\n        readStream.readU16(&length);\n        // Issue, it can overrun the temporary buffer, which is of size 0x400\n        // But only with uncontrolled data considering the server enforces a 0x200 bytes limit on the metadata\n        // The updated code now checks the length is <= 0x400\n        readStream.readMemBlock(this->tmpBuffer, length);\n        this->addReadInfo_(id, this->mBuffer + readStream.mOffset, length);\n        readStream.readU8(&id);\n    }\n\n    return true;\n}\n```\n\nThe parsing function wasn't validating the chunk size, so a big enough size would overflow some class members (with uncontrolled data) and crash the process\n\n---\n&nbsp;\n\n## Impact\n\nCombined with the bug that allowed to create official competitions, you could crash any players opening the \"Tournament\" menu",
      "updated_at": "2023-08-15T23:21:58.137Z",
      "can_view?": true,
      "can_create?": false,
      "attachments": [],
      "user": {
        "id": 921434,
        "username": "crazy_man123",
        "name": "Rambo6Glaz",
        "bio": "Un étudiant français",
        "cleared": false,
        "verified": false,
        "website": null,
        "location": "",
        "created_at": "2020-01-26T10:27:41.496Z",
        "url": "https://hackerone.com/crazy_man123",
        "hackerone_triager": false,
        "hackerone_employee": false,
        "user_type": "hacker",
        "profile_picture_urls": {
          "small": "https://profile-photos.hackerone-user-content.com/variants/8r3fqcjglboqk3hwiqm07bomd3bl/3cb67cc78dc0cba55b102dd9eca2ee89b206d3e960be830f070583d9070b69ef",
          "medium": "https://profile-photos.hackerone-user-content.com/variants/8r3fqcjglboqk3hwiqm07bomd3bl/d9695107bfcd68eeb1c9e0912b109cdae9a6c00c0bda6fd4cbd6d9bdb828840a",
          "xtralarge": "https://hackerone.com/rails/active_storage/representations/redirect/eyJfcmFpbHMiOnsiZGF0YSI6MjExNjI4NiwicHVyIjoiYmxvYl9pZCJ9fQ==--24b171d3dc09aa312cfcbbefe1c8c0a4a4fc7d26/eyJfcmFpbHMiOnsiZGF0YSI6eyJmb3JtYXQiOiJqcGciLCJyZXNpemUiOiIyNjB4MjYwXHUwMDNlIn0sInB1ciI6InZhcmlhdGlvbiJ9fQ==--cf3aeca803d1baf476958c689ca7b472a4cb54f1/10162905_m.jpg"
        }
      }
    }
  ]
}
