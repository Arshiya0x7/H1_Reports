{
  "id": 1540907,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNTQwOTA3",
  "url": "https://hackerone.com/reports/1540907",
  "title": "[WiiU/Switch] nullptr dereference in the ENL framework",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "high",
  "readable_substate": "Resolved",
  "created_at": "2022-04-14T04:02:18.578Z",
  "submitted_at": "2022-04-14T04:02:18.702Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "crazy_man123",
    "url": "/crazy_man123",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/8r3fqcjglboqk3hwiqm07bomd3bl/3cb67cc78dc0cba55b102dd9eca2ee89b206d3e960be830f070583d9070b69ef"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 16634,
    "url": "https://hackerone.com/nintendo",
    "handle": "nintendo",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/016/634/999cefca933756faeeb2ea39c07557943437c94f_original.png/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/016/634/999cefca933756faeeb2ea39c07557943437c94f_original.png/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "Nintendo",
      "twitter_handle": "",
      "website": "http://www.nintendo.com",
      "about": ""
    }
  },
  "has_bounty?": true,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "no-content",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2023-08-22T10:41:15.377Z",
  "bug_reporter_agreed_on_going_public_at": "2022-08-10T02:30:09.317Z",
  "team_member_agreed_on_going_public_at": "2023-08-22T10:41:15.298Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "",
  "weakness": {
    "id": 51,
    "name": "NULL Pointer Dereference"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 9,
  "voters": [
    "zy9ard3",
    "shivammusic",
    "0x0days",
    "steeldiverfun",
    "viggo13",
    "thegr4yf0x",
    "r0qued",
    "whiskeykilo",
    "iossefy"
  ],
  "severity": {
    "rating": "high",
    "score": 7.7,
    "author_type": "User",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "low",
      "privileges_required": "low",
      "user_interaction": "none",
      "scope": "changed",
      "confidentiality": "none",
      "integrity": "none",
      "availability": "high"
    }
  },
  "structured_scope": {
    "databaseId": 372585,
    "asset_type": "HARDWARE",
    "asset_identifier": "Nintendo Switch applications for which Nintendo is the publisher worldwide",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "id": 335838,
      "category": "team",
      "content": "-",
      "updated_at": "2023-08-22T10:37:58.945Z",
      "can_view?": true,
      "can_create?": false,
      "attachments": [],
      "user": {
        "id": 60412,
        "username": "tattsun",
        "name": "Ramen Chevalier",
        "bio": null,
        "cleared": false,
        "verified": false,
        "website": null,
        "location": null,
        "created_at": "2016-03-11T10:24:56.230Z",
        "url": "https://hackerone.com/tattsun",
        "hackerone_triager": false,
        "hackerone_employee": false,
        "user_type": "company",
        "profile_picture_urls": {
          "small": "/assets/avatars/default-14ffa99f59cd01423c64904352cc130ffcb6a802eadfd11777a54485749e60f2.png",
          "medium": "/assets/avatars/default-14ffa99f59cd01423c64904352cc130ffcb6a802eadfd11777a54485749e60f2.png",
          "xtralarge": "/assets/avatars/default-14ffa99f59cd01423c64904352cc130ffcb6a802eadfd11777a54485749e60f2.png"
        }
      }
    },
    {
      "id": 189066,
      "category": "researcher",
      "content": "#Introduction\n\n**The vulnerability is fixed on all of the impacted games, the last fix was released for Splatoon 1 and Mario Kart 8 on August 3, 2023**\n\nNintendo uses its own private library called ENL, it can do matchmaking using NEX (networking library for Nintendo game servers) and communication between players is done using PIA (UDP peer-to-peer networking library) \n\nThis library is used in many Nintendo games including:\n\n- Mario Kart 8 / Mario Kart 8 Deluxe\n- Splatoon 1 / 2 / 3\n- Animal Crossing: New Horizons\n- Super Mario Maker 2\n- Nintendo Switch Sports\n\n---\n&nbsp;\n\n# How ENL works\n\n- ENL only sends packet through the Unreliable Protocol (PIA can also do reliable UDP transmission)\n- Games can register \"content transporters\" to ENL, each content transporter have a unique ID\n- Each content transporter implements its own data format\n\nA packet can contain one or more ENL messages and each message has the following format:\n\n| Type | Description |\n| -------- | ------- |\n| uint8 | Content transporter ID |\n| uint16 | Data length |\n| bytes | Data  |\n\nThere's an **End marker** marking the end of a packet:\n\n| Type | Description | Value |\n| -------- | ------- | ------- |\n| uint8 | Content transporter ID | 255 |\n| uint16 | Data length | 0 |\n\n---\n&nbsp;\n\n# The vulnerability\n\nENL is a C++ library, content transporters are implemented using abstract classes, each content transporter must implement some virtual methods to initialize state, handle received data, etc..\n\nAll of the data received and sent is handled by the **TransportManager**, when data is received it will eventually go through this function: ``enl::TransportManager::updateReceiveBuffer_`` \n\n(pseudo-code obtained through reverse engineering)\n```c++\nclass enl::TransportManager {\n    enl::IContentTransporter* getContentTransporter(uint8_t contentTransporterId) {\n        for (int i = 0; i < this->transporterList.size(); i++) {\n            if (this->transporterList[i]->getContentID() == contentTransporterId) {\n                return this->transporterList[i];\n            }\n        }\n        return nullptr;\n    }\n\n    void updateReceiveBuffer_(uint8_t bufferId, uint8_t* data, size_t size) {\n        /* ... */\n        while (1) {\n            ReceiveHeaderInfo hdrInfo;\n            sead::Serialization::read<ReceiveHeaderInfo>(userHeaderStream, &hdrInfo);\n            if(hdrInfo.contentID == 255 && hdrInfo.contentLength == 0)\n                break;\n            \n            enl::IContentTransporter* transporter = this->getContentTransporter(receiveHdrInfo.type);\n            /* ... */\n\n            // Virtual method, but transporter may be \"nullptr\" ...\n            transporter->readyReceiveStream(userDataStream, this->recordStateBuffer, hdrInfo.size); \n\n            /* ... */\n        }\n    }\n}\n```\n\nSo as we can see ``transporter`` will be a ``nullptr`` if a packet is received with an unregistered content transporter ID, **trigerring a nullptr dereference** on the virtual call.\n\n \n---\n&nbsp;\n\n# Impact\n\n- A malicious user with a fake or modified client could abuse this vulnerability and crash the console/game of anyone\n- Large scale denial of service for the players on multiple online games",
      "updated_at": "2023-08-10T19:57:10.535Z",
      "can_view?": true,
      "can_create?": false,
      "attachments": [],
      "user": {
        "id": 921434,
        "username": "crazy_man123",
        "name": "Rambo6Glaz",
        "bio": "Un étudiant français",
        "cleared": false,
        "verified": false,
        "website": null,
        "location": "",
        "created_at": "2020-01-26T10:27:41.496Z",
        "url": "https://hackerone.com/crazy_man123",
        "hackerone_triager": false,
        "hackerone_employee": false,
        "user_type": "hacker",
        "profile_picture_urls": {
          "small": "https://profile-photos.hackerone-user-content.com/variants/8r3fqcjglboqk3hwiqm07bomd3bl/3cb67cc78dc0cba55b102dd9eca2ee89b206d3e960be830f070583d9070b69ef",
          "medium": "https://profile-photos.hackerone-user-content.com/variants/8r3fqcjglboqk3hwiqm07bomd3bl/d9695107bfcd68eeb1c9e0912b109cdae9a6c00c0bda6fd4cbd6d9bdb828840a",
          "xtralarge": "https://hackerone.com/rails/active_storage/representations/redirect/eyJfcmFpbHMiOnsiZGF0YSI6MjExNjI4NiwicHVyIjoiYmxvYl9pZCJ9fQ==--24b171d3dc09aa312cfcbbefe1c8c0a4a4fc7d26/eyJfcmFpbHMiOnsiZGF0YSI6eyJmb3JtYXQiOiJqcGciLCJyZXNpemUiOiIyNjB4MjYwXHUwMDNlIn0sInB1ciI6InZhcmlhdGlvbiJ9fQ==--cf3aeca803d1baf476958c689ca7b472a4cb54f1/10162905_m.jpg"
        }
      }
    }
  ]
}
