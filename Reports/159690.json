{
  "id": 159690,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNTk2OTA=",
  "url": "https://hackerone.com/reports/159690",
  "title": "stack buffer overflows in the curses module",
  "state": "Closed",
  "substate": "resolved",
  "readable_substate": "Resolved",
  "created_at": "2016-08-16T09:19:44.939Z",
  "submitted_at": "2016-08-16T09:19:44.939Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "tehybel",
    "url": "/tehybel",
    "profile_picture_urls": {
      "small": "/assets/avatars/default-14ffa99f59cd01423c64904352cc130ffcb6a802eadfd11777a54485749e60f2.png"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 54349,
    "url": "https://hackerone.com/ibb",
    "handle": "ibb",
    "profile_picture_urls": {
      "small": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/v0qywgoh5hm4cbhuanu8mqdtowhr/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1?response-content-disposition=inline%3B%20filename%3D%22ibb%20revision%205%20copy.png%22%3B%20filename%2A%3DUTF-8%27%27ibb%2520revision%25205%2520copy.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQWLIXK7KK%2F20250921%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250921T134807Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEI3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCn9dBDjuRnR6R6gwO7wx1V9VTCorPNrsiHfcpQFucMbgIga98tHzwspPe%2FMy%2FsxRSx9minsZ%2FmvaaRCrdbchOwi8MqsgUIFhADGgwwMTM2MTkyNzQ4NDkiDOfrddDnnKJLEaVlcSqPBfc6dsF029BlI%2Bzcy0u3riyL4%2F%2FT8xwtdkFDq1v%2BQabUqM9VNCUvDv7%2FWtv5itm3mLChE%2FgPaggTV0x1i4M9I96rP1Tdx734GZtatA9caD0YziJznRTFhZdv%2BRpZyqW0x%2BDBWmkbnL3q9Mk2VqWGuv8w0WORhVkr4U%2FwRPgCzLAhLmRIBtlGR3Le2jV5izWW%2FiA%2Bf1VF%2F4NRpjSpghXMCMfWFc%2B%2FoHd6Wx8j5FDXlE5MWsh80fs6d%2BW%2BxlwigGZiMnj1JTbOJkwOMap0zEoscOF4D2%2FoN7V6DeI3J7XqFN9oNB8hnPJdHB6tQpL8WGDV1jlfkfiOZPgJl2YRYT3VR%2F6PiV9ep5i7rm%2BRdQSo8dXy%2BfO573cpC4qYbOku4H0hb8Fphn24zLF7xfIRfvxEkjhvCkj6lS6sLM%2FnLqOxjn%2BLpJ%2FlY%2FL%2BBYIuaVPtIRs5qcp9L9UqnSDMtgkM3Mz0z5SWl5HxDRdxvfCCuyKUUNmTVams1QJBlVA%2BdYMt%2ByxelC%2BwpnG1PPTfmEonQn%2FYp4kODNrhsXvXelOeN7kZobZPGu4%2B7bVbNinz2qD%2Br2yCTjvjFqwAFCo9WlKaheGttma8EXZB61nf28NRE4J%2FEJ9WmT3aOBUvHDxbx6npxblNmsoexiEUKtlU6govA%2ByAMHswQidvdg9KEkEKlH4y7tFfmMeqf6iNRhhDz1FSIY98LQeNqswenjrx9ZR7n7kxipXGpSAPqVBcwDdS9tply%2BdNvqgyt5QNcP%2FIbbVHpppKANGqJVb4FpkajI2KOva%2Bixf1meJEdCm5OjL5pPuuGqyVZRw%2FQ8S8uX38e7ftk%2BLHhMhPAdw1R7UxZzic8TTUrGwzA%2FIVMziQ6bSVobTS8Bsw2d6%2FxgY6sQFM%2B90JI1LEO4gKDDWGfro2TDqdvKNUO%2Fvlb3svsloHnDao94fo%2F%2B3Ol%2FaogxtrDavOPVXuINmcNsIMdhE7eJrmttrpl7ilZclTNPMTu10XV8QWwX19%2F0HFf%2BUEVINni3fExXGHohjy3vo40Ac8cmd3D%2FpVgn%2BLhUVMBm9Y1A7EjU59wdGt49wIk9a387%2FWElmuu5RqXQqqrsQ9uelZBSyRqZFNO0jvoeWtkr%2B5%2BBzLIWg%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=2332a495b083a5b37958da30fe98fc6067c1159fac93e5dcfe2d666b9b976335",
      "medium": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/v0qywgoh5hm4cbhuanu8mqdtowhr/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c?response-content-disposition=inline%3B%20filename%3D%22ibb%20revision%205%20copy.png%22%3B%20filename%2A%3DUTF-8%27%27ibb%2520revision%25205%2520copy.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQWLIXK7KK%2F20250921%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250921T134807Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEI3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCn9dBDjuRnR6R6gwO7wx1V9VTCorPNrsiHfcpQFucMbgIga98tHzwspPe%2FMy%2FsxRSx9minsZ%2FmvaaRCrdbchOwi8MqsgUIFhADGgwwMTM2MTkyNzQ4NDkiDOfrddDnnKJLEaVlcSqPBfc6dsF029BlI%2Bzcy0u3riyL4%2F%2FT8xwtdkFDq1v%2BQabUqM9VNCUvDv7%2FWtv5itm3mLChE%2FgPaggTV0x1i4M9I96rP1Tdx734GZtatA9caD0YziJznRTFhZdv%2BRpZyqW0x%2BDBWmkbnL3q9Mk2VqWGuv8w0WORhVkr4U%2FwRPgCzLAhLmRIBtlGR3Le2jV5izWW%2FiA%2Bf1VF%2F4NRpjSpghXMCMfWFc%2B%2FoHd6Wx8j5FDXlE5MWsh80fs6d%2BW%2BxlwigGZiMnj1JTbOJkwOMap0zEoscOF4D2%2FoN7V6DeI3J7XqFN9oNB8hnPJdHB6tQpL8WGDV1jlfkfiOZPgJl2YRYT3VR%2F6PiV9ep5i7rm%2BRdQSo8dXy%2BfO573cpC4qYbOku4H0hb8Fphn24zLF7xfIRfvxEkjhvCkj6lS6sLM%2FnLqOxjn%2BLpJ%2FlY%2FL%2BBYIuaVPtIRs5qcp9L9UqnSDMtgkM3Mz0z5SWl5HxDRdxvfCCuyKUUNmTVams1QJBlVA%2BdYMt%2ByxelC%2BwpnG1PPTfmEonQn%2FYp4kODNrhsXvXelOeN7kZobZPGu4%2B7bVbNinz2qD%2Br2yCTjvjFqwAFCo9WlKaheGttma8EXZB61nf28NRE4J%2FEJ9WmT3aOBUvHDxbx6npxblNmsoexiEUKtlU6govA%2ByAMHswQidvdg9KEkEKlH4y7tFfmMeqf6iNRhhDz1FSIY98LQeNqswenjrx9ZR7n7kxipXGpSAPqVBcwDdS9tply%2BdNvqgyt5QNcP%2FIbbVHpppKANGqJVb4FpkajI2KOva%2Bixf1meJEdCm5OjL5pPuuGqyVZRw%2FQ8S8uX38e7ftk%2BLHhMhPAdw1R7UxZzic8TTUrGwzA%2FIVMziQ6bSVobTS8Bsw2d6%2FxgY6sQFM%2B90JI1LEO4gKDDWGfro2TDqdvKNUO%2Fvlb3svsloHnDao94fo%2F%2B3Ol%2FaogxtrDavOPVXuINmcNsIMdhE7eJrmttrpl7ilZclTNPMTu10XV8QWwX19%2F0HFf%2BUEVINni3fExXGHohjy3vo40Ac8cmd3D%2FpVgn%2BLhUVMBm9Y1A7EjU59wdGt49wIk9a387%2FWElmuu5RqXQqqrsQ9uelZBSyRqZFNO0jvoeWtkr%2B5%2BBzLIWg%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=7234208afcb00e4ea5dfa2b3a41fc35c83a4b0a56a30bb3e3592a23993d6bb31"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "Internet Bug Bounty",
      "twitter_handle": "",
      "website": "https://www.hackerone.com/internet-bug-bounty",
      "about": "The Internet Bug Bounty rewards security research into vulnerabilities impacting Open Source Software Projects."
    }
  },
  "has_bounty?": true,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2019-11-12T09:01:58.772Z",
  "bug_reporter_agreed_on_going_public_at": null,
  "team_member_agreed_on_going_public_at": "2019-10-13T09:01:50.376Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "I found two stack buffer overflows in the curses module. These vulnerabilities have been reported to the PSRT and were fixed here:\n\nhttps://hg.python.org/cpython/rev/d5f6bc45b376\nhttps://hg.python.org/cpython/rev/85b35300f200\n\nBelow are copies of the mails I sent to the PSRT. They describe the vulnerabilities in detail.\n\nFirst mail:\n\nI found a straightforward stack buffer overflow in the Modules/\\_cursesmodule.c\nfile. The module implements the python function window.getstr() via the C\nfunction PyCursesWindow_GetStr. This function calls on to the curses library's\nwgetnstr function.\n\nIf we specify a single integer argument to getstr, we hit these lines:\n\n    static PyObject *\n    PyCursesWindow_GetStr(PyCursesWindowObject *self, PyObject *args)\n    {\n        ...\n        char rtn[1024]; /* This should be big enough.. I hope */\n        ...\n        switch (PyTuple_Size(args)) {\n        ...\n        case 1:\n            if (!PyArg_ParseTuple(args,\"i;n\", &n))\n                return NULL;\n            Py_BEGIN_ALLOW_THREADS\n            rtn2 = wgetnstr(self->win, rtn, Py_MIN(n, 1023));\n            ...\n        }\n        ...\n    }\n\nAs we can see, the wgetnstr function is called. It will read input into the\nstack buffer \"rtn\". We use wgetnstr rather than wgetstr to prevent a buffer\noverflow. As maximum length we use Py_MIN(n, 1023). However if we set n to be a\nnegative integer, wgetnstr will be passed a negative length.\n\nWhat does the curses module do, then? On my (Linux, ncurses) system it simply\ndoes no length checking. So we can read as many bytes as we want into the\nfixed-size stack buffer rtn.\n\nHere's a proof-of-concept script to reproduce this:\n\n--- begin script ---\n\nimport curses\n\ncurses.initscr()\nw = curses.newwin(80, 80)\nw.getstr(-1)\n\n--- end script ---\n\nHere's the result of running it and entering over 1024 'A's:\n\n$ python3 -c 'print(\"A\"*1100)' | python3 ./poc4.py\n*** stack smashing detected ***: python3 terminated\nzsh: segmentation fault (core dumped)  python3 ./poc4.py\n\n\nThis is clearly exploitable when combined with an info leak that lets us know\nthe stack canary.\n\nThis vulnerability should probably be fixed by making \"n\" unsigned, or by\nconfirming that it is non-negative. (Note that this also needs to be fixed for\nother cases in the switch, like when we input three arguments rather than one.)\n\n\nSome more details about my setup:\n\n    curses version: libncurses (/usr/lib/libncursesw.so.6.0) (ncurses 6.0.20150808)\n    $ python3 -V\n    Python 3.5.2\n\n\n\nSecond mail, after the first vulnerability was fixed:\n\nI just realized that there is a similar vulnerability in the PyCursesWindow_InStr function. There we also need to confirm that n is nonnegative. Otherwise a stack buffer overflow is possible. There's a reproducing script below.\n--- begin script ---\n\nimport curses\n\ncurses.initscr()\nw = curses.newwin(2048, 2048)\ns = w.instr(-1)\n\n--- end script ---\n",
  "weakness": {
    "id": 2,
    "name": "Memory Corruption - Generic"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2019-11-12T09:01:50.449Z",
  "allow_singular_disclosure_after": -184913177.36006138,
  "singular_disclosure_allowed": true,
  "vote_count": 2,
  "voters": [
    "dyabla",
    "dawodshaikh010"
  ],
  "structured_scope": {
    "databaseId": 84536,
    "asset_type": "OTHER",
    "asset_identifier": "Python (Legacy)",
    "max_severity": "none"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
