{
  "id": 2559,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8yNTU5",
  "url": "https://hackerone.com/reports/2559",
  "title": "Broken Authentication (including Slack OAuth bugs)",
  "state": "Closed",
  "substate": "resolved",
  "readable_substate": "Resolved",
  "created_at": "2014-03-01T11:56:40.224Z",
  "submitted_at": "2014-03-01T11:56:40.224Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "anandpingsafe",
    "url": "/anandpingsafe",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/vlqhqygpyrkdh89cjlplkd0rk54r/3cb67cc78dc0cba55b102dd9eca2ee89b206d3e960be830f070583d9070b69ef"
    },
    "is_me?": false,
    "cleared": true,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 69,
    "url": "https://hackerone.com/slack",
    "handle": "slack",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/000/069/683fee312381bc46cadc7ea1950abc87944d12c3_original.png/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/000/069/683fee312381bc46cadc7ea1950abc87944d12c3_original.png/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "Slack",
      "twitter_handle": "slackhq",
      "website": "https://slack.com",
      "about": "All your team communication in one place, instantly searchable, and available wherever you go."
    }
  },
  "has_bounty?": true,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2014-08-30T07:19:16.157Z",
  "bug_reporter_agreed_on_going_public_at": "2014-07-31T07:19:03.494Z",
  "team_member_agreed_on_going_public_at": null,
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Hi,\r\n\r\nHope you are doing good!\r\nPlease have a look at the below report.\r\nDescription:\r\nOAuth Framework Flaw Bypassing redirect_uri validation \r\nAn attacker to exploit this Flaw just needs to find a open redirection flaw in the site which is using Slack's OAuth for logins.\r\n\r\nImpact:\r\nA malicious user can steal \"code\" parameter value assigned by Slack OAuth and can hijack victim's account by writing the value in a text file on his evilsite.com/a.php file.\r\nSteps to reproduce:\r\n1) Go to any web app which is using Slack's  OAuth and click on Login with Slack \r\n2) You will be redirected to this URL\r\nhttps://slack.com/oauth/authorize?client_id=...&scope=read,post&redirect_uri=https://www.givensite.com/../../redirect_url=https://www.evilsite.com/a.php%2Fcomplete\r\nNote i am bypassing the redirect_uri validation by using ../../ \r\nIn the above URL,i have changed the value of redirect_uri to ../../redirect_url=https://www.evilsite.com/a.php and this should not happen.\r\n\r\nThe response will be \r\nhttp://givensite.com/redirect_url=https:/www.evilsite.com/a.php/complete?code=AQCbhUg1FiEQf5TyTesMgjP8zq\r\n\r\nAnd then in the final step code value or access_token value will be written in my a.php file,the malicious guy will scrap it from the URL.\r\nSo,then he can login into the victim account using code value.\r\nPlease put proper validation on redirect_uri parameter.\r\n\r\nThe redirect_uri value should exactly match as defined in the application and the user to not be allowed to change it to the subdirectories etc.\r\n\r\nThis means if redirect_uri value is https://www.google.com then it should take the value https://www.google.com not https://www.google.com/a/x\r\n\r\n\r\nLooking forward to hear from you,\r\n\r\nBest regards,\r\nAnand",
  "weakness": {
    "id": 57,
    "name": "Violation of Secure Design Principles"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2014-08-30T07:19:03.758Z",
  "allow_singular_disclosure_after": -349178053.1299475,
  "singular_disclosure_allowed": true,
  "vote_count": 7,
  "voters": [
    "loaymorad",
    "sw33tlie",
    "xsky",
    "2026",
    "madrobot",
    "pr0f0x01",
    "shivammusic"
  ],
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
