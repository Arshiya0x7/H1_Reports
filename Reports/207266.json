{
  "id": 207266,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8yMDcyNjY=",
  "url": "https://hackerone.com/reports/207266",
  "title": "Information leakage via CSV when content is valid JavaScript",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "low",
  "readable_substate": "Resolved",
  "created_at": "2017-02-18T05:31:54.750Z",
  "submitted_at": "2017-02-18T05:31:54.750Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "mikkocarreon",
    "url": "/mikkocarreon",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/fol7burly6bqugrixbn2lfjjniuv/3cb67cc78dc0cba55b102dd9eca2ee89b206d3e960be830f070583d9070b69ef"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 13,
    "url": "https://hackerone.com/security",
    "handle": "security",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/000/013/fa942b9b1cbf4faf37482bf68458e1195aab9c02_original.png/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/000/013/fa942b9b1cbf4faf37482bf68458e1195aab9c02_original.png/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "HackerOne",
      "twitter_handle": "Hacker0x01",
      "website": "https://hackerone.com",
      "about": "Vulnerability disclosure should be safe, transparent, and rewarding."
    }
  },
  "has_bounty?": true,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2017-05-23T14:44:32.654Z",
  "bug_reporter_agreed_on_going_public_at": "2017-05-23T14:44:32.604Z",
  "team_member_agreed_on_going_public_at": "2017-05-23T00:07:56.960Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "**Summary:**\nThe function \"**Download as CSV**\" might leak information to 3rd domains. The exploitation seems unlikely and purely theoretical but it might work in some cases. \n\n**Description (Include Impact):**\nTake downloading payments as CSV, for example, which is recently launched. The response to \nhttps://hackerone.com/settings/bounties.csv\nreturns CSV which is indeed, a comma separated values. There is a field which is influenced by user input i.e. report_title.\nAnd, as we all know, `script` inclusions are exempt from SOP. So, if the returned CSV forms valid JavaScript, it's possible that we can read information.\n\n### Steps To Reproduce\nFor demonstration;\nI created an HTML page as follows;\n```html\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset='utf-8'/>\n    <script>\n        var report_id,report_title,program_name,total_amount,amount,bonus_amount,currency,awarded_at,status;\n    </script>\n  </head>\n  <body>\n    <script src='https://hackerone.com/settings/bounties.csv'></script>\n  </body>\n</html>\n```\n\nAnd, edited returned response (using BurpSuite) as follows;\n```JavaScript\nreport_id,report_title,program_name,total_amount,amount,bonus_amount,currency,awarded_at,status\n████████\n████\n█████████\n████████\n██████\n████████\n```\n\nSo, what I did is added ```=` ```  right after first word of first report. Similarly added ``` `//``` right after last word of last report.\nThis makes it a valid JavaScript, and `XSS` a valid variable which now have all details in it. \n\n### Optional: Your Environment (Browser version, Device, etc)\nFirefox version 45.7.0\nUA:  Mozilla/5.0 (X11; Linux x86_64; rv:45.0) Gecko/20100101 Firefox/45.0\nSafari may also work.\n",
  "weakness": {
    "id": 45,
    "name": "Cross-Site Request Forgery (CSRF)"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2017-06-22T00:07:57.002Z",
  "allow_singular_disclosure_after": -260402826.42900142,
  "singular_disclosure_allowed": true,
  "vote_count": 29,
  "voters": [
    "sp1d3rs",
    "bogdantc",
    "spam404",
    "zombiehelp54",
    "flashdisk",
    "harrymg",
    "ankitsingh",
    "gamliel",
    "supernatural",
    "madrobot",
    "and 19 more..."
  ],
  "severity": {
    "rating": "low",
    "author_type": "User"
  },
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "id": 3784,
      "category": "researcher",
      "content": "Write-up: https://blog.cm2.pw/h1-xssi/",
      "updated_at": "2020-06-24T17:14:21.609Z",
      "can_view?": true,
      "can_create?": false,
      "attachments": [],
      "user": {
        "id": 134707,
        "username": "mikkocarreon",
        "name": "Mikko",
        "bio": "",
        "cleared": false,
        "verified": false,
        "website": "https://cm2.pw/?..;/foo=bar;/..;/%3csvg/onload=alert%601%60%3e",
        "location": "",
        "created_at": "2017-01-07T11:45:53.813Z",
        "url": "https://hackerone.com/mikkocarreon",
        "hackerone_triager": false,
        "hackerone_employee": false,
        "user_type": "hacker",
        "profile_picture_urls": {
          "small": "https://profile-photos.hackerone-user-content.com/variants/fol7burly6bqugrixbn2lfjjniuv/3cb67cc78dc0cba55b102dd9eca2ee89b206d3e960be830f070583d9070b69ef",
          "medium": "https://profile-photos.hackerone-user-content.com/variants/fol7burly6bqugrixbn2lfjjniuv/d9695107bfcd68eeb1c9e0912b109cdae9a6c00c0bda6fd4cbd6d9bdb828840a",
          "xtralarge": "https://profile-photos.hackerone-user-content.com/variants/fol7burly6bqugrixbn2lfjjniuv/4ac84fbe897190579a137d0cf55152b233cdd4f9984435bd80ef67e5e51a0586"
        }
      }
    }
  ]
}
