{
  "id": 2886723,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8yODg2NzIz",
  "url": "https://hackerone.com/reports/2886723",
  "title": "GraphQL Introspection Enabled on Shopify API Endpoint (Intended Behavior)",
  "state": "Closed",
  "substate": "informative",
  "severity_rating": "none",
  "readable_substate": "Informative",
  "created_at": "2024-12-07T00:19:25.324Z",
  "submitted_at": "2024-12-07T00:19:25.768Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "ahmednasr1",
    "url": "/ahmednasr1",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/tlp5fprhz14nd6q7fvwmb4j67ede/db3ccc5a012de75c5cb817bc4e2a41ce2dc72af5298d29011cc3a22da1939441"
    },
    "is_me?": false,
    "cleared": false,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 1382,
    "url": "https://hackerone.com/shopify",
    "handle": "shopify",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/fjjiC5585s8WoDGHv2M5okbJ/db3ccc5a012de75c5cb817bc4e2a41ce2dc72af5298d29011cc3a22da1939441",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/fjjiC5585s8WoDGHv2M5okbJ/7c9705bb28b2ec7dd813930deef15ba2e33d971a8ce6c512386ae2e601769868"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "Shopify",
      "twitter_handle": "",
      "website": "https://www.shopify.com",
      "about": "Shopify is a multi-channel commerce platform that helps people sell online, in-store, and everywhere in between."
    }
  },
  "has_bounty?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2025-09-17T14:59:23.624Z",
  "bug_reporter_agreed_on_going_public_at": "2024-12-11T10:15:24.717Z",
  "team_member_agreed_on_going_public_at": "2025-09-17T14:59:23.216Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Summary:\n\nHi team ! i've found a misconfiguration in your graphql Api on the endpoint << \n https://██████/api/unstable/graphql.json      >>in which an attacker is able to run a graphql interospection query to fetch schemas , types , fields , available query operations , after running interospection query on the graphql api endpoint , an attacker is able to list all type of available api calls , so he'll be able to perform unauthorised api calls due to this misconfiguration.\n\n\nInterospection>>\n\n\"query\":\"query IntrospectionQuery { __schema { queryType { name } mutationType { name } subscriptionType { name } types { ...FullType } directives { name description args { ...InputValue } } } } fragment FullType on __Type { kind name description fields(includeDeprecated: true) { name description args { ...InputValue } type { ...TypeRef } isDeprecated deprecationReason } inputFields { ...InputValue } interfaces { ...TypeRef } enumValues(includeDeprecated: true) { name description isDeprecated deprecationReason } possibleTypes { ...TypeRef } } fragment InputValue on __InputValue { name description type { ...TypeRef } defaultValue } fragment TypeRef on __Type { kind name ofType { kind name ofType { kind name ofType { kind name } } }\n\n\nSteps To Reproduce:\n\n<<<  shops.myshopify.com         Aliassees:  ████ >>>\n██████\n\n1. navigate to the endpoint  https://███/api/unstable/graphql.json\n2. visit to the endpoint and capture the request in burp proxy and send the request to repeater\n3. now put the interospection query into the request body and send the request\n4. after the in the response you'll get types of query operation's available , schemas so that by using these an attacker will be able to perform unauthorized call\n\n███\n\n\nSimilarly there are too many types of query operations available see in the below screenshot :\n\n███\n\nHere in this scenerio the mutations is also available to modify a data on the graphql api , see in the below screenshot that after running a interospection query it has revealed the mutations availabe so the attacker can craft a query to modify the data :\n\n██████\n\n████████\n\nhere the issue is the , due to the misconfiguration in graphql api , it is allowing an arbitary user to run interospection query , so here the after running interospection query it is revelaing the api calls available which is a not a good security implimentation and you must have to forbid the user to run a interospection query otherwise an attacker will be able to perform unauthorised api calls .\n\n\n  * [attachment / reference]\n\n#1132803\n#291531\n#423388\n#645299\n## Impact\n\nif attacker will get available query operation types , fields , mutations so an attacker will be able to modify and list the data and will be able to perform unauthorised api calls",
  "weakness": {
    "id": 18,
    "name": "Information Disclosure"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 0,
  "voters": [],
  "severity": {
    "rating": "none",
    "author_type": "Team"
  },
  "structured_scope": {
    "databaseId": 413,
    "asset_type": "URL",
    "asset_identifier": "your-store.myshopify.com",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "id": 755336,
      "category": "team",
      "content": "This report identified that GraphQL introspection was enabled on a Shopify storefront GraphQL endpoint, allowing complete schema information including query types, fields, and mutation operations to be retrieved.\n\nThe concern raised was that this could potentially lead to unauthorized API access by revealing the full API structure to unauthenticated users.\n\nShopify has confirmed that GraphQL introspection is intentionally enabled by design and is not considered a security vulnerability. Shopify encourages security researchers to use schema information to help identify legitimate security issues, as noted in the program policy.\n\nIt's important to note that Shopify's bug bounty program guidelines require researchers to only test against stores they have created themselves using their HackerOne email address. Reports involving merchant production stores when the same issue could be reproduced on a test instance are ineligible submissions.",
      "updated_at": "2025-09-17T14:59:18.746Z",
      "can_view?": true,
      "can_create?": false,
      "attachments": [],
      "user": {
        "id": 3168200,
        "username": "lando_shopify",
        "name": "Lando ",
        "bio": "",
        "cleared": false,
        "verified": false,
        "website": null,
        "location": "",
        "created_at": "2024-04-01T13:17:42.464Z",
        "url": "https://hackerone.com/lando_shopify",
        "hackerone_triager": false,
        "hackerone_employee": false,
        "user_type": "company",
        "profile_picture_urls": {
          "small": "/assets/avatars/default-14ffa99f59cd01423c64904352cc130ffcb6a802eadfd11777a54485749e60f2.png",
          "medium": "/assets/avatars/default-14ffa99f59cd01423c64904352cc130ffcb6a802eadfd11777a54485749e60f2.png",
          "xtralarge": "/assets/avatars/default-14ffa99f59cd01423c64904352cc130ffcb6a802eadfd11777a54485749e60f2.png"
        }
      }
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
