{
  "id": 2860983,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8yODYwOTgz",
  "url": "https://hackerone.com/reports/2860983",
  "title": "Denial of Access to Static Resources via Cache Poisoning on addons.allizom.org",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "low",
  "readable_substate": "Resolved",
  "created_at": "2024-11-22T17:30:37.981Z",
  "submitted_at": "2024-11-23T00:50:17.228Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "jabiyev",
    "url": "/jabiyev",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/daa83s6ceffr0ifhs9zrqk0mvowv/3cb67cc78dc0cba55b102dd9eca2ee89b206d3e960be830f070583d9070b69ef"
    },
    "is_me?": false,
    "cleared": false,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 61236,
    "url": "https://hackerone.com/mozilla",
    "handle": "mozilla",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/0p8e6gg8xoy45dhjxs5wh4iti6k8/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/0p8e6gg8xoy45dhjxs5wh4iti6k8/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "Mozilla",
      "twitter_handle": "",
      "website": "https://www.mozilla.org",
      "about": "Mozilla web bug bounty program specific to encouraging security research in Mozilla's products and web services."
    }
  },
  "has_bounty?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": true,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2025-01-08T10:39:30.045Z",
  "bug_reporter_agreed_on_going_public_at": null,
  "team_member_agreed_on_going_public_at": "2024-12-09T10:39:21.871Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "## Summary:\nAn attacker can poison the cache and block access to static files (e.g., image, JS) that are delivered with the homepage. \n\n## Steps To Reproduce:\n\nTo reproduce cache poisoning for an image file: \n\n  1. `curl -H \"X-HTTP-Method-Override: HEAD\" https://addons.allizom.org/static-server/img/addon-icons/default-64.d144b50f2bb8.png?dontpoisoneveryone=1`\n  2. Visit https://addons.allizom.org/static-server/img/addon-icons/default-64.d144b50f2bb8.png?dontpoisoneveryone=1 to see it is not accessible anymore.\n\nTo reproduce cache poisoning for a JS file: \n\nFor example, `/static-frontend/amo-6203ce93d8491106ca21.js` is one of the JS files delivered with the homepage. We did not find a way to safely test (i.e., using `?dontpoisoneveryone=1`), since it does not include the query string as a part of the cache key. However, we noticed that the `X-HTTP-Method-Override: HEAD`header is honored in the same way.\n\n1. `curl -s https://addons.allizom.org/static-frontend/amo-6203ce93d8491106ca21.js/notexist` (see the error message in the response body)\n2.  `curl -s -H \"X-HTTP-Method-Override: HEAD\" https://addons.allizom.org/static-frontend/amo-6203ce93d8491106ca21.js/notexist` (see the empty response body)\n\n## Supporting Material/References:\nBehind the scenes, the origin server honors the X-HTTP-Method-Override header and treats the request as a HEAD request. Therefore, it generates a \"200 OK\" response with an empty body, which gets cached and as a result the resource becomes unavailable for all users. To learn more about the attack, you can read the document listed below.\n\n  * https://cpdos.org/#HMO\n\n## Impact\n\n## Summary:\n\nAn attacker can make static resources such as images and JS files that are delivered with the homepage inaccessible to all users.",
  "weakness": {
    "id": 175,
    "name": "Cache Poisoning"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2025-01-08T10:39:22.420Z",
  "allow_singular_disclosure_after": -22057311.986185793,
  "singular_disclosure_allowed": true,
  "vote_count": 22,
  "voters": [
    "orange303",
    "loaymorad",
    "zy9ard3",
    "dk4trin",
    "xandsz",
    "2026",
    "mohaned0101",
    "fanar",
    "jackhavoltrey",
    "who_am_i_",
    "and 12 more..."
  ],
  "severity": {
    "rating": "low",
    "author_type": "Team"
  },
  "structured_scope": {
    "databaseId": 297504,
    "asset_type": "URL",
    "asset_identifier": "addons.allizom.org",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "id": 598873,
      "category": "team",
      "content": "A cache poisoning vulnerability has been identified on addons.allizom.org that allows an attacker to block access to static resources such as images and JavaScript files. The issue exploits the processing of the X-HTTP-Method-Override header by the origin server which honors the X-HTTP-Method-Override header and treats the request as a HEAD request. Therefore, it generates a \"200 OK\" response with an empty body, which gets cached and as a result the resource becomes unavailable for all users",
      "updated_at": "2024-12-09T10:39:01.803Z",
      "can_view?": true,
      "can_create?": false,
      "attachments": [],
      "user": {
        "id": 2465541,
        "username": "frida-k",
        "name": "Frida",
        "bio": "",
        "cleared": false,
        "verified": false,
        "website": null,
        "location": "",
        "created_at": "2022-09-21T23:39:33.826Z",
        "url": "https://hackerone.com/frida-k",
        "hackerone_triager": false,
        "hackerone_employee": false,
        "user_type": "company",
        "profile_picture_urls": {
          "small": "/assets/avatars/default-14ffa99f59cd01423c64904352cc130ffcb6a802eadfd11777a54485749e60f2.png",
          "medium": "/assets/avatars/default-14ffa99f59cd01423c64904352cc130ffcb6a802eadfd11777a54485749e60f2.png",
          "xtralarge": "/assets/avatars/default-14ffa99f59cd01423c64904352cc130ffcb6a802eadfd11777a54485749e60f2.png"
        }
      }
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
