{
  "id": 39658,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8zOTY1OA==",
  "url": "https://hackerone.com/reports/39658",
  "title": "Reflected File Download",
  "state": "Closed",
  "substate": "resolved",
  "readable_substate": "Resolved",
  "created_at": "2014-12-17T19:13:45.583Z",
  "submitted_at": "2014-12-17T19:13:45.583Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "0xdeadpool",
    "url": "/0xdeadpool",
    "profile_picture_urls": {
      "small": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/e0rntmulnwirrz8mmrpr3lrb0686/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1?response-content-disposition=inline%3B%20filename%3D%22superhero-deadpool-comics-512.png%22%3B%20filename%2A%3DUTF-8%27%27superhero-deadpool-comics-512.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ7RERVYDS%2F20250922%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250922T185518Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEKf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIHDwF1ZvPYiK5MFHEzYYVCv7EsvMf%2FyI3YzSO3Den4CeAiEA9B4uZJO3FOsaDPvqEPKtQQOaSZ1R7%2BnOYh7wu7fvnBEqsQUIMBADGgwwMTM2MTkyNzQ4NDkiDILpqWNrcoLWj%2B2PCCqOBbHm3REkFvl1KkqINmDOirHLSqq%2B%2Fwr0Ul1ecgn%2FdM8bfd%2Bt7J54Al3Pt3iMPvaOAuF8I5gqucujkE3Qf1Mv%2FaWljpOWwP3cf4m%2F13YV9S45e3KcZq4fs7y7gDK1KruyfiW44sy3PCw4tw278yPm7cmIGSauIfdcSVLpPcmIqNGgQcLMVIMwYvDcIYA2LjQ6KzOCIK6Q0UPCH8Y12PotGSb2YDLXNsjNY09vpIFGB8C8%2Fxk%2Bvftn9e7r782ZkNgN%2FKOG%2BrtKVw0IUZ%2FIyqDqIT1OPc1zMcL%2F048%2FXpwEiJ84cNVqurwS9%2BqeBsvtBxt3SVkNU1S8nk5xXRd%2Fdcq0uxObUpBR4IsIoV8JZSaweX4WHobqFfiqaIGz4LxGskVem3grGXNaT450sCl2Ks9k7wYre5Q9xFQ7ShcER846bd0lB9uITLSoExwYIwhgOKxnb4Lyq7iuS5P5kvtybtID47QbuGlVF%2BxML5WjaArKAgCLt9TIEzsfl9cziRPIitHEZplIi0%2BYb7tLYRzEG22ZxbWwf%2F3IgycWeOqpfWg3eWYbhVQmhPaV1JAZflSnnBzz9xUyNQc8Cse1J3Jw03g0fPi3E1cCk9HjJ%2FI45TwC9BCOI04MirVBFnNcAyVT704KkR39Dnato7sCKt0KEaJ5ZBfYsW87c2nJ64a27Jgr7FMfRkFFTOSYwES%2BIEoxTh9JR2iMNRI5IpMh4%2B9DBHeVp7ZmgOI8ZuApyeSm0DonuBJDdiAF1ERoPOjERbghPFUZ6QWZ4WLEyfx%2Fphy3%2Bf09UAy7F%2BXitdpPtsLnfclVzmMyIURhge853%2BJ%2BjN1kVqFkqNAydKovi4fvH7C6prhez%2F%2BD4MbOo2B0HAiQ%2Bi89BTCkwcXGBjqxAVq%2BP%2Be94SCw3un7vYjwWKFXhARJnxQR3n44Bxw%2BSxVD83GWhcCPi62F77gCjv39goBqQpcSTNje7LFFN04Qu%2BgVz3zPfWr0e0dxSgl7csx6TYRNzv5GVa5U727nv2i9SukpQURMBO0fZKtlzHXxlPqAjORL9j2c6UYNMp68B4%2F5deqn%2B2ya8TGbpkMVVUWeiKAt%2B84r1a9Lmhl%2BDhLCFrlporvrpBPc3tweHNntRWu9yg%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=006441ee402bc4373deb46920e7cbeff2a9dd2255f66f78d33dc677065d317bb"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 13,
    "url": "https://hackerone.com/security",
    "handle": "security",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/000/013/fa942b9b1cbf4faf37482bf68458e1195aab9c02_original.png/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/000/013/fa942b9b1cbf4faf37482bf68458e1195aab9c02_original.png/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "HackerOne",
      "twitter_handle": "Hacker0x01",
      "website": "https://hackerone.com",
      "about": "Vulnerability disclosure should be safe, transparent, and rewarding."
    }
  },
  "has_bounty?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2016-04-25T16:14:28.068Z",
  "bug_reporter_agreed_on_going_public_at": "2016-04-25T16:14:27.998Z",
  "team_member_agreed_on_going_public_at": "2016-04-25T02:14:53.487Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "**Info:**\r\nReflected File Download is a new web attack vector. It allows an attacker to craft a malicious file and present it to a victim, but there is no file present at the server. It was recently published at the BlackHat Eupore 2014 by Oren Hafif. Link to his presentation is given at the end.\r\n\r\n**Pre-requisite:** To affect a user, he/she must be in a team with the attacker.\r\n\r\nThe reason being that the flaw is connected to the `triggers` page which can only be accessed by team members. \r\n\r\n**Preparing the injected file**\r\n1.) We first need to create a new `trigger`.  We have 3 fields: `Criteria`, `Action` and `Options`\r\n2.) In `Criteria` we have a text box called `text`. Populate it with the following content:\r\n* * *\r\n    text\" || calc ||\r\n* * *\r\n3.) Fill the remaining boxes arbitrarily. Give any text. We have created a trigger.\r\n4.) If we go back to our triggers page we have an option to edit this particular trigger we created. The format is as follows:\r\n* * *\r\n    hackerone.com/<team_name>/triggers/<numeric_id>/edit\r\n* * *\r\n5.) Take this link, remove the `/edit` parameter.\r\n6.) Now if we access this link, we get a `404` saying something went wrong. But append `.bat` we will get a JSON response. Appending  `.` and any character will trigger a JSON response.\r\n\r\nNow we have a URL with a `.bat` extension. The JSON response contains `text\" || calc ||` somewhere in the middle of this JSON response. Now if we take this JSON response and paste it in a Command Prompt it would open up a calculator. We need to present this as a file. To do this we craft a page as follows:\r\n* * *\r\n    <html>\r\n    <a href=\"https://hackerone.com/<team_name>/triggers/<numeric-id>.bat\" download=\"anything.cmd\">Click to view other user's bugs</a>\r\n    </html>\r\n* * *\r\n\r\nNow once the victim clicks on the link, he is presented with a file download box. The file is shown to be from `Hackerone` itself. Upon executing the file a calculator pops up. We have numerous payloads other than `calc`. They have been discussed in the White paper of RFD. \r\n\r\n**Limitation:**\r\nThe issue works in Google Chrome and IE. Firefox will not prompt for a download and instead show the JSON response. It is because it does not recognize the `download` parameter in the `href` attribute.\r\n\r\n**Reference:**\r\n* * *\r\nblog.spiderlabs.com/2014/10/reflected-file-download-the-white-paper.html\r\n* * *\r\n\r\nHere is a link to Youtube demonstrating the issue. The video is unlisted.\r\n* * *\r\nhttps://www.youtube.com/watch?v=b_neIFxJ_Wg&feature=youtu.be\r\n* * *\r\n\r\nRegards,\r\nHysteria\r\n",
  "weakness": {
    "id": 57,
    "name": "Violation of Secure Design Principles"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2016-05-25T02:14:59.431Z",
  "allow_singular_disclosure_after": -294424819.5573259,
  "singular_disclosure_allowed": true,
  "vote_count": 10,
  "voters": [
    "fdeleite",
    "shubham_srt",
    "dastan_9408",
    "r3y",
    "khizer47",
    "shivammusic",
    "dyabla",
    "buggedsystem",
    "arch25",
    "23yehia_hazem23"
  ],
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
