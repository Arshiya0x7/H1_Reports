{
  "id": 1520931,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNTIwOTMx",
  "url": "https://hackerone.com/reports/1520931",
  "title": "Time-of-check to time-of-use vulnerability in the std::fs::remove_dir_all() function of the Rust standard library",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "high",
  "readable_substate": "Resolved",
  "created_at": "2022-03-24T09:23:58.262Z",
  "submitted_at": "2022-03-24T09:23:58.345Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "hkratz",
    "url": "/hkratz",
    "profile_picture_urls": {
      "small": "https://hackerone.com/rails/active_storage/representations/redirect/eyJfcmFpbHMiOnsiZGF0YSI6MTkwNTA0NywicHVyIjoiYmxvYl9pZCJ9fQ==--61314d08fcef6d94e3cff24a4e06267314023c6f/eyJfcmFpbHMiOnsiZGF0YSI6eyJmb3JtYXQiOiJwbmciLCJncmF2aXR5IjoiQ2VudGVyIiwicmVzaXplIjoiNjJ4NjJeIiwiY3JvcCI6IjYyeDYyKzArMCJ9LCJwdXIiOiJ2YXJpYXRpb24ifX0=--a4d91faed3dff6024dfc1a7b7f8ccc6b45e38396/hans.png"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 54349,
    "url": "https://hackerone.com/ibb",
    "handle": "ibb",
    "profile_picture_urls": {
      "small": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/v0qywgoh5hm4cbhuanu8mqdtowhr/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1?response-content-disposition=inline%3B%20filename%3D%22ibb%20revision%205%20copy.png%22%3B%20filename%2A%3DUTF-8%27%27ibb%2520revision%25205%2520copy.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQYEN6ZMX6%2F20250921%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250921T001046Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHwaCXVzLXdlc3QtMiJIMEYCIQDaPeTSLue%2BnrEQPFz%2BGFlOGBetmNIsUt4npGAtXrfntwIhAJQjhaKlYHqET5ebauD%2F36ivbCgvomtYsJw7jjns6wfxKroFCPX%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQAxoMMDEzNjE5Mjc0ODQ5IgxATwEa%2Bklbzl1pOOIqjgWLiQYO1cLoMkYQ%2FM7yAqTtHBJPPMqU0kuJzwgknHMNizUjfFdnqf6%2F4%2BTnQnOKC%2Fg89XTHcDgjdpJ9MPoIUAHnmevlDSZ4v1PVq1z8b9OVPf1sabxVIJiNQn56qXcUrTfrXoxd97irBxCyfBrC6MiLJ8igFe3JyYHxdQnk%2BU0D8TTm6mOqNiOXFiDgwuSKAaBOuk3Ht5IJ3D%2B8kUFzgbGzhH4WUrPlS1bT%2FoHmfCEL%2FSD4J2UIakTNj%2FGh6SukadXYwvKp5wMfIkr%2FkpHTQ8zP8%2BBaig1ZBvZaRPguK2yNI1HV3hhx38Yh%2BfZp566I29M%2BFUGwCtXKOR6kdZlO75PfRNIcqGhASKKMFdqtT1KjpUg3%2BcvL0lZBTareGY85d34T5lfpgPgGddFv2SJcQvnar0ul1EizwSlqXvT9JVICE1PPs%2FD4DuPWN4dLIa23vyAgeiSmw5%2FLCaxzRc%2FI%2BdQx%2BVcT9sVN677w0I4iT6el8ejQwWsJOrYz4Yh5v5TURo4plIdAy%2BRHfLRg2gbiXGY25B7U8tqCaQ3Vw%2B6R%2BTcJYxS5qAoCPA6eNyhL%2F5ZOzO%2FB7K496u%2BNuulOEYIiNVZ29O2P4C5WENOYsIKZxQqJDwxrHFisMFXINDpZ1EsG%2FN9hz0vwxKj85imB8E8B1zMnY17p%2FvGWwXbIJ0fPND366nUU58FbsKBV68TN0weGkx2i7JW63jZrGDiBs%2B4boCPabrmUiXBgz3cm7CwlyzbIPAL61EsMoTlyc7R3uX4OcgnfziYAixio5ri4gepsLVRRA5bZ2fDgP72H3%2F0UFEbFmSbAWhftwPREqG9nRllckcJ6lxthBf667gza3ccj7YhcoamHFkmucZQWECgMskIwppS8xgY6sAHlIt3gAKrLVe%2B05z%2BrpCfEkWuJtsnsxqBFyPzPzkxEQMemcqp6TN3o6cr7J2KXWl2IO8lymLjoBaLimIW%2B4%2BZrocmXBGDlfHqYyxPCt926V5mmtaUJc2pRkg5hKPHAGa6JbP141KGENaG0dHy0g484U9%2F2%2Fb6FjxlONWFi0bhQEl%2Bw8ks8tpUSG%2FN8HTdx4JQufV9sQC1IP9nwkAjGUetG9LbIf8u5wx1DfNF53NgrlA%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=d3154747a9c01469c45e966c3407c88b4be2829a1f7c7320f3231661153cdaa9",
      "medium": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/v0qywgoh5hm4cbhuanu8mqdtowhr/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c?response-content-disposition=inline%3B%20filename%3D%22ibb%20revision%205%20copy.png%22%3B%20filename%2A%3DUTF-8%27%27ibb%2520revision%25205%2520copy.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQYEN6ZMX6%2F20250921%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250921T001046Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHwaCXVzLXdlc3QtMiJIMEYCIQDaPeTSLue%2BnrEQPFz%2BGFlOGBetmNIsUt4npGAtXrfntwIhAJQjhaKlYHqET5ebauD%2F36ivbCgvomtYsJw7jjns6wfxKroFCPX%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQAxoMMDEzNjE5Mjc0ODQ5IgxATwEa%2Bklbzl1pOOIqjgWLiQYO1cLoMkYQ%2FM7yAqTtHBJPPMqU0kuJzwgknHMNizUjfFdnqf6%2F4%2BTnQnOKC%2Fg89XTHcDgjdpJ9MPoIUAHnmevlDSZ4v1PVq1z8b9OVPf1sabxVIJiNQn56qXcUrTfrXoxd97irBxCyfBrC6MiLJ8igFe3JyYHxdQnk%2BU0D8TTm6mOqNiOXFiDgwuSKAaBOuk3Ht5IJ3D%2B8kUFzgbGzhH4WUrPlS1bT%2FoHmfCEL%2FSD4J2UIakTNj%2FGh6SukadXYwvKp5wMfIkr%2FkpHTQ8zP8%2BBaig1ZBvZaRPguK2yNI1HV3hhx38Yh%2BfZp566I29M%2BFUGwCtXKOR6kdZlO75PfRNIcqGhASKKMFdqtT1KjpUg3%2BcvL0lZBTareGY85d34T5lfpgPgGddFv2SJcQvnar0ul1EizwSlqXvT9JVICE1PPs%2FD4DuPWN4dLIa23vyAgeiSmw5%2FLCaxzRc%2FI%2BdQx%2BVcT9sVN677w0I4iT6el8ejQwWsJOrYz4Yh5v5TURo4plIdAy%2BRHfLRg2gbiXGY25B7U8tqCaQ3Vw%2B6R%2BTcJYxS5qAoCPA6eNyhL%2F5ZOzO%2FB7K496u%2BNuulOEYIiNVZ29O2P4C5WENOYsIKZxQqJDwxrHFisMFXINDpZ1EsG%2FN9hz0vwxKj85imB8E8B1zMnY17p%2FvGWwXbIJ0fPND366nUU58FbsKBV68TN0weGkx2i7JW63jZrGDiBs%2B4boCPabrmUiXBgz3cm7CwlyzbIPAL61EsMoTlyc7R3uX4OcgnfziYAixio5ri4gepsLVRRA5bZ2fDgP72H3%2F0UFEbFmSbAWhftwPREqG9nRllckcJ6lxthBf667gza3ccj7YhcoamHFkmucZQWECgMskIwppS8xgY6sAHlIt3gAKrLVe%2B05z%2BrpCfEkWuJtsnsxqBFyPzPzkxEQMemcqp6TN3o6cr7J2KXWl2IO8lymLjoBaLimIW%2B4%2BZrocmXBGDlfHqYyxPCt926V5mmtaUJc2pRkg5hKPHAGa6JbP141KGENaG0dHy0g484U9%2F2%2Fb6FjxlONWFi0bhQEl%2Bw8ks8tpUSG%2FN8HTdx4JQufV9sQC1IP9nwkAjGUetG9LbIf8u5wx1DfNF53NgrlA%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=d6af2b9b11c9a31ce4f269d0aa928cbbedb41904f51a5ebebb6bf6d749eaf229"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "Internet Bug Bounty",
      "twitter_handle": "",
      "website": "https://www.hackerone.com/internet-bug-bounty",
      "about": "The Internet Bug Bounty rewards security research into vulnerabilities impacting Open Source Software Projects."
    }
  },
  "has_bounty?": true,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [
    "CVE-2022-21658"
  ],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2022-03-24T18:09:51.838Z",
  "bug_reporter_agreed_on_going_public_at": "2022-03-24T18:09:51.751Z",
  "team_member_agreed_on_going_public_at": "2022-03-24T17:50:08.625Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "The implementation of [`std::fs::remove_dir_all()`](https://doc.rust-lang.org/std/fs/fn.remove_dir_all.html) in the Rust standard library is vulnerable to a time-of-check to time-of-use link replacement attack. This applies to all versions of Rust before 1.58.1.\n\n### Vulnerability details\nThe [documentation of `std::fs::remove_dir_all()`](https://doc.rust-lang.org/std/fs/fn.remove_dir_all.html) guarantees that the function does not follow symbolic links:\n> Removes a directory at this path, after removing all its contents. Use carefully!\n> This function does not follow symbolic links and it will simply remove the symbolic link itself.\n\nThe vulnerable implementation for Windows is in [library/std/src/sys/windows/fs.rs](https://github.com/rust-lang/rust/blob/1.58.0/library/std/src/sys/windows/fs.rs#L755-L779). For other platforms it is in [library/std/src/sys_common/fs.rs](https://github.com/rust-lang/rust/blob/1.58.0/library/std/src/sys_common/fs.rs#L28-L43). Both use a `remove_dir_all_recursive()` helper function which does the actual recursion and deletion. It opens directory by the given path and iterates the directory entries. For each directory entry it checks if the entry is a directory and recurses into it if it is. If it is not it is deleted using `std::fs::remove_file()`. On the way back up the now empty directories are deleted using `std::fs::remove_dir()`\n\nThere are two problems with this implementation if the attacker has write access to a directory which is being deleted by the privileged process:\n\n1. The type of a directory entry is checked and it is being recursed into if it is a directory. There is a short time window between the check and the opening of the subdirectory which an attacker can exploit by replacing the subdirectory with symlink causing the symlink to be followed.\n\n2. The path given to  `std::fs::remove_dir_all()` is extended with subentry paths which are then used to process subdirectories and delete directory entries. Paths are resolved by the operating system each time they are passed to a system call. If the attacker can replace a  descendent directory of the directory  passed to `remove_dir_all()` while a subdirectory of it is being processed with a symlink he can cause that symlink to be followed in subsequent filesystem operations.\n\nA proof-of-concept code demonstrating the vulnerability is attached.\n\n### Mitigation\n* Update to Rust 1.58.1 or later which includes a fixed implementation for all supported platforms except for macOS before version 10.10 and REDOX.\n* Don't use the vulnerable `std::fs::remove_dir_all()` in a privileged process or any other security-senstitive context.\n* Make sure that `std::fs::remove_dir_all()` is only used on directories not accessible to processes from other security contexts.\n\n## Impact\n\nIf the attacker has write access to a directory which is being deleted by the privileged process using `remove_dir_all()` he can trick the process to delete any sensitive files or directory subtrees that the privileged process can.",
  "bounty_amount": "4000.0",
  "formatted_bounty": "$4,000",
  "weakness": {
    "id": 105,
    "name": "Time-of-check Time-of-use (TOCTOU) Race Condition"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 1666463,
      "file_name": "remove_dir_all_toctou.rs",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/x8trol0sgllkfcmebtovbkgfwpc8?response-content-disposition=attachment%3B%20filename%3D%22remove_dir_all_toctou.rs%22%3B%20filename%2A%3DUTF-8%27%27remove_dir_all_toctou.rs&response-content-type=application%2Frls-services%2Bxml&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQYEN6ZMX6%2F20250921%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250921T001046Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHwaCXVzLXdlc3QtMiJIMEYCIQDaPeTSLue%2BnrEQPFz%2BGFlOGBetmNIsUt4npGAtXrfntwIhAJQjhaKlYHqET5ebauD%2F36ivbCgvomtYsJw7jjns6wfxKroFCPX%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQAxoMMDEzNjE5Mjc0ODQ5IgxATwEa%2Bklbzl1pOOIqjgWLiQYO1cLoMkYQ%2FM7yAqTtHBJPPMqU0kuJzwgknHMNizUjfFdnqf6%2F4%2BTnQnOKC%2Fg89XTHcDgjdpJ9MPoIUAHnmevlDSZ4v1PVq1z8b9OVPf1sabxVIJiNQn56qXcUrTfrXoxd97irBxCyfBrC6MiLJ8igFe3JyYHxdQnk%2BU0D8TTm6mOqNiOXFiDgwuSKAaBOuk3Ht5IJ3D%2B8kUFzgbGzhH4WUrPlS1bT%2FoHmfCEL%2FSD4J2UIakTNj%2FGh6SukadXYwvKp5wMfIkr%2FkpHTQ8zP8%2BBaig1ZBvZaRPguK2yNI1HV3hhx38Yh%2BfZp566I29M%2BFUGwCtXKOR6kdZlO75PfRNIcqGhASKKMFdqtT1KjpUg3%2BcvL0lZBTareGY85d34T5lfpgPgGddFv2SJcQvnar0ul1EizwSlqXvT9JVICE1PPs%2FD4DuPWN4dLIa23vyAgeiSmw5%2FLCaxzRc%2FI%2BdQx%2BVcT9sVN677w0I4iT6el8ejQwWsJOrYz4Yh5v5TURo4plIdAy%2BRHfLRg2gbiXGY25B7U8tqCaQ3Vw%2B6R%2BTcJYxS5qAoCPA6eNyhL%2F5ZOzO%2FB7K496u%2BNuulOEYIiNVZ29O2P4C5WENOYsIKZxQqJDwxrHFisMFXINDpZ1EsG%2FN9hz0vwxKj85imB8E8B1zMnY17p%2FvGWwXbIJ0fPND366nUU58FbsKBV68TN0weGkx2i7JW63jZrGDiBs%2B4boCPabrmUiXBgz3cm7CwlyzbIPAL61EsMoTlyc7R3uX4OcgnfziYAixio5ri4gepsLVRRA5bZ2fDgP72H3%2F0UFEbFmSbAWhftwPREqG9nRllckcJ6lxthBf667gza3ccj7YhcoamHFkmucZQWECgMskIwppS8xgY6sAHlIt3gAKrLVe%2B05z%2BrpCfEkWuJtsnsxqBFyPzPzkxEQMemcqp6TN3o6cr7J2KXWl2IO8lymLjoBaLimIW%2B4%2BZrocmXBGDlfHqYyxPCt926V5mmtaUJc2pRkg5hKPHAGa6JbP141KGENaG0dHy0g484U9%2F2%2Fb6FjxlONWFi0bhQEl%2Bw8ks8tpUSG%2FN8HTdx4JQufV9sQC1IP9nwkAjGUetG9LbIf8u5wx1DfNF53NgrlA%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=ce6911395e73904eac893524d79ee6f37888099b72fbfc2476b5e6d4e8ddbc6a",
      "file_size": 1930,
      "type": "application/rls-services+xml",
      "moderated": null
    }
  ],
  "allow_singular_disclosure_at": "2022-04-23T17:50:08.749Z",
  "allow_singular_disclosure_after": -107677237.44127274,
  "singular_disclosure_allowed": true,
  "vote_count": 9,
  "voters": [
    "omer",
    "shivammusic",
    "e1ec30",
    "kuliqi",
    "rizkylabh1",
    "acdon",
    "hkratz",
    "nonven",
    "hackers_tech"
  ],
  "severity": {
    "rating": "high",
    "author_type": "User"
  },
  "structured_scope": {
    "databaseId": 93596,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "https://github.com/rust-lang/rust",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "id": 139015,
      "category": "team",
      "content": "Race condition in std::fs::remove_dir_all\nDescription\nThis is a cross-post of the official security advisory. The official advisory contains a signed version with our PGP key, as well.\n\nThe Rust Security Response WG was notified that the std::fs::remove_dir_all\nstandard library function is vulnerable a race condition enabling symlink\nfollowing (CWE-363). An attacker could use this security issue to trick a\nprivileged program into deleting files and directories the attacker couldn't\notherwise access or delete.\n\nThis issue has been assigned CVE-2022-21658.\n\nOverview\nLet's suppose an attacker obtained unprivileged access to a system and needed\nto delete a system directory called sensitive/, but they didn't have the\npermissions to do so. If std::fs::remove_dir_all followed symbolic links,\nthey could find a privileged program that removes a directory they have access\nto (called temp/), create a symlink from temp/foo to sensitive/, and wait\nfor the privileged program to delete foo/. The privileged program would\nfollow the symlink from temp/foo to sensitive/ while recursively deleting,\nresulting in sensitive/ being deleted.\n\nTo prevent such attacks, std::fs::remove_dir_all already includes protection\nto avoid recursively deleting symlinks, as described in its documentation:\n\nThis function does not follow symbolic links and it will simply remove\nthe symbolic link itself.\n\nUnfortunately that check was implemented incorrectly in the standard library,\nresulting in a TOCTOU (Time-of-check Time-of-use) race condition. Instead of\ntelling the system not to follow symlinks, the standard library first checked\nwhether the thing it was about to delete was a symlink, and otherwise it would\nproceed to recursively delete the directory.\n\nThis exposed a race condition: an attacker could create a directory and replace\nit with a symlink between the check and the actual deletion. While this attack\nlikely won't work the first time it's attempted, in our experimentation we were\nable to reliably perform it within a couple of seconds.\n\nAffected Versions\nRust 1.0.0 through Rust 1.58.0 is affected by this vulnerability. We're going\nto release Rust 1.58.1 later today, which will include mitigations for this\nvulnerability. Patches to the Rust standard library are also available for\ncustom-built Rust toolchains here.\n\nNote that the following targets don't have usable APIs to properly mitigate the\nattack, and are thus still vulnerable even with a patched toolchain:\n\nmacOS before version 10.10 (Yosemite)\nREDOX\nMitigations\nWe recommend everyone to update to Rust 1.58.1 as soon as possible, especially\npeople developing programs expected to run in privileged contexts (including\nsystem daemons and setuid binaries), as those have the highest risk of being\naffected by this.\n\nNote that adding checks in your codebase before calling remove_dir_all will\nnot mitigate the vulnerability, as they would also be vulnerable to race\nconditions like remove_dir_all itself. The existing mitigation is working as\nintended outside of race conditions.\n\nAcknowledgments\nWe want to thank Hans Kratz for independently discovering and disclosing this\nissue to us according to the Rust security policy, for developing the fix\nfor UNIX-like targets and for reviewing fixes for other platforms.\n\nWe also want to thank Florian Weimer for reviewing the UNIX-like fix and for\nreporting the same issue back in 2018, even though the Security Response WG\ndidn't realize the severity of the issue at the time.\n\nFinally we want to thank Pietro Albini for coordinating the security response\nand writing this advisory, Chris Denton for writing the Windows fix, Alex\nCrichton for writing the WASI fix, and Mara Bos for reviewing the patches.\n\nhttps://github.com/rust-lang/rust/security/advisories/GHSA-r9cc-f5pr-p3j2",
      "updated_at": "2022-03-24T17:49:05.253Z",
      "can_view?": true,
      "can_create?": false,
      "attachments": [],
      "user": {
        "id": 904892,
        "username": "kunderkoffler",
        "name": "Kayla Underkoffler",
        "bio": null,
        "cleared": false,
        "verified": false,
        "website": null,
        "location": null,
        "created_at": "2020-01-13T19:26:22.339Z",
        "url": "https://hackerone.com/kunderkoffler",
        "hackerone_triager": false,
        "hackerone_employee": false,
        "user_type": "company",
        "profile_picture_urls": {
          "small": "/assets/avatars/default-14ffa99f59cd01423c64904352cc130ffcb6a802eadfd11777a54485749e60f2.png",
          "medium": "/assets/avatars/default-14ffa99f59cd01423c64904352cc130ffcb6a802eadfd11777a54485749e60f2.png",
          "xtralarge": "/assets/avatars/default-14ffa99f59cd01423c64904352cc130ffcb6a802eadfd11777a54485749e60f2.png"
        }
      }
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
