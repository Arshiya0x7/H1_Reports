{
  "id": 3393539,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8zMzkzNTM5",
  "url": "https://hackerone.com/reports/3393539",
  "title": "Memory leak in Curl_auth_create_ntlm_type3_message",
  "state": "Closed",
  "substate": "informative",
  "severity_rating": "low",
  "readable_substate": "Informative",
  "created_at": "2025-10-21T23:41:52.030Z",
  "submitted_at": "2025-10-21T23:41:52.622Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "tjbecker_theori",
    "url": "/tjbecker_theori",
    "profile_picture_urls": {
      "small": "/assets/avatars/default-14ffa99f59cd01423c64904352cc130ffcb6a802eadfd11777a54485749e60f2.png"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 35663,
    "url": "https://hackerone.com/curl",
    "handle": "curl",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/035/663/2faf4c279d437d64bfda6d23d62ce1833813a4d9_original.png/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/035/663/2faf4c279d437d64bfda6d23d62ce1833813a4d9_original.png/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "curl",
      "twitter_handle": "",
      "website": "https://curl.se",
      "about": "cURL is an Open Source project providing a library and command-line tool doing internet transfers"
    }
  },
  "has_bounty?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2025-10-28T14:48:40.297Z",
  "bug_reporter_agreed_on_going_public_at": null,
  "team_member_agreed_on_going_public_at": "2025-10-28T07:09:28.839Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "## Summary:\nWhen handling NTLMv2, if the decoded type-2 “TargetInfo” is large enough that `ntresplen+header_size` exceeds `NTLM_BUFSIZE` (1024), the code returns early without freeing `ntlmv2resp`, causing a memory leak.\n\nhttps://github.com/curl/curl/blob/7d5d0645e5562f65005488fbc7fd270a71239a5f/lib/vauth/ntlm.c#L789\n\nSecurity Impact: Low\nA malicious peer can set TargetInfo to be above the threshold and cause the client to leak memory. With repeated connections, this can gradually exhaust the resources of the client.\n\nThis vulnerability was found using Theori's Xint Code (an AI-powered tool), but validated and confirmed by our human researchers.\n\n## Affected version\nAffects the latest version, 8.16.0\n\n## Steps To Reproduce:\nWe'll use the curl fuzzers as a way to PoC the issue, but in the wild the issue could be triggered by a malicious HTTP server.\n\n1. Build the fuzzers for curl:\n1a. `git clone https://github.com/curl/curl-fuzzers.git`\n1b. `cd curl-fuzzers && ./mainline.sh`\n2. Generate the PoC input by running the attached script\n2a. `python poc.py # outputs ./input.bin`\n3. Run the fuzzer on the generated input:\n3.a `./build/curl_fuzzer_http input.bin`\n\n```\n ./build/curl_fuzzer_http input.bin \n[input.bin] Opened.. Read 1408 bytes, fuzzing.. complete !!\n\n=================================================================\n==2757954==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 964 byte(s) in 1 object(s) allocated from:\n    #0 0x563de804999d in calloc (/home/user/tjbecker/curl-fuzzer/build/curl_fuzzer_http+0x6be99d) (BuildId: c1a573bc4310acd581ec5b1466ea99bb00d3c79f)\n    #1 0x563de80e4a90 in curl_dbg_calloc (/home/user/tjbecker/curl-fuzzer/build/curl_fuzzer_http+0x759a90) (BuildId: c1a573bc4310acd581ec5b1466ea99bb00d3c79f)\n    #2 0x563de84520ca in Curl_ntlm_core_mk_ntlmv2_resp (/home/user/tjbecker/curl-fuzzer/build/curl_fuzzer_http+0xac70ca) (BuildId: c1a573bc4310acd581ec5b1466ea99bb00d3c79f)\n    #3 0x563de83e6420 in Curl_auth_create_ntlm_type3_message (/home/user/tjbecker/curl-fuzzer/build/curl_fuzzer_http+0xa5b420) (BuildId: c1a573bc4310acd581ec5b1466ea99bb00d3c79f)\n    #4 0x563de8357698 in Curl_output_ntlm (/home/user/tjbecker/curl-fuzzer/build/curl_fuzzer_http+0x9cc698) (BuildId: c1a573bc4310acd581ec5b1466ea99bb00d3c79f)\n    #5 0x563de82ed9f2 in output_auth_headers http.c\n    #6 0x563de82ed30f in Curl_http_output_auth (/home/user/tjbecker/curl-fuzzer/build/curl_fuzzer_http+0x96230f) (BuildId: c1a573bc4310acd581ec5b1466ea99bb00d3c79f)\n    #7 0x563de82e3afd in Curl_http (/home/user/tjbecker/curl-fuzzer/build/curl_fuzzer_http+0x958afd) (BuildId: c1a573bc4310acd581ec5b1466ea99bb00d3c79f)\n    #8 0x563de812b460 in multi_do multi.c\n    #9 0x563de81288a9 in state_do multi.c\n    #10 0x563de8116b00 in multi_runsingle multi.c\n    #11 0x563de8114894 in curl_multi_perform (/home/user/tjbecker/curl-fuzzer/build/curl_fuzzer_http+0x789894) (BuildId: c1a573bc4310acd581ec5b1466ea99bb00d3c79f)\n    #12 0x563de808c3f7 in fuzz_handle_transfer(fuzz_data*) /home/user/tjbecker/curl-fuzzer/curl_fuzzer.cc:341:3\n    #13 0x563de808a70d in LLVMFuzzerTestOneInput /home/user/tjbecker/curl-fuzzer/curl_fuzzer.cc:97:3\n    #14 0x563de9487ff9 in main (/home/user/tjbecker/curl-fuzzer/build/curl_fuzzer_http+0x1afcff9) (BuildId: c1a573bc4310acd581ec5b1466ea99bb00d3c79f)\n    #15 0x7f5e7782a1c9  (/lib/x86_64-linux-gnu/libc.so.6+0x2a1c9) (BuildId: 274eec488d230825a136fa9c4d85370fed7a0a5e)\n    #16 0x7f5e7782a28a in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2a28a) (BuildId: 274eec488d230825a136fa9c4d85370fed7a0a5e)\n    #17 0x563de7fae964 in _start (/home/user/tjbecker/curl-fuzzer/build/curl_fuzzer_http+0x623964) (BuildId: c1a573bc4310acd581ec5b1466ea99bb00d3c79f)\n\nSUMMARY: AddressSanitizer: 964 byte(s) leaked in 1 allocation(s).\n```\n\n## Supporting Material/References:\nhttps://github.com/curl/curl/blob/7d5d0645e5562f65005488fbc7fd270a71239a5f/lib/vauth/ntlm.c#L789\n\n## Impact\n\n## Summary:\nSecurity Impact: Low\nA malicious peer can set TargetInfo to be above the threshold and cause the client to leak memory. With repeated connections, this can gradually exhaust the resources of the client.",
  "weakness": {
    "id": 48,
    "name": "Uncontrolled Resource Consumption"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 1,
  "voters": [
    "0xm4hmoud"
  ],
  "severity": {
    "rating": "low",
    "author_type": "User"
  },
  "structured_scope": {
    "databaseId": 18844,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "https://github.com/curl/curl",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
