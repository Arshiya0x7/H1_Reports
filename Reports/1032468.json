{
  "id": 1032468,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xMDMyNDY4",
  "url": "https://hackerone.com/reports/1032468",
  "title": "Read-only application can publish/delete fleets",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2020-11-12T12:32:59.699Z",
  "submitted_at": "2020-11-12T12:32:59.749Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "ryotak",
    "url": "/ryotak",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/Nb79aqy3v6SyMh8rwZZh43cu/3cb67cc78dc0cba55b102dd9eca2ee89b206d3e960be830f070583d9070b69ef"
    },
    "is_me?": false,
    "cleared": true,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 61,
    "url": "https://hackerone.com/x",
    "handle": "x",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/ikx4ept298unt534kpz4am2bd4zs/3cb67cc78dc0cba55b102dd9eca2ee89b206d3e960be830f070583d9070b69ef",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/ikx4ept298unt534kpz4am2bd4zs/d9695107bfcd68eeb1c9e0912b109cdae9a6c00c0bda6fd4cbd6d9bdb828840a"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "X / xAI",
      "twitter_handle": "XSecurity",
      "website": "https://x.com",
      "about": "X helps you create and share ideas and information instantly, without barriers."
    }
  },
  "has_bounty?": true,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2021-01-04T17:05:39.356Z",
  "bug_reporter_agreed_on_going_public_at": "2020-12-18T06:54:51.354Z",
  "team_member_agreed_on_going_public_at": "2021-01-04T17:05:39.259Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "## Summary:\nTwitter released [Fleet](https://blog.twitter.com/ja_jp/topics/product/2020/ntroducing-fleets-new-way-to-join-the-conversation-jp.html) yesterday. This feature is working with few APIs, and these APIs are missing permission checks.\n\n## Description:\nIn `/fleets/v1/create` of `https://api.twitter.com`, there is no check to whether if the application has permission to write to the account. `/fleets/v1/delete` has also this issue.\n\n\n## Steps To Reproduce:\n\n  1. Install [twurl](https://github.com/twitter/twurl).\n  1. Authenticate as a read-only application.\n  1. Execute following command: `twurl /fleets/v1/create -X POST --header 'Content-Type: application/json' -d '{\"text\":\"Hey yo\"}'`\n  1. A fleet with `Hey yo` text will be created.\n\n## Supporting Material/References:\n{F1075380}\n\n## Impact\n\nThe read-only application can publish fleets without getting Write permission. This issue has a similar impact to #434763",
  "weakness": {
    "id": 75,
    "name": "Privilege Escalation"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 1075380,
      "file_name": "2020-11-12_21-28-47.mp4",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/7g8GjuEbSqNMGdNhirX9ux3y?response-content-disposition=attachment%3B%20filename%3D%222020-11-12_21-28-47.mp4%22%3B%20filename%2A%3DUTF-8%27%272020-11-12_21-28-47.mp4&response-content-type=video%2Fmp4&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQRPZENPKD%2F20250921%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250921T074836Z&X-Amz-Expires=1097&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEIL%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIAVHQbwsDoPkABWT5%2B%2FcxKj9dlPUCiAK7T%2BFFCXdxLrPAiBX2lSHjESlSy8QsUlA7vXdLSn4ea4Xiiw2UrbmZz%2Blwyq7BQj7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAMaDDAxMzYxOTI3NDg0OSIMDCypXEsZEkr5ireXKo8FZYoY4LAjDpPPUtd1NsbqDrfHEKbol%2Fl0zbzUkHb%2FDMyufObmydLXAVfTWyTq8M83futwK1Yua1CHEl3flNsyoGlBRT7783Yno%2BSIhflCnhdl34SfYe3WSz3KMlR6U6rObGpEEedLsrp2lH30QPw%2BCCr0rMC2GFUhTSW8t1aSZgiThB4a7g4EkofATsLrkgjKf%2F%2FPbVuhiONHZD7V8A4dsRicBCm5QCAJ8gdc9%2Fa%2FchZNAQalNGvbYjZZ4OZClucbktKQgwOkNtsAZ%2F3fpin4oioVvhBVK2QTGYKzS9Vw4AgUKbRO2C4PTfySYDWuyUTG9zrGCEYEq6MtYjVjMciE9aPiEW4OCpALv9c%2Fnhwo6XyDEUc5Y4J7kpkmgxiJm%2FnKnhBX6L%2FhwQimgfYkpHdiPVQDdH6CJRToS884u7zt6Oitvu9ZxHRv%2BNw7UWz8C%2F4zpUT%2F1YrDnDMW8LmGWj5lTMuNW%2F%2FXeN9PV64LEdK1XnN26vJLY9tPRAkAEphIEa2Mp9mhZZ1Z7MefD7V4WTQZUazBcZfZdFjfOMrh0ibOMgoo8CCiL1Cm7uQQ1CzZt%2BtZzM6OlBy%2BgYE8qtUpXtotvnXnqU2Unr329EMF1ngMiPpfnJK2zIC6KlnKvp5D1PoUUJ5BP1ka873JsX69XDa2ARmnfKK2hUOe6FyV4OPe7zIMQgyJiAbEHWzMS3mq4pEiKJvvdg3xhF6AkjB92yRN1CNtLBnr1601Z%2F11uh3k97BGpzb5otiRC9tOjelGgcp81%2B5cUuuo5muMij9PbHD2r02l0F7WTXYCw6PyFC15Om5QvWq74M%2BgyuElq61LfIE5IkUt44aIWcdWTvBBa%2FpxFjyIiYpZJqIus6ylSdxepDCFur3GBjqyAazMVovu%2FR7HlzcY6BZH9cet9jDRlt4O%2Fc7u%2BrXfJy0AyilF%2B4S%2B1%2FNq3RFpJPt7gS%2FWDMzJBRmOs0q8SVlHxvhV3uzMsWZYHd5YH9PmXpJ7RM%2FT71zoNIxnESl69wmjk00scT45yz6xd%2FW6SzJWdAn5FKDKPGkQzhsO%2Bg5iALG%2F6Ghlp9VB%2Fw5RX5GDfsXlaq2IFEEcViasX2xZl9TGDZ8G2xXZXFJXAZ8px7d1T5xkzbU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=557eb5285d1b482755593a22d5a23f89186a99911e2fdc54583d75bd9051a6a8",
      "file_size": 3100117,
      "type": "video/mp4",
      "moderated": null
    }
  ],
  "allow_singular_disclosure_at": "2021-01-17T06:54:51.437Z",
  "allow_singular_disclosure_after": -147574425.00797772,
  "singular_disclosure_allowed": true,
  "vote_count": 398,
  "voters": [
    "birdbird314",
    "thdee",
    "tokyoenigma",
    "napoleon17",
    "th3hidd3nmist",
    "rivalsec",
    "orange303",
    "arist0phanes",
    "taha",
    "kana101",
    "and 388 more..."
  ],
  "severity": {
    "rating": "medium",
    "author_type": "User"
  },
  "structured_scope": {
    "databaseId": 1062,
    "asset_type": "WILDCARD",
    "asset_identifier": "*.twitter.com",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "id": 25902,
      "category": "researcher",
      "content": "If you want to read my write-up in Japanese, you can visit [my blog](https://blog.ryotak.me/post/twitter-privesc).\n\n## TL;DR\nI found a flaw that allows a read-only application to publish/delete fleets while creating [an unofficial API document](https://gist.github.com/Ry0taK/005b79eccb4297469a09696dae9fa3c6) for the Fleet API.\n\n### New feature - Fleet\nTwitter [released](https://blog.twitter.com/ja_jp/topics/product/2020/ntroducing-fleets-new-way-to-join-the-conversation-jp.html) a feature named `Fleet` in Japan on November 10th.\nA day later, I got an update for my Twitter for Android.\nSince I was bored and trying to find something to do, I decided to reverse engineer it.\n\n### Try to analyze\nTwitter for Android is written in Java like a normal Android app, and although it is obfuscated, it is not so difficult to analyze.\nTherefore, I decompiled it using [`apktool`] (https://ibotpeaches.github.io/Apktool/),[`dex2jar`] (https://github.com/pxb1988/dex2jar), and [`CFR`] (https://www.benf.org/other/cfr/) to make it somewhat readable state. (I won't go into the details of decompiling here, but if you google it, many resources will come out, so please refer to that.)\nWe can't analyze the API without knowing the endpoint name, so I used `grep` to find the` .java` file that contains the string `fleet`, then I found a file that contains `/fleets/v1/user_fleets`.\nWhen I examined the files in the same directory, I found other strings that seemed to be other endpoints, so I analyzed them and wrote the documentation in Gist.\n\n### During verification...\nAfter that, while checking the contents of Gist, I found that hitting the fleet-related API while authenticating as a third-party application worked fine.\nI thought \"Isn't this good news for the creators of unofficial Twitter clients?\", so I wrote [more detailed API documentation](https://gist.github.com/Ry0taK/005b79eccb4297469a09696dae9fa3c6).\nBefore publishing, I was verifying that the contents of this Gist are correct, but when I sent a request to `POST /fleets/v1/create` as an application with only read permission, a fleet was created.\n{F1120781}\n\n### Is this a vulnerability?\nAt first, I thought that I had accidentally given write permission to my application, so I checked the permission, but apparently, only read permission was given.\nAt this point, I started thinking \"is this a vulnerability?\", but I couldn't confirm it, so I decided to investigate a little deeper.\nAs a result, in the normal Twitter API (`POST /1.1/statuses/update.json`, etc.), the permission of the application was checked before the API processing started (it is natural), but apparently, the fleet-related endpoint wasn't. It turns out that these APIs do not perform permission checks.\n\n```json\n{\n     \"request\": \"\\/1.1\\/statuses\\/update.json\",\n     \"error\": \"Read-only application cannot POST.\"\n}\n```\n\n### Let's report it!\nSince it turned out to be a vulnerability, I decided to postpone the release of the fleet-related API document and reported it to Twitter.\nThe report was made on November 12th, and it was fixed on November 18th (I think it was actually a few days before the 18th), which was a very impressive remediation speed.\nUnfortunately, the fact that the fleet-related API could be used by a third-party application itself was a problem, and it was fixed by changing the fleet-related API so that it would not be hit by a third-party application anymore :(\n\n### After the report\nThree days after Twitter fixed the vulnerability, there was a person who analyzed the fleet's API and [tweeted](https://twitter.com/donk_enby/status/1330078983350837248) that the fleet's image was not deleted from the CDN even after 24 hours. As it  looks like the period that could be used to implement the fleet function was very short, I felt sorry for the developer inside Twitter.\n\n### Conclusion\nThis report shows the importance of constantly checking for new features and that even the large companies create vulnerabilities.\nIf you have any questions, send a message to [@ryotkak](https://twitter.com/ryotkak) on Twitter.",
      "updated_at": "2021-01-07T00:26:02.482Z",
      "can_view?": true,
      "can_create?": false,
      "attachments": [],
      "user": {
        "id": 569456,
        "username": "ryotak",
        "name": "RyotaK",
        "bio": "",
        "cleared": true,
        "verified": true,
        "website": "https://ryotak.net",
        "location": "",
        "created_at": "2019-04-04T07:16:31.098Z",
        "url": "https://hackerone.com/ryotak",
        "hackerone_triager": false,
        "hackerone_employee": false,
        "user_type": "hacker",
        "profile_picture_urls": {
          "small": "https://profile-photos.hackerone-user-content.com/variants/Nb79aqy3v6SyMh8rwZZh43cu/3cb67cc78dc0cba55b102dd9eca2ee89b206d3e960be830f070583d9070b69ef",
          "medium": "https://profile-photos.hackerone-user-content.com/variants/Nb79aqy3v6SyMh8rwZZh43cu/d9695107bfcd68eeb1c9e0912b109cdae9a6c00c0bda6fd4cbd6d9bdb828840a",
          "xtralarge": "https://hackerone.com/rails/active_storage/representations/redirect/eyJfcmFpbHMiOnsiZGF0YSI6NzM1NzUyLCJwdXIiOiJibG9iX2lkIn19--4a81390f64fe60af2e81fe4aa64c3a4ccad7c709/eyJfcmFpbHMiOnsiZGF0YSI6eyJmb3JtYXQiOiJqcGciLCJyZXNpemUiOiIyNjB4MjYwXHUwMDNlIn0sInB1ciI6InZhcmlhdGlvbiJ9fQ==--cf3aeca803d1baf476958c689ca7b472a4cb54f1/drmYzeQn.jpg"
        }
      }
    }
  ]
}
