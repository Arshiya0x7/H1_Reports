{
  "id": 3175928,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8zMTc1OTI4",
  "url": "https://hackerone.com/reports/3175928",
  "title": "ImageId Format Injection in Image Upload Endpoint",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2025-06-03T14:51:33.780Z",
  "submitted_at": "2025-06-03T14:51:34.197Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "oblivionsage",
    "url": "/oblivionsage",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/x2lozwzz6o4gdnb66zxqxjvzza3i/36bca6668139d77be42208d896968344ae7a76c55ee0f8b0f28281ccd492ff02"
    },
    "is_me?": false,
    "cleared": false,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 48242,
    "url": "https://hackerone.com/lichess",
    "handle": "lichess",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/CbR2hQEVmv82Z9L1cfqd9SFQ/36bca6668139d77be42208d896968344ae7a76c55ee0f8b0f28281ccd492ff02",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/CbR2hQEVmv82Z9L1cfqd9SFQ/19c85a12ac35f466af1ea2b0ae853bfe5e8f057fb1d6fb62db131707bb67b30d"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": false,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "Lichess",
      "twitter_handle": "",
      "website": "https://lichess.org",
      "about": "The free chess server. No paywall, no tracking, no ads. Just the good stuff. Source code: https://lichess.org/source"
    }
  },
  "has_bounty?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2025-06-06T17:43:33.725Z",
  "bug_reporter_agreed_on_going_public_at": "2025-06-06T15:02:58.496Z",
  "team_member_agreed_on_going_public_at": "2025-06-06T17:43:33.420Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "# Summary\n\nHello Again Lichess Team,\n\nI found an input validation issue in the image upload endpoint that lets me inject special characters into the `rel` parameter. This breaks the expected ImageId format that the application uses to identify uploaded images. While testing upload functionality, I noticed that colon characters aren't properly sanitized, which could cause parsing issues in other parts of the application\n\n\n# Description\n\nThe `/upload/image/user/{rel}` endpoint doesn't validate the `rel` parameter properly. This parameter gets combined with random strings to create an ImageId that should follow a specific format: `{rel}:{random12}:{random8}.{extension}`\n\nThe issue is that the application accepts colon characters in the `rel` parameter without sanitization. This happens because the validation only checks for MongoDB injection patterns (like `$ne`) but misses format-breaking characters\n\n\nLooking at the code in `modules/memo/src/main/Picfit.scala`:\n\n\n```bash\nval image = PicfitImage(\n  id = ImageId(s\"$rel:${ThreadLocalRandom.nextString(8)}.$extension\"),\n  // rel parameter used directly without validation\n  rel = rel,\n  // ...\n)\n```\n\n\nSo when I inject colons, instead of getting the expected 3-part format, I get multiple parts that could break parsing logic elsewhere\n\n\n#  Steps to Reproduce\n\n1.  Login to Lichess and grab your session cookie\n2. Create a small test image file (test.png)\n\n```bash\n# Create a small test image (1x1 pixel PNG)\necho -e '\\x89PNG\\r\\n\\x1a\\n\\x00\\x00\\x00\\rIHDR\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x01\\x08\\x02\\x00\\x00\\x00\\x90wS\\xde\\x00\\x00\\x00\\x0cIDATx\\x9cc\\xf8\\x00\\x00\\x00\\x01\\x00\\x01\\x00\\x00\\x00\\x00\\x16\\x1d\\xb3\\x00\\x00\\x00\\x00IEND\\xaeB`\\x82' > test.png\n```\n\n3. Send this request:\n\n```bash\ncurl -X POST \"https://lichess.org/upload/image/user/test:evil:format:break\" \\\n  -b \"lila2=YOUR_SESSION_COOKIE\" \\\n  -H \"Origin: https://lichess.org\" \\\n  -H \"Referer: https://lichess.org/\" \\\n  -F \"image=@test.png\"\n```\n\n**Expected Result**: The application should reject the request or sanitize the colons\n**Actual Result**: The request succeeds and returns:\n\nNormal Request :\n\n{F4409970}\n\n{F4409974}\n\nActual Request with inject :\n\n{F4409975}\n\n{F4409976}\n\n\n```bash\n{\"imageUrl\":\"https://image.lichess1.org/display?...&path=test:evil:format:break:ePU9oRLnNvCz:iFZRITKQ.png&...\"}\n```\n\n\nNotice how the ImageId now has 6 parts instead of the expected 3: `test:evil:format:break:ePU9oRLnNvCz:iFZRITKQ.png`\n\n\nhttps://cwe.mitre.org/data/definitions/20.html\n\n\n# Mitigation\n\n\nTo fix this, you should sanitize the `rel` parameter in the image upload handler. Something like:\n\n```bash\n// Validate rel parameter format\nval sanitizedRel = rel.replaceAll(\"[^a-zA-Z0-9_-]\", \"_\")\n```\n\nOr add validation in the `uploadSource` method in `PicfitApi.scala` to reject `rel` values containing colons or other format-breaking characters.Also consider documenting the expected ImageId format since the current code assumes a specific structure that could break if the format changes.\n\n## Impact\n\nAn attacker could potentially cause issues in other parts of the application that expect ImageIds to follow the standard 3-part format. I noticed there's regex parsing logic in `findInMarkdown` that might not handle malformed ImageIds correctly .This could cause issues in logging, image lookup, or markdown parsing where the format of imageId is implicitly assumed. In production environments with chained handlers or analytics relying on this structure, this might lead to edge-case bugs or silent failures\n\nHowever, I couldn't demonstrate concrete security impact beyond breaking the data format. The images still upload successfully and get stored properly\n\nThank you for your time and reviewing my report",
  "weakness": {
    "id": 107,
    "name": "Improper Input Validation"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 4409970,
      "file_name": "image.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/ogz6wc94gh4xiiehbn9z6t1sfjt4?response-content-disposition=attachment%3B%20filename%3D%22image.png%22%3B%20filename%2A%3DUTF-8%27%27image.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ6G65MFJS%2F20250704%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250704T194645Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQDPuxwsJDjHTxjH%2FqNRsDAmPHPdFiUeImrXoxwNaA%2FwkwIhAI%2BQdOMW1wIULIb6uWuoH5ctJ5dsZX5hl0qljtaB3m75KrEFCDMQAxoMMDEzNjE5Mjc0ODQ5Igz81WDmB4v8tHAjwMMqjgVSt5fjXfHwugJgQcPRAe2NMGtv2BKO5rpFyrQlAEz7oRlSq6YXGoSr7%2BBGu%2B%2Bqr7b6RwK1a75tcWwZ2stNkOCfiJRd3bhD7Cb4mxmKNtGLblienBlUM2tH52yuCi2SyZIThCaV967jwI0Mw2cUcyJQ6e32XzBqvdj8vB%2F095LCPd9Y6YSqjb1CWqAtoUZK9h5q37EVikXZehhp%2BVd2EjpnJfdmZ28ENSrmyBkPQsF5sfyZaTk6QI1Rfq0lH1YeDpdLPR%2BDk6aY3URBMehapeM%2FqvRZwi3mXhZaU52SIniJiMRAcPHlHnxoiWXTG8wPOy20rDUnRhOSQuXc%2FL30hkMmdgkHTX16W3%2BBftzcAJhUp8wKHpquSkZLyLd1g92IEZb6Ojtab%2FpCaJebjgo1fG7oSX5b5C%2BcsYstguz%2FtBh%2BRq1OhupdFCOIStIRaDBKnkh7P642BEW5%2FhVZs9r1uXuYLucgVYI2ceNCUL0wIbnFNW23z7lSNDotWN3YM86jAddDuC7yoTVaFg3oACLlMrxxGLBpB4qKln96x3wl2NWHOzOLtFC%2FiGFvLeNjxZrLiXvutWjdll%2FDZgxJPqDv7qrbLgGkwaARXgGcQNfbPMYVPdlbxCDwk%2BSQdpRQH74M6%2BF7xSdYWBgCfvOoff23IgSklGVp3fTm46DzypxrlJ8vRf4j8dj1mutEUtSCswMDgolANUjOD88YLhfuiucmi0SfaTiEoFC0fq4mjD7CmMvGl2znOCoQopfgulX%2B8vYbKM1VcSyiFf9DO3XkRyoksQYvjVWHp3pKRmLsutyDkVNugIkCUmm2RIrCc6m1hjPf32k%2BUV3vhZNsgEP1g9FyCxyYao7OzYO1W8bY1e3M6q4w56%2BgwwY6sAH5Zn%2BpdCoCGmUXocyvy8LyLLYOePbPQGqb1ow%2FYwAwDZ3rKKH5VijKY8Py0RYA5WmxO4WCDb7H63OIseNJlj26HxMdqFE61TXsXXWHjZ2p4rP2iXfyeNTzWfWpForgpMLSqURh5cQWwhDZ%2BXey%2FKSn1ViJT0h4xTZymDJhL%2FNmHQdPQsoXr%2FM%2BIFfRjS96QCiXtgsFJlPUSynecAznw1Y2hTDZwtUFG0tXRFBJiAuk1w%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=2807cf7e6534d5921bf6e650132c6f747d964dc71ef24da29b9f1dd0152f17f9",
      "file_size": 80096,
      "type": "image/png",
      "moderated": false
    },
    {
      "id": 4409974,
      "file_name": "image.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/iggzv6hg7mx79c94p9abj1sp4c7f?response-content-disposition=attachment%3B%20filename%3D%22image.png%22%3B%20filename%2A%3DUTF-8%27%27image.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ6G65MFJS%2F20250704%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250704T194645Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQDPuxwsJDjHTxjH%2FqNRsDAmPHPdFiUeImrXoxwNaA%2FwkwIhAI%2BQdOMW1wIULIb6uWuoH5ctJ5dsZX5hl0qljtaB3m75KrEFCDMQAxoMMDEzNjE5Mjc0ODQ5Igz81WDmB4v8tHAjwMMqjgVSt5fjXfHwugJgQcPRAe2NMGtv2BKO5rpFyrQlAEz7oRlSq6YXGoSr7%2BBGu%2B%2Bqr7b6RwK1a75tcWwZ2stNkOCfiJRd3bhD7Cb4mxmKNtGLblienBlUM2tH52yuCi2SyZIThCaV967jwI0Mw2cUcyJQ6e32XzBqvdj8vB%2F095LCPd9Y6YSqjb1CWqAtoUZK9h5q37EVikXZehhp%2BVd2EjpnJfdmZ28ENSrmyBkPQsF5sfyZaTk6QI1Rfq0lH1YeDpdLPR%2BDk6aY3URBMehapeM%2FqvRZwi3mXhZaU52SIniJiMRAcPHlHnxoiWXTG8wPOy20rDUnRhOSQuXc%2FL30hkMmdgkHTX16W3%2BBftzcAJhUp8wKHpquSkZLyLd1g92IEZb6Ojtab%2FpCaJebjgo1fG7oSX5b5C%2BcsYstguz%2FtBh%2BRq1OhupdFCOIStIRaDBKnkh7P642BEW5%2FhVZs9r1uXuYLucgVYI2ceNCUL0wIbnFNW23z7lSNDotWN3YM86jAddDuC7yoTVaFg3oACLlMrxxGLBpB4qKln96x3wl2NWHOzOLtFC%2FiGFvLeNjxZrLiXvutWjdll%2FDZgxJPqDv7qrbLgGkwaARXgGcQNfbPMYVPdlbxCDwk%2BSQdpRQH74M6%2BF7xSdYWBgCfvOoff23IgSklGVp3fTm46DzypxrlJ8vRf4j8dj1mutEUtSCswMDgolANUjOD88YLhfuiucmi0SfaTiEoFC0fq4mjD7CmMvGl2znOCoQopfgulX%2B8vYbKM1VcSyiFf9DO3XkRyoksQYvjVWHp3pKRmLsutyDkVNugIkCUmm2RIrCc6m1hjPf32k%2BUV3vhZNsgEP1g9FyCxyYao7OzYO1W8bY1e3M6q4w56%2BgwwY6sAH5Zn%2BpdCoCGmUXocyvy8LyLLYOePbPQGqb1ow%2FYwAwDZ3rKKH5VijKY8Py0RYA5WmxO4WCDb7H63OIseNJlj26HxMdqFE61TXsXXWHjZ2p4rP2iXfyeNTzWfWpForgpMLSqURh5cQWwhDZ%2BXey%2FKSn1ViJT0h4xTZymDJhL%2FNmHQdPQsoXr%2FM%2BIFfRjS96QCiXtgsFJlPUSynecAznw1Y2hTDZwtUFG0tXRFBJiAuk1w%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=46586d1a43cc262b8e19fe51b6af7ead84144d494b8ca449af175e2c410c671d",
      "file_size": 30106,
      "type": "image/png",
      "moderated": false
    },
    {
      "id": 4409975,
      "file_name": "image.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/yk090cc3dnhmlg75596v7gz3303s?response-content-disposition=attachment%3B%20filename%3D%22image.png%22%3B%20filename%2A%3DUTF-8%27%27image.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ6G65MFJS%2F20250704%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250704T194645Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQDPuxwsJDjHTxjH%2FqNRsDAmPHPdFiUeImrXoxwNaA%2FwkwIhAI%2BQdOMW1wIULIb6uWuoH5ctJ5dsZX5hl0qljtaB3m75KrEFCDMQAxoMMDEzNjE5Mjc0ODQ5Igz81WDmB4v8tHAjwMMqjgVSt5fjXfHwugJgQcPRAe2NMGtv2BKO5rpFyrQlAEz7oRlSq6YXGoSr7%2BBGu%2B%2Bqr7b6RwK1a75tcWwZ2stNkOCfiJRd3bhD7Cb4mxmKNtGLblienBlUM2tH52yuCi2SyZIThCaV967jwI0Mw2cUcyJQ6e32XzBqvdj8vB%2F095LCPd9Y6YSqjb1CWqAtoUZK9h5q37EVikXZehhp%2BVd2EjpnJfdmZ28ENSrmyBkPQsF5sfyZaTk6QI1Rfq0lH1YeDpdLPR%2BDk6aY3URBMehapeM%2FqvRZwi3mXhZaU52SIniJiMRAcPHlHnxoiWXTG8wPOy20rDUnRhOSQuXc%2FL30hkMmdgkHTX16W3%2BBftzcAJhUp8wKHpquSkZLyLd1g92IEZb6Ojtab%2FpCaJebjgo1fG7oSX5b5C%2BcsYstguz%2FtBh%2BRq1OhupdFCOIStIRaDBKnkh7P642BEW5%2FhVZs9r1uXuYLucgVYI2ceNCUL0wIbnFNW23z7lSNDotWN3YM86jAddDuC7yoTVaFg3oACLlMrxxGLBpB4qKln96x3wl2NWHOzOLtFC%2FiGFvLeNjxZrLiXvutWjdll%2FDZgxJPqDv7qrbLgGkwaARXgGcQNfbPMYVPdlbxCDwk%2BSQdpRQH74M6%2BF7xSdYWBgCfvOoff23IgSklGVp3fTm46DzypxrlJ8vRf4j8dj1mutEUtSCswMDgolANUjOD88YLhfuiucmi0SfaTiEoFC0fq4mjD7CmMvGl2znOCoQopfgulX%2B8vYbKM1VcSyiFf9DO3XkRyoksQYvjVWHp3pKRmLsutyDkVNugIkCUmm2RIrCc6m1hjPf32k%2BUV3vhZNsgEP1g9FyCxyYao7OzYO1W8bY1e3M6q4w56%2BgwwY6sAH5Zn%2BpdCoCGmUXocyvy8LyLLYOePbPQGqb1ow%2FYwAwDZ3rKKH5VijKY8Py0RYA5WmxO4WCDb7H63OIseNJlj26HxMdqFE61TXsXXWHjZ2p4rP2iXfyeNTzWfWpForgpMLSqURh5cQWwhDZ%2BXey%2FKSn1ViJT0h4xTZymDJhL%2FNmHQdPQsoXr%2FM%2BIFfRjS96QCiXtgsFJlPUSynecAznw1Y2hTDZwtUFG0tXRFBJiAuk1w%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=000e568ceb7e8d066db8bf65b01cedfb728fd585c172c78f781af58a4a9cb12c",
      "file_size": 82888,
      "type": "image/png",
      "moderated": false
    },
    {
      "id": 4409976,
      "file_name": "image.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/9jfk9vj6e4zj38w9rngoyidi9es1?response-content-disposition=attachment%3B%20filename%3D%22image.png%22%3B%20filename%2A%3DUTF-8%27%27image.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ6G65MFJS%2F20250704%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250704T194645Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQDPuxwsJDjHTxjH%2FqNRsDAmPHPdFiUeImrXoxwNaA%2FwkwIhAI%2BQdOMW1wIULIb6uWuoH5ctJ5dsZX5hl0qljtaB3m75KrEFCDMQAxoMMDEzNjE5Mjc0ODQ5Igz81WDmB4v8tHAjwMMqjgVSt5fjXfHwugJgQcPRAe2NMGtv2BKO5rpFyrQlAEz7oRlSq6YXGoSr7%2BBGu%2B%2Bqr7b6RwK1a75tcWwZ2stNkOCfiJRd3bhD7Cb4mxmKNtGLblienBlUM2tH52yuCi2SyZIThCaV967jwI0Mw2cUcyJQ6e32XzBqvdj8vB%2F095LCPd9Y6YSqjb1CWqAtoUZK9h5q37EVikXZehhp%2BVd2EjpnJfdmZ28ENSrmyBkPQsF5sfyZaTk6QI1Rfq0lH1YeDpdLPR%2BDk6aY3URBMehapeM%2FqvRZwi3mXhZaU52SIniJiMRAcPHlHnxoiWXTG8wPOy20rDUnRhOSQuXc%2FL30hkMmdgkHTX16W3%2BBftzcAJhUp8wKHpquSkZLyLd1g92IEZb6Ojtab%2FpCaJebjgo1fG7oSX5b5C%2BcsYstguz%2FtBh%2BRq1OhupdFCOIStIRaDBKnkh7P642BEW5%2FhVZs9r1uXuYLucgVYI2ceNCUL0wIbnFNW23z7lSNDotWN3YM86jAddDuC7yoTVaFg3oACLlMrxxGLBpB4qKln96x3wl2NWHOzOLtFC%2FiGFvLeNjxZrLiXvutWjdll%2FDZgxJPqDv7qrbLgGkwaARXgGcQNfbPMYVPdlbxCDwk%2BSQdpRQH74M6%2BF7xSdYWBgCfvOoff23IgSklGVp3fTm46DzypxrlJ8vRf4j8dj1mutEUtSCswMDgolANUjOD88YLhfuiucmi0SfaTiEoFC0fq4mjD7CmMvGl2znOCoQopfgulX%2B8vYbKM1VcSyiFf9DO3XkRyoksQYvjVWHp3pKRmLsutyDkVNugIkCUmm2RIrCc6m1hjPf32k%2BUV3vhZNsgEP1g9FyCxyYao7OzYO1W8bY1e3M6q4w56%2BgwwY6sAH5Zn%2BpdCoCGmUXocyvy8LyLLYOePbPQGqb1ow%2FYwAwDZ3rKKH5VijKY8Py0RYA5WmxO4WCDb7H63OIseNJlj26HxMdqFE61TXsXXWHjZ2p4rP2iXfyeNTzWfWpForgpMLSqURh5cQWwhDZ%2BXey%2FKSn1ViJT0h4xTZymDJhL%2FNmHQdPQsoXr%2FM%2BIFfRjS96QCiXtgsFJlPUSynecAznw1Y2hTDZwtUFG0tXRFBJiAuk1w%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=0b82e92669cd4d9a26aa9a7c00d19e09671970776ffc761b29f1e5b6f82745cc",
      "file_size": 31169,
      "type": "image/png",
      "moderated": false
    }
  ],
  "allow_singular_disclosure_at": null,
  "vote_count": 68,
  "voters": [
    "hacker_441",
    "aboalezz",
    "loaymorad",
    "almuntadhar",
    "2026",
    "ronak_9889",
    "oblivionsage",
    "mohaned0101",
    "ezrel",
    "mr-alienx-kurd",
    "and 58 more..."
  ],
  "severity": {
    "rating": "medium",
    "score": 6.1,
    "author_type": "User",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "low",
      "privileges_required": "none",
      "user_interaction": "none",
      "scope": "unchanged",
      "confidentiality": "none",
      "integrity": "none",
      "availability": "low"
    }
  },
  "structured_scope": {
    "databaseId": 50174,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "https://github.com/lichess-org/lila",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
