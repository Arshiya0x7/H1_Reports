{
  "id": 1064149,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xMDY0MTQ5",
  "url": "https://hackerone.com/reports/1064149",
  "title": "Improper Input Validation on User's Location on PUT /WhoService/putLocation Could Affect Availability/Falsify Users",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2020-12-22T07:03:10.112Z",
  "submitted_at": "2020-12-22T07:03:10.150Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "humayunalikhan",
    "url": "/humayunalikhan",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/exXu1JdA5RyiwPJzZiY9vZKs/3cb67cc78dc0cba55b102dd9eca2ee89b206d3e960be830f070583d9070b69ef"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 51543,
    "url": "https://hackerone.com/who-covid-19-mobile-app",
    "handle": "who-covid-19-mobile-app",
    "profile_picture_urls": {
      "small": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/wz2z6d5e6ox7n48beetcuc5kewkx/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1?response-content-disposition=inline%3B%20filename%3D%22covidAssassinBadge_web_smaller.png%22%3B%20filename%2A%3DUTF-8%27%27covidAssassinBadge_web_smaller.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ7EFYLNR6%2F20250921%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250921T073739Z&X-Amz-Expires=1902&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEIL%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIGGunS%2B6SSV3Yqj0crS0DiYF7rN1VkrXnFVjtBARy248AiBrfvtl9XSwVnMFmFz65y1XngQZqJbg0oHquDyfqaonWyq6BQj7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAMaDDAxMzYxOTI3NDg0OSIMPudCBXIgfBQG%2BW0RKo4FHDQJmYx4cxWbehdyzFA90l9kmARBjaIDTsBnXXvKq9I0G38Zyl5Ckpxo8ezUNDxDsAsxXDhndmmbk8pcG2Fx5rVkkIVqH344qgZMOgRmDwpCmlOO%2Bb8J00QeK7nLSwYfLwwCTOI84h7E4CiRkXB3QOPPbfB%2Fb%2Bj%2BhON2McT%2FarZTgREOd355xqNKXRkEEpNOB3hOxgl6qUp88qNkdHULmWqE5AmvDcCr0dWa41nGD4nL1VqtZrTwi0AdRVpokkGl0kT3l0Opv8%2F5A2f%2FcNaX6tPNwTtI%2F%2FYmlMPkFg5a%2Fs6aGw%2F%2Bt1KWlVGavfxFO%2BX1oO%2ByMGs1S1X%2BvAEwd3xiulDQ7WXa%2BGlfDEtgDURFEYtnYwJN1z0BYPP8f%2BP8sSGDiwQ7mrFWT9g%2BYTkiuVPKI3eUNGzeHetgqtm9vzA6g5Z2itfIv%2BRx7i7DRX6dDaMND5PKyL82iHPOGNuiXXV3uGCxLRy9MM2vhrk0m27wrfRAbsD828Z17UM69ph5jC%2FDdw%2FvfkYs%2Bsfn8KPtX1gx1QBrs1%2BBiMSBInwY%2BJmS19hgM7eTKL07Lcysh3i086pOTetQk4DF1iL7RFFW0djs07eKJrb1F6JooK2CBGZI7RnJFcy1JOnUwNrkV0Vr5PPN%2FSUjTUtx1nhZJbgkfMYnwsrZb%2BOXjGgSFCuDsT7GDTUQfrIpnWbZOATsXr%2FCe161osQJ74Vuocb88mrP5nBV9oUlrbRXYw2q5AnY8nBxiGfqhhhtxI7tmDEdAKBuaaN1GdIM36GTFlrlK6UQE10ItpcgP1%2FQhkMPQIwybFcktHuXYx55M7x814dI73cRgL0U4KZ9R%2F9KbUvlIT%2BMXRkZnyWD5IWCIkZjMNIObd%2FLMOS0vcYGOrIBxoxQrybRUYTbtY4BAeO4X0pNp%2Bkf9Bns0zKns7Qpv2AuHgqy36uPmP3BsOMTM7jma1hcJIppynNFTt8cHIvvpeWERRuFUyYK6DBtQ56%2B3QvZsQfnPIPD8sqphM6a2EiguwLYjWZt1w33ucVeUDg3Oq%2BQyEiWteA9I2CN0zx0kJHlLmFfXCQy%2BiKIe2PLdWN8GkMox%2BYQugo%2FNTnowmI0ubYYMcNmSTfyg7vGfC6KHM7T4w%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=a80d97327b2534cc9044bdabe58098b6a9b2e8b756c6b7eb61a3d176cb323b3f",
      "medium": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/wz2z6d5e6ox7n48beetcuc5kewkx/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c?response-content-disposition=inline%3B%20filename%3D%22covidAssassinBadge_web_smaller.png%22%3B%20filename%2A%3DUTF-8%27%27covidAssassinBadge_web_smaller.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ7EFYLNR6%2F20250921%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250921T073739Z&X-Amz-Expires=1902&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEIL%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIGGunS%2B6SSV3Yqj0crS0DiYF7rN1VkrXnFVjtBARy248AiBrfvtl9XSwVnMFmFz65y1XngQZqJbg0oHquDyfqaonWyq6BQj7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAMaDDAxMzYxOTI3NDg0OSIMPudCBXIgfBQG%2BW0RKo4FHDQJmYx4cxWbehdyzFA90l9kmARBjaIDTsBnXXvKq9I0G38Zyl5Ckpxo8ezUNDxDsAsxXDhndmmbk8pcG2Fx5rVkkIVqH344qgZMOgRmDwpCmlOO%2Bb8J00QeK7nLSwYfLwwCTOI84h7E4CiRkXB3QOPPbfB%2Fb%2Bj%2BhON2McT%2FarZTgREOd355xqNKXRkEEpNOB3hOxgl6qUp88qNkdHULmWqE5AmvDcCr0dWa41nGD4nL1VqtZrTwi0AdRVpokkGl0kT3l0Opv8%2F5A2f%2FcNaX6tPNwTtI%2F%2FYmlMPkFg5a%2Fs6aGw%2F%2Bt1KWlVGavfxFO%2BX1oO%2ByMGs1S1X%2BvAEwd3xiulDQ7WXa%2BGlfDEtgDURFEYtnYwJN1z0BYPP8f%2BP8sSGDiwQ7mrFWT9g%2BYTkiuVPKI3eUNGzeHetgqtm9vzA6g5Z2itfIv%2BRx7i7DRX6dDaMND5PKyL82iHPOGNuiXXV3uGCxLRy9MM2vhrk0m27wrfRAbsD828Z17UM69ph5jC%2FDdw%2FvfkYs%2Bsfn8KPtX1gx1QBrs1%2BBiMSBInwY%2BJmS19hgM7eTKL07Lcysh3i086pOTetQk4DF1iL7RFFW0djs07eKJrb1F6JooK2CBGZI7RnJFcy1JOnUwNrkV0Vr5PPN%2FSUjTUtx1nhZJbgkfMYnwsrZb%2BOXjGgSFCuDsT7GDTUQfrIpnWbZOATsXr%2FCe161osQJ74Vuocb88mrP5nBV9oUlrbRXYw2q5AnY8nBxiGfqhhhtxI7tmDEdAKBuaaN1GdIM36GTFlrlK6UQE10ItpcgP1%2FQhkMPQIwybFcktHuXYx55M7x814dI73cRgL0U4KZ9R%2F9KbUvlIT%2BMXRkZnyWD5IWCIkZjMNIObd%2FLMOS0vcYGOrIBxoxQrybRUYTbtY4BAeO4X0pNp%2Bkf9Bns0zKns7Qpv2AuHgqy36uPmP3BsOMTM7jma1hcJIppynNFTt8cHIvvpeWERRuFUyYK6DBtQ56%2B3QvZsQfnPIPD8sqphM6a2EiguwLYjWZt1w33ucVeUDg3Oq%2BQyEiWteA9I2CN0zx0kJHlLmFfXCQy%2BiKIe2PLdWN8GkMox%2BYQugo%2FNTnowmI0ubYYMcNmSTfyg7vGfC6KHM7T4w%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=db240e2b51a97a39460c58ec765a6aa04a069837613f5fcea5d826c0036ee085"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": false,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "WHO COVID-19 Mobile App",
      "twitter_handle": "",
      "website": "",
      "about": ""
    }
  },
  "has_bounty?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2021-01-12T05:55:52.416Z",
  "bug_reporter_agreed_on_going_public_at": "2021-01-12T05:55:52.329Z",
  "team_member_agreed_on_going_public_at": "2020-12-23T04:53:21.319Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Summary:\nNote: I noticed that that the team has fixed issues like an XSS that's caused only from a header value (typically OOS since it's not directly exploitable) https://github.com/WorldHealthOrganization/app/pull/855, so in the spirit of this I'm also reporting another \"good-to-fix\" issue.\n\nOn the WHO app, users send approximate location data to the WhoService API:\n\n/app/client/flutter/lib/pages/onboarding/location_sharing_page.dart:\n\n  Future<void> _allowLocationSharing() async {\n    try {\n      await Location().requestPermission();\n      if (await Location().hasPermission() == PermissionStatus.granted) {\n        if (await Location().requestService()) {\n          LocationData location = await Location().getLocation();\n          Map jitteredLocationData = JitterLocation().jitter(\n              location.latitude, location.longitude,\n              5 /*kms refers to kilometers*/);\n\n          await WhoService.putLocation(\n              latitude: jitteredLocationData['lat'],\n              longitude: jitteredLocationData['lng']);\n        }\n      }\n    } catch(_) {\n      // ignore for now.\n    } finally {\n      _complete();\n    }\n  }\nWhich in turn translates to a call to https://staging.whocoronavirus.org/WhoService/putDeviceToken:\n\ncurl --request POST \\\n  --url 'https://hackerone.whocoronavirus.org/WhoService/putLocation' \\\n  --header 'content-type: application/json' \\\n  --header 'who-client-id: ██████████' \\\n  --header 'who-platform: ios' \\\n  --data '{\n    \"latitude\": 22222222,\n    \"longitude\": \"9999999\"\n}'\nThis returns a 200 OK response. On the server side, we see that it uses the following logic:\n\n  [@Override](/override) public Void putLocation(PutLocationRequest request) throws IOException {\n    Client client = Client.current();\n    client.latitude = request.latitude;\n    client.longitude = request.longitude;\n    S2LatLng coordinates = S2LatLng.fromDegrees(request.latitude, request.longitude);\n    client.location = S2CellId.fromLatLng(coordinates).id();\n    ofy().save().entities(client);\n    return new Void();\n  }\nThere is no validation on request.latitude, request.longitude before it is stored into the Google App Engine datastore. This is because the S2LatLng.fromDegrees (which transforms the values into a S2LatLng object) from the s2-geometry-library-java library specifically does not validate these values because, according to their comments at https://github.com/google/s2-geometry-library-java/blob/master/src/com/google/common/geometry/S2LatLng.java:\n\nLike the rest of the \"geometry\" package, the\nintent is to represent spherical geometry as a mathematical abstraction, so\nfunctions that are specifically related to the Earth's geometry (e.g.\neasting/northing conversions) should be put elsewhere.\nThus, even these values:\n\n    \"latitude\": 22222222,\n    \"longitude\": \"9999999\"\nAre accepted and stored in the database even though they are technically non-existent coordinates on earth.\n\nTo reproduce, just run this request with different who-client-id UUID you generated yourself and impossible latitude and longitude.\n\ncurl --request POST \\\n  --url 'https://hackerone.whocoronavirus.org/WhoService/putLocation' \\\n  --header 'content-type: application/json' \\\n  --header 'who-client-id: ████████' \\\n  --header 'who-platform: ios' \\\n  --data '{\n    \"latitude\": 22222222,\n    \"longitude\": \"9999999\"\n}'\n\n## Impact\n\nAn attacker can exploit this to affect the Availability or Integrity of the analytics data by injecting false location values and falsifying user data. A fix for this would be to implement a quick lat lng validator that is specifically meant to validate Earth geometry, instead of the S2LatLng class.",
  "weakness": {
    "id": 107,
    "name": "Improper Input Validation"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 8,
  "voters": [
    "ayoub0x1",
    "h4x0r_dz",
    "0nlymohammed",
    "humayunalikhan",
    "bug_hunter_pak",
    "echago",
    "eusec",
    "t30c"
  ],
  "severity": {
    "rating": "medium",
    "score": 4.6,
    "author_type": "User",
    "metrics": {
      "attack_vector": "adjacent",
      "attack_complexity": "high",
      "privileges_required": "low",
      "user_interaction": "none",
      "scope": "unchanged",
      "confidentiality": "low",
      "integrity": "low",
      "availability": "low"
    }
  },
  "structured_scope": {
    "databaseId": 59510,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "https://github.com/WorldHealthOrganization/app",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "id": 25981,
      "category": "team",
      "content": "This refers to sanitization of an API that is already scheduled to be deleted. It doesn't appear to be exploitable.\nhttps://github.com/WorldHealthOrganization/app/pull/1826",
      "updated_at": "2020-12-23T00:13:14.361Z",
      "can_view?": true,
      "can_create?": false,
      "attachments": [],
      "user": {
        "id": 17,
        "username": "brunobowden",
        "name": "Bruno Bowden",
        "bio": "Investor in HackerOne",
        "cleared": false,
        "verified": false,
        "website": "http://www.linkedin.com/in/brunobowden",
        "location": "San Francisco, CA",
        "created_at": "2013-03-24T18:01:21.535Z",
        "url": "https://hackerone.com/brunobowden",
        "hackerone_triager": false,
        "hackerone_employee": false,
        "user_type": "hacker",
        "profile_picture_urls": {
          "small": "https://profile-photos.hackerone-user-content.com/variants/000/000/017/43c43a51fe988519ab02ac5467279b2d32a5fd0f_original.jpg/3cb67cc78dc0cba55b102dd9eca2ee89b206d3e960be830f070583d9070b69ef",
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/000/017/43c43a51fe988519ab02ac5467279b2d32a5fd0f_original.jpg/d9695107bfcd68eeb1c9e0912b109cdae9a6c00c0bda6fd4cbd6d9bdb828840a",
          "xtralarge": "https://hackerone.com/rails/active_storage/representations/redirect/eyJfcmFpbHMiOnsiZGF0YSI6MTM5NCwicHVyIjoiYmxvYl9pZCJ9fQ==--3454a513e1bf7b3b2315cffa0dde0cda6590d227/eyJfcmFpbHMiOnsiZGF0YSI6eyJmb3JtYXQiOiJqcGciLCJyZXNpemUiOiIyNjB4MjYwXHUwMDNlIn0sInB1ciI6InZhcmlhdGlvbiJ9fQ==--cf3aeca803d1baf476958c689ca7b472a4cb54f1/349de22.jpg"
        }
      }
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
