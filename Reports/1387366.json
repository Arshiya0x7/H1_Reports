{
  "id": 1387366,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xMzg3MzY2",
  "url": "https://hackerone.com/reports/1387366",
  "title": "elections.k8s.io uses weak session secret key, may place elections at risk",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "high",
  "readable_substate": "Resolved",
  "created_at": "2021-11-01T07:23:57.040Z",
  "submitted_at": "2021-11-01T07:23:57.089Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "ian",
    "url": "/ian",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/lk26w7vc15x7xwoc7njokw0ks4rn/3cb67cc78dc0cba55b102dd9eca2ee89b206d3e960be830f070583d9070b69ef"
    },
    "is_me?": false,
    "cleared": true,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 39386,
    "url": "https://hackerone.com/kubernetes",
    "handle": "kubernetes",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/039/386/486f4380e09776d05a912ca9f46be23f72fe8197_original.png/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/039/386/486f4380e09776d05a912ca9f46be23f72fe8197_original.png/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "Kubernetes",
      "twitter_handle": "kubernetesio",
      "website": "https://kubernetes.io/",
      "about": ""
    }
  },
  "has_bounty?": true,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": true,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2025-09-19T20:54:04.169Z",
  "bug_reporter_agreed_on_going_public_at": "2025-08-20T20:54:03.095Z",
  "team_member_agreed_on_going_public_at": null,
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "## Summary\nHi there, I have been working on a new tool to detect misconfigured session signing across bug bounty programs, called CookieMonster. Many applications use stateless cookies to preserve session information (i.e. who has logged in), but many applications do not properly secure this. @nagli and I discovered that `elections.k8s.io` uses a weak Flask SECRET_KEY, literally the string `N/A`, to sign authentication cookies.\n\nIn many applications, this allows the complete compromise of the application, as you can manipulate who you are logged in as. This would be especially problematic for an election voting system. It seems, in the case of Elekto, this may not be the case as the GitHub OAuth token is injected into the session instead of a user ID, which would be hard to obtain for another user. However, this may enable weird attacks like using cross-origin request forgery with the voting or authentication flows, as we would be able to manipulate the session which contains these tokens.\n\nNote the warning from [the Elekto source](https://github.com/elekto-io/elekto/blob/48573733858aace5bec38ee9dc73e45163518346/config.py) (this is what you have set to `N/A`):\n\n```python\n# Encryption Key\n#\n# This is used by the Flask server and should be set to a random character\n# string, please do not deploy before doing this!.\nSECRET_KEY = env('APP_KEY', 'test')\n```\n\n## PoC\nAs CookieMonster is not yet public, you can also use `Flask-Unsign` (`pip3 install flask-unsign[wordlist]`) to validate this:\n```\n% curl https://elections.k8s.io -Is | grep cookie\nset-cookie: session=eyJfcGVybWFuZW50Ijp0cnVlfQ.YX-V3g.NET76NNJbweb_qagyfYl2_7TDJg; Expires=Thu, 02 Dec 2021 07:23:10 GMT; HttpOnly; Path=/\n\n% flask-unsign -u -c \"eyJfcGVybWFuZW50Ijp0cnVlfQ.YX-V3g.NET76NNJbweb_qagyfYl2_7TDJg\"\n[*] Session decodes to: {'_permanent': True}\n[*] No wordlist selected, falling back to default wordlist..\n[*] Starting brute-forcer with 8 threads..\n[+] Found secret key after 8192 attemptspdcQHNyXaB0O\n'N/A'\n```\n\n## Impact\n\nWeak secret likely allows arbitrary session manipulation",
  "bounty_amount": "250.0",
  "formatted_bounty": "$250",
  "weakness": {
    "id": 32,
    "name": "Cryptographic Issues - Generic"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2025-09-19T20:54:03.377Z",
  "allow_singular_disclosure_after": -1265.065056119,
  "singular_disclosure_allowed": true,
  "vote_count": 0,
  "voters": [],
  "severity": {
    "rating": "high",
    "score": 7.5,
    "author_type": "Team",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "low",
      "privileges_required": "none",
      "user_interaction": "none",
      "scope": "unchanged",
      "confidentiality": "none",
      "integrity": "high",
      "availability": "none"
    }
  },
  "structured_scope": {
    "databaseId": 34429,
    "asset_type": "URL",
    "asset_identifier": "k8s.io",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
