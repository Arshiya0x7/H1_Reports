{
  "id": 826361,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC84MjYzNjE=",
  "url": "https://hackerone.com/reports/826361",
  "title": "SSRF on project import via the remote_attachment_url on a Note",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "high",
  "readable_substate": "Resolved",
  "created_at": "2020-03-22T12:37:34.144Z",
  "submitted_at": "2020-03-22T12:37:34.144Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "vakzz",
    "url": "/vakzz",
    "profile_picture_urls": {
      "small": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/6zbovkumst7oljmo9v21pig3yh9j/3cb67cc78dc0cba55b102dd9eca2ee89b206d3e960be830f070583d9070b69ef?response-content-disposition=inline%3B%20filename%3D%2294971b5a75a669ea52903c09fc847f3434930258211181557be06162f5a8bac0.jpg%22%3B%20filename%2A%3DUTF-8%27%2794971b5a75a669ea52903c09fc847f3434930258211181557be06162f5a8bac0.jpg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQUK3TW6R5%2F20250921%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250921T102533Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEIj%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDYUltHmmc5zz7FbX9%2BhnLsC%2BI%2FkETnF6wSvuA8jSpH5gIhAMgfIeEQszZSh5a3b%2FpUdy78MMNarH5UHYPIExl609LbKrEFCBEQAxoMMDEzNjE5Mjc0ODQ5Igw8%2BeyYtSMd%2BASZf5AqjgW3xr09iUnFh9lbiMQHuWlu3lfitTwIOQagu1IpSPfblOtq7qraEDuAGVXZaGdXdj5zykisq7Kc34BBjiZEz5vXlDcpFHosFBZSNJ20GPN4oRXmJcsw3RdCJzQyH%2Fvsdd78D7srH0NX6Jk9lcUnUNsMElKSxa7hg%2BCDGJWOlxWzjVljZrBS1JRG1tYwf%2FKzWSZpL2haUlRhvHNsYvJ%2FBSmiE%2Bvt2P2VmTdudzxL1M%2F%2BrCGzNhfjjXUzt%2FypaTw8CjoQ7FdqimfT14%2Fa7uB1xTZMxZNpPnLJ2rSDUPiRxVKlWFMxo9syjPOLAF0fBDcaVUguP6dkUK6iZLSHIe4Gq%2BAOw9EmWsA14zobJ%2BuiXQlvJaqXma2KSku%2BDkGMdmAYnToG32jLp%2Bf6nCpVwId%2FIp5CQS3vR1asPCTnvwm09yD8vfj9mHeFUgCru2okQpBX%2BnjZYUFE5K9z8dFcRYKNbHVa7XbD7BXoUd4vamSWdFZTYszrHSSXDbKtvvQGr1eusVU1LCKPRgXkgJSZF32ecwAWG5CdGv0tKxeXRZ3CTb81Q%2Fz6FF%2BXXPXxQdpNctzk7ZBnP68KPPdIsLFNEdkNiGp4rk%2BTKfQNW3bPgSMiH3Of5rCWuw8rQd6jCUrCT83smZ8%2FXz29P0jKMbJZtJP5H6GCNR3gaw5D8auxUM2qEe%2BKU39CcRIOz8%2BjH%2FFhkDRK1zakOOvi5mbFwWqBNFF8YKNODrg6kgqspQnx5vbFwqBixzpo2M%2BLNyWGEL4j7EkgwSV7ikfcHLk9zr8y2qJJcZqVAiU1NmJ2FEsLel0FRCERSQU3%2Buu7jvvxlJjyCJGBBGAuS6qyLkZmLRMxSZYKyqpIBHZ4iN2uqncQcxAWGoQwtN2%2BxgY6sAEFr7Sxka7dfH8UNv3JbPYSXJHcATmwiPqoAMNeI6NvpjSAj4XDHDDaZC%2FagV16fqadk4YCMMERn%2FwfN5rUEyY%2BWmw7oA9qsEaDEP1NndNQkBsDmpDFkOCt8xuLCCYoZ5XMptQ%2FkV6VyjasZzd%2BmGJehA9%2Fd5oI3FMryIXWzqwSUnDNZqLXsQPCMlu%2F%2F1Rjo7WVCiOpBQ4omy0glWz0%2FxJV3Bnzl3sjB1tUksIFsS6lGg%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=072047a20c834dc041d60233b84b6ce7b6fa6c6dab149ec0c95a8642de939b65"
    },
    "is_me?": false,
    "cleared": true,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 264,
    "url": "https://hackerone.com/gitlab",
    "handle": "gitlab",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/f0hovtq73f9ap815a0r1w42bocp4/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/f0hovtq73f9ap815a0r1w42bocp4/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "GitLab",
      "twitter_handle": "gitlab",
      "website": "https://about.gitlab.com",
      "about": "A single application for the entire software development lifecycle."
    }
  },
  "has_bounty?": true,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2020-06-07T22:41:22.183Z",
  "bug_reporter_agreed_on_going_public_at": "2020-06-07T01:29:57.176Z",
  "team_member_agreed_on_going_public_at": "2020-06-07T22:41:21.957Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "### Summary\n\nThe Note model has an `attachment` which is provided by a CarrierWave uploader:\n\n```ruby\nmount_uploader :attachment, AttachmentUploader\n```\n\nOne of the features this provides is the ability to download and attach a file via a url, see https://github.com/carrierwaveuploader/carrierwave/blob/v1.3.1/lib/carrierwave/mount.rb#L80. This means that the Note model has a method `remote_attachment_url=` which can be used to perform this action.\n\nAs this attribute isn't removed by the `AttributeCleaner` on project import, it can be set in the `project.json` for a note and will be set when the note is created, downloading the file:\n\nhttps://github.com/carrierwaveuploader/carrierwave/blob/v1.3.1/lib/carrierwave/mounter.rb#L72\n```ruby\n  def remote_urls=(urls)\n      return if not urls or urls == \"\" or urls.all?(&:blank?)\n\n      @remote_urls = urls\n      @download_error = nil\n      @integrity_error = nil\n\n      @uploaders = urls.zip(remote_request_headers || []).map do |url, header|\n        uploader = blank_uploader\n        uploader.download!(url, header || {})\n        uploader\n      end\n```\n\nhttps://github.com/carrierwaveuploader/carrierwave/blob/v1.3.1/lib/carrierwave/uploader/download.rb#L43\n```ruby\n    def file\n          if @file.blank?\n            headers = @remote_headers.\n              reverse_merge('User-Agent' => \"CarrierWave/#{CarrierWave::VERSION}\")\n\n            @file = Kernel.open(@uri.to_s, headers)\n            @file = @file.is_a?(String) ? StringIO.new(@file) : @file\n          end\n```\n\nThe downloaded file is then attached to the note and can be viewed from the newly imported project.\n\nAny model that has a `mount_uploader` and is importable is potentially vulnerable to the same attack, although the majority of the others are `AvatarUploader` which checks the file type and prevents the response from being viewed.\n\n### Steps to reproduce\n\n1. Create a new project\n1. Create an issue in the project\n1. Add a note to the issue\n1. Export the project\n1. Extract the export\n1. Add  `remote_attachment_url` to the `note` hash with a url\n1. Recompress the export and import it\n1. View the note on the issue\n\nDemo {F756257}\n\n### Examples\n\nExample of project import on gitlab.com hitting postbin:\n\nhttps://gitlab.com/wbowling/ssrf1/-/issues/1#note_309127303\n{F756269}\n\n### What is the current *bug* behavior?\nWhen importing a model that has a mount_uploader it's possible to use the carrierwave uploader seed attributes to download a file from any host: https://github.com/carrierwaveuploader/carrierwave/wiki/How-to:-Upload-remote-image-urls-to-your-seedfile\n\n### What is the expected *correct* behavior?\nThe attributes should be prohibited and removed via the `AttributeCleaner`\n\n### Output of checks\nThis bug happens on gitlab.com\n\n#### Results of GitLab environment info\n```\nSystem information\nSystem:\t\tUbuntu 18.04\nProxy:\t\tno\nCurrent User:\tgit\nUsing RVM:\tno\nRuby Version:\t2.6.5p114\nGem Version:\t2.7.10\nBundler Version:1.17.3\nRake Version:\t12.3.3\nRedis Version:\t5.0.7\nGit Version:\t2.24.1\nSidekiq Version:5.2.7\nGo Version:\tunknown\n\nGitLab information\nVersion:\t12.8.7-ee\nRevision:\t2643fd87200\nDirectory:\t/opt/gitlab/embedded/service/gitlab-rails\nDB Adapter:\tPostgreSQL\nDB Version:\t10.12\nURL:\t\thttp://gitlab-vm.local\nHTTP Clone URL:\thttp://gitlab-vm.local/some-group/some-project.git\nSSH Clone URL:\tgit@gitlab-vm.local:some-group/some-project.git\nElasticsearch:\tno\nGeo:\t\tno\nUsing LDAP:\tno\nUsing Omniauth:\tyes\nOmniauth Providers:\n\nGitLab Shell\nVersion:\t11.0.0\nRepository storage paths:\n- default: \t/var/opt/gitlab/git-data/repositories\nGitLab Shell path:\t\t/opt/gitlab/embedded/service/gitlab-shell\nGit:\t\t/opt/gitlab/embedded/bin/git\n```\n\n## Impact\n\n* Allows an attacker to access internal services, for example the Omnibus GitLab has all of the exporters, Prometheus, Alertmanager exposed on localhost. \n* If GitLab is hosted on AWS it allows for the instance metadata to be accessed.\n* Redis is running locally or accessible via tcp (address could be found by looking at the targets in Prometheus at http://localhost:9090/api/v1/targets) it could be possible to obtain RCE (similar to https://github.com/jas502n/gitlab-SSRF-redis-RCE#poc). A POST request is not possible here, but as `remote_attachment_request_header=` is also available (https://github.com/carrierwaveuploader/carrierwave/blob/v1.3.1/lib/carrierwave/mount.rb#L169) and not blacklisted, the payload could be set via a header.\n* If GitLab is hosted on Google Cloud, the above could be used to set the `Metadata-Flavor: Google` header and access `http://metadata.google.internal/`",
  "bounty_amount": "10000.0",
  "formatted_bounty": "$10,000",
  "weakness": {
    "id": 68,
    "name": "Server-Side Request Forgery (SSRF)"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 756257,
      "file_name": "ssrf-note.mp4",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/84ADZaqXNjpoVWHc7RaSAprN?response-content-disposition=attachment%3B%20filename%3D%22ssrf-note.mp4%22%3B%20filename%2A%3DUTF-8%27%27ssrf-note.mp4&response-content-type=video%2Fmp4&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQUK3TW6R5%2F20250921%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250921T102533Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEIj%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDYUltHmmc5zz7FbX9%2BhnLsC%2BI%2FkETnF6wSvuA8jSpH5gIhAMgfIeEQszZSh5a3b%2FpUdy78MMNarH5UHYPIExl609LbKrEFCBEQAxoMMDEzNjE5Mjc0ODQ5Igw8%2BeyYtSMd%2BASZf5AqjgW3xr09iUnFh9lbiMQHuWlu3lfitTwIOQagu1IpSPfblOtq7qraEDuAGVXZaGdXdj5zykisq7Kc34BBjiZEz5vXlDcpFHosFBZSNJ20GPN4oRXmJcsw3RdCJzQyH%2Fvsdd78D7srH0NX6Jk9lcUnUNsMElKSxa7hg%2BCDGJWOlxWzjVljZrBS1JRG1tYwf%2FKzWSZpL2haUlRhvHNsYvJ%2FBSmiE%2Bvt2P2VmTdudzxL1M%2F%2BrCGzNhfjjXUzt%2FypaTw8CjoQ7FdqimfT14%2Fa7uB1xTZMxZNpPnLJ2rSDUPiRxVKlWFMxo9syjPOLAF0fBDcaVUguP6dkUK6iZLSHIe4Gq%2BAOw9EmWsA14zobJ%2BuiXQlvJaqXma2KSku%2BDkGMdmAYnToG32jLp%2Bf6nCpVwId%2FIp5CQS3vR1asPCTnvwm09yD8vfj9mHeFUgCru2okQpBX%2BnjZYUFE5K9z8dFcRYKNbHVa7XbD7BXoUd4vamSWdFZTYszrHSSXDbKtvvQGr1eusVU1LCKPRgXkgJSZF32ecwAWG5CdGv0tKxeXRZ3CTb81Q%2Fz6FF%2BXXPXxQdpNctzk7ZBnP68KPPdIsLFNEdkNiGp4rk%2BTKfQNW3bPgSMiH3Of5rCWuw8rQd6jCUrCT83smZ8%2FXz29P0jKMbJZtJP5H6GCNR3gaw5D8auxUM2qEe%2BKU39CcRIOz8%2BjH%2FFhkDRK1zakOOvi5mbFwWqBNFF8YKNODrg6kgqspQnx5vbFwqBixzpo2M%2BLNyWGEL4j7EkgwSV7ikfcHLk9zr8y2qJJcZqVAiU1NmJ2FEsLel0FRCERSQU3%2Buu7jvvxlJjyCJGBBGAuS6qyLkZmLRMxSZYKyqpIBHZ4iN2uqncQcxAWGoQwtN2%2BxgY6sAEFr7Sxka7dfH8UNv3JbPYSXJHcATmwiPqoAMNeI6NvpjSAj4XDHDDaZC%2FagV16fqadk4YCMMERn%2FwfN5rUEyY%2BWmw7oA9qsEaDEP1NndNQkBsDmpDFkOCt8xuLCCYoZ5XMptQ%2FkV6VyjasZzd%2BmGJehA9%2Fd5oI3FMryIXWzqwSUnDNZqLXsQPCMlu%2F%2F1Rjo7WVCiOpBQ4omy0glWz0%2FxJV3Bnzl3sjB1tUksIFsS6lGg%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=9adf5efde0ffa5f9dfc7eef4ac095f343ab9fc863159f779d1b444e761f04f25",
      "file_size": 661771,
      "type": "video/mp4",
      "moderated": null
    },
    {
      "id": 756269,
      "file_name": "Screen_Shot_2020-03-22_at_11.22.06_pm.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/pD6Xf8ZiqbysXKVRzQ9ocWFQ?response-content-disposition=attachment%3B%20filename%3D%22Screen_Shot_2020-03-22_at_11.22.06_pm.png%22%3B%20filename%2A%3DUTF-8%27%27Screen_Shot_2020-03-22_at_11.22.06_pm.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQUK3TW6R5%2F20250921%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250921T102533Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEIj%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDYUltHmmc5zz7FbX9%2BhnLsC%2BI%2FkETnF6wSvuA8jSpH5gIhAMgfIeEQszZSh5a3b%2FpUdy78MMNarH5UHYPIExl609LbKrEFCBEQAxoMMDEzNjE5Mjc0ODQ5Igw8%2BeyYtSMd%2BASZf5AqjgW3xr09iUnFh9lbiMQHuWlu3lfitTwIOQagu1IpSPfblOtq7qraEDuAGVXZaGdXdj5zykisq7Kc34BBjiZEz5vXlDcpFHosFBZSNJ20GPN4oRXmJcsw3RdCJzQyH%2Fvsdd78D7srH0NX6Jk9lcUnUNsMElKSxa7hg%2BCDGJWOlxWzjVljZrBS1JRG1tYwf%2FKzWSZpL2haUlRhvHNsYvJ%2FBSmiE%2Bvt2P2VmTdudzxL1M%2F%2BrCGzNhfjjXUzt%2FypaTw8CjoQ7FdqimfT14%2Fa7uB1xTZMxZNpPnLJ2rSDUPiRxVKlWFMxo9syjPOLAF0fBDcaVUguP6dkUK6iZLSHIe4Gq%2BAOw9EmWsA14zobJ%2BuiXQlvJaqXma2KSku%2BDkGMdmAYnToG32jLp%2Bf6nCpVwId%2FIp5CQS3vR1asPCTnvwm09yD8vfj9mHeFUgCru2okQpBX%2BnjZYUFE5K9z8dFcRYKNbHVa7XbD7BXoUd4vamSWdFZTYszrHSSXDbKtvvQGr1eusVU1LCKPRgXkgJSZF32ecwAWG5CdGv0tKxeXRZ3CTb81Q%2Fz6FF%2BXXPXxQdpNctzk7ZBnP68KPPdIsLFNEdkNiGp4rk%2BTKfQNW3bPgSMiH3Of5rCWuw8rQd6jCUrCT83smZ8%2FXz29P0jKMbJZtJP5H6GCNR3gaw5D8auxUM2qEe%2BKU39CcRIOz8%2BjH%2FFhkDRK1zakOOvi5mbFwWqBNFF8YKNODrg6kgqspQnx5vbFwqBixzpo2M%2BLNyWGEL4j7EkgwSV7ikfcHLk9zr8y2qJJcZqVAiU1NmJ2FEsLel0FRCERSQU3%2Buu7jvvxlJjyCJGBBGAuS6qyLkZmLRMxSZYKyqpIBHZ4iN2uqncQcxAWGoQwtN2%2BxgY6sAEFr7Sxka7dfH8UNv3JbPYSXJHcATmwiPqoAMNeI6NvpjSAj4XDHDDaZC%2FagV16fqadk4YCMMERn%2FwfN5rUEyY%2BWmw7oA9qsEaDEP1NndNQkBsDmpDFkOCt8xuLCCYoZ5XMptQ%2FkV6VyjasZzd%2BmGJehA9%2Fd5oI3FMryIXWzqwSUnDNZqLXsQPCMlu%2F%2F1Rjo7WVCiOpBQ4omy0glWz0%2FxJV3Bnzl3sjB1tUksIFsS6lGg%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=71bd7bc03c8b234b04668f3adcb994923d5c0ba78e23f6a19a6b038e7e67a361",
      "file_size": 131897,
      "type": "image/png",
      "moderated": null
    }
  ],
  "allow_singular_disclosure_at": null,
  "vote_count": 349,
  "voters": [
    "trojan187",
    "superhero1",
    "oussamaka",
    "sebd",
    "r4d1kal",
    "sky003",
    "orange303",
    "acid_slug",
    "n1m0",
    "a_d_a_m",
    "and 339 more..."
  ],
  "severity": {
    "rating": "high",
    "author_type": "User"
  },
  "structured_scope": {
    "databaseId": 18138,
    "asset_type": "URL",
    "asset_identifier": "gitlab.com",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
