{
  "id": 3165242,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8zMTY1MjQy",
  "url": "https://hackerone.com/reports/3165242",
  "title": "Server-Side Request Forgery (SSRF) via Game Export API",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "critical",
  "readable_substate": "Resolved",
  "created_at": "2025-05-28T09:36:50.120Z",
  "submitted_at": "2025-05-28T09:36:50.362Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "oblivionsage",
    "url": "/oblivionsage",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/x2lozwzz6o4gdnb66zxqxjvzza3i/36bca6668139d77be42208d896968344ae7a76c55ee0f8b0f28281ccd492ff02"
    },
    "is_me?": false,
    "cleared": false,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 48242,
    "url": "https://hackerone.com/lichess",
    "handle": "lichess",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/CbR2hQEVmv82Z9L1cfqd9SFQ/36bca6668139d77be42208d896968344ae7a76c55ee0f8b0f28281ccd492ff02",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/CbR2hQEVmv82Z9L1cfqd9SFQ/19c85a12ac35f466af1ea2b0ae853bfe5e8f057fb1d6fb62db131707bb67b30d"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": false,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "Lichess",
      "twitter_handle": "",
      "website": "https://lichess.org",
      "about": "The free chess server. No paywall, no tracking, no ads. Just the good stuff. Source code: https://lichess.org/source"
    }
  },
  "has_bounty?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2025-06-03T12:56:00.368Z",
  "bug_reporter_agreed_on_going_public_at": "2025-06-03T12:56:00.213Z",
  "team_member_agreed_on_going_public_at": "2025-06-03T11:41:06.574Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "# Summary\n\nHello Lichess Team,\n\nI found a Server-Side Request Forgery vulnerability in the game export functionality. An attacker can make the Lichess server send HTTP requests to arbitrary URLs by manipulating the `players` parameter. This works on public endpoints that don't require any authentication\n\n\n\n\n\n# Description:\n\nThe issue is in the game export API endpoints that accept a `players` parameter. When I looked at the code, I noticed that this parameter gets passed directly to `RealPlayerApi.apply()` without any URL validation\n\n\nHere's the problematic flow I found:\n\n\n\nIn `app/controllers/Game.scala`:\n\n```bash\nval config = GameApiV2.OneConfig(\n  format = GameApiV2.Format.byRequest,\n  imported = getBool(\"imported\"),\n  flags = requestPgnFlags(extended = true),\n  playerFile = get(\"players\")  // User input taken directly\n)\n```\n\n\nThen in `modules/api/src/main/GameApiV2.scala`:\n\n\n```bash\nrealPlayers                  <- config.playerFile.so(realPlayerApi.apply)\n```\n\nAnd finally in `modules/web/src/main/RealPlayer.scala`\n\n```bash\ndef apply(url: String): Fu[Option[RealPlayers]] = cache.get(url)\n// This leads to:\nws.url(url).withRequestTimeout(3.seconds).get()\n```\n\n\nThe `get(\"players\")` method directly reads from HTTP query parameters without any validation. The `so()` method executes the function when the Option contains a value, so any URL I provide gets passed straight to the HTTP client\n\n\n\n\n# PoC\n\nNote: I discovered this vulnerability through source code analysis and then confirmed it by testing live on the official Lichess website. The following PoC demonstrates the issue as it exists in the production environment\n\n1. Pick any valid game ID from Lichess (like from a recent game)\n\n{F4390928}\n\n2. Make a request to: `/game/export/[GAME_ID]?players=http://169.254.169.254/latest/meta-data/ `\n\n3. The server will make an HTTP request to the provided URL\n\n4. You can also test with: `/api/games/export/_ids?players=[URL]` or `/api/games/user/[USERNAME]?players=[URL] `\n\n5. Monitor your server logs or use a service like webhook.site to confirm the request\n\n\n{F4390944}\n\n{F4390945}\n\n# Mitigation:\n\nTo fix this, you should:\n\n+ Add URL validation to only allow specific trusted domains for the `players` parameter\n\n+ Implement a whitelist of allowed URLs or URL patterns\n\n+ Consider removing the feature entirely if it's not critical\n\n+ Add authentication requirements for these endpoints\n\n+ Block requests to private IP ranges (127.x.x.x, 192.168.x.x, 10.x.x.x, 169.254.x.x) (For security and ethical reasons, I did not send any actual requests to these IP addresses. If required, I can provide my own IP address or any additional information for verification purposes)\n\n\nThe fix should be in `RealPlayerApi.apply()` method to validate the URL before making any HTTP requests.\n\n\nhttps://cwe.mitre.org/data/definitions/918.html\n\n## Impact\n\nAn attacker could use this to:\n\n+ Access cloud metadata services (AWS, GCP) to steal credentials and configuration\n+ Scan internal networks and discover internal services\n+ Access internal APIs and admin panels that aren't exposed to the internet\n+ Potentially read sensitive internal data or configuration files\n+ Perform port scanning of internal infrastructure\n\nThis is particularly concerning because the endpoints are public - no authentication needed. Also, since it's on a high-traffic site like Lichess, an attacker could potentially use this to bypass IP-based restrictions on internal services",
  "weakness": {
    "id": 68,
    "name": "Server-Side Request Forgery (SSRF)"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 4390928,
      "file_name": "image.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/moursgngsrrqvgcuiwb5auxuotdy?response-content-disposition=attachment%3B%20filename%3D%22image.png%22%3B%20filename%2A%3DUTF-8%27%27image.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ36KDSPN4%2F20250704%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250704T194734Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJHMEUCIQDjolfhj3ABVc7gGZNob1XQvxWJYelaw5kpMDkIl9If1QIgA5KnMMsfMgDF3WCix%2FYSPyLz6C%2BCP0aoOlEmqV3VQkgqsQUIMxADGgwwMTM2MTkyNzQ4NDkiDI%2BPmg5O9cdPNNQvTSqOBfERGAkaq8dokTn39VXvo5nRW2DJlq9vzWDZQuNa7S5w652bG00OtXPDEKwoGLgIObqjffZHDOSSNsjkG%2F5uEcBadXi1Oj91ZEhxwXhQn13sl6Gpp1ugYzUDB5RPHTXhKO5fEsUjFFTJAbtrVzFc2UkDQCu1LrmXPR8BUQclhIC7bmU6YIAITDbyproorx71U8YKsa4PvH%2F7sbbysxjgS9rntUtuIgNlt%2BsP6YxjUST8Bth8Z1WKLRf9eq3VsYfT7jCtX3a3448OjoxgmuOX8BZJGYarObMECtIA4hSCPCd6LlTt%2BNlTv3ZIGniCEBbZixWQ1DSBz37tuZi0wKMRc3gJPpTMg1OUAfZKBN0n2BEagjmPXurPF4X8RNqWseazgI0FwXsGNt0ndtsfyNlGy%2BIAi0VoU8HGNRy6hJ9F5jJAI7BOOzX0RK2V4BSNZ7FnlUJoDILxxdsYuOtJJ9alPjcDQ0srzaNatc1IN6fbSTE37jD64TMHaeV04cI2tGo%2Bke1IEZ2LcSQeyLi2IMoj%2FZkOREfrGALoSNrF3H3ROG7NGHIM52X8jNltui1TqT3JUyDgSIsRaGaG1fCvjbRLz6c%2FfQ1oAcmh8ZRIve5nokVgOWMQ%2FGUCief4nDAOkjf%2FScr%2FNol6TL777Kl8LFvT%2F1JcFV83EVR6OonS0H%2BiF3RUwlA7dnsF%2BM5yqaPw61yUJwuXa5qsHvs%2FRNs1EcHgv4J1muntBKHm3pn2jxxao7%2FmMpCWxmekhT7%2BicsTubIXYSqd%2FumHibt0ry2okBEdgqERFZtiZ72oZtm9Aq3WR79WsWxXyfVf7QE0xMo4Plcz6w3KVsDIbbInCwWjF%2F%2F1ZunC9vHYF%2F6G3sRXqpHYFDCEsaDDBjqxAfV2w%2Bn60tGhnJtpIoFeaTNVULRQx1MibsAHIh8C3j4FiqfnFLiTW%2FT7zQAehhW9xOFxpfWIIT2rGAuZ0VyYukKcHuwDWqWA6PQFYZwm40jiodmosO%2BLISGlJRNqImp6GeSPsracn87DgqjuP3qodF8engFpPSCITNIjosuLLdfTnUbLNDq8t9cZ7OZcxpcgA3dZKpRD49vbYJ%2BfAucPe89Ylo%2Bkz%2BqjHk70J8KiM%2FzICw%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=f70dee274940ac98246e0fee4c4156cf9fdfbbd0f8113b36197967a5b8fca872",
      "file_size": 99777,
      "type": "image/png",
      "moderated": false
    },
    {
      "id": 4390944,
      "file_name": "image.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/ve429yk8l9ahmv06hfkk0c7hmtm0?response-content-disposition=attachment%3B%20filename%3D%22image.png%22%3B%20filename%2A%3DUTF-8%27%27image.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ36KDSPN4%2F20250704%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250704T194734Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJHMEUCIQDjolfhj3ABVc7gGZNob1XQvxWJYelaw5kpMDkIl9If1QIgA5KnMMsfMgDF3WCix%2FYSPyLz6C%2BCP0aoOlEmqV3VQkgqsQUIMxADGgwwMTM2MTkyNzQ4NDkiDI%2BPmg5O9cdPNNQvTSqOBfERGAkaq8dokTn39VXvo5nRW2DJlq9vzWDZQuNa7S5w652bG00OtXPDEKwoGLgIObqjffZHDOSSNsjkG%2F5uEcBadXi1Oj91ZEhxwXhQn13sl6Gpp1ugYzUDB5RPHTXhKO5fEsUjFFTJAbtrVzFc2UkDQCu1LrmXPR8BUQclhIC7bmU6YIAITDbyproorx71U8YKsa4PvH%2F7sbbysxjgS9rntUtuIgNlt%2BsP6YxjUST8Bth8Z1WKLRf9eq3VsYfT7jCtX3a3448OjoxgmuOX8BZJGYarObMECtIA4hSCPCd6LlTt%2BNlTv3ZIGniCEBbZixWQ1DSBz37tuZi0wKMRc3gJPpTMg1OUAfZKBN0n2BEagjmPXurPF4X8RNqWseazgI0FwXsGNt0ndtsfyNlGy%2BIAi0VoU8HGNRy6hJ9F5jJAI7BOOzX0RK2V4BSNZ7FnlUJoDILxxdsYuOtJJ9alPjcDQ0srzaNatc1IN6fbSTE37jD64TMHaeV04cI2tGo%2Bke1IEZ2LcSQeyLi2IMoj%2FZkOREfrGALoSNrF3H3ROG7NGHIM52X8jNltui1TqT3JUyDgSIsRaGaG1fCvjbRLz6c%2FfQ1oAcmh8ZRIve5nokVgOWMQ%2FGUCief4nDAOkjf%2FScr%2FNol6TL777Kl8LFvT%2F1JcFV83EVR6OonS0H%2BiF3RUwlA7dnsF%2BM5yqaPw61yUJwuXa5qsHvs%2FRNs1EcHgv4J1muntBKHm3pn2jxxao7%2FmMpCWxmekhT7%2BicsTubIXYSqd%2FumHibt0ry2okBEdgqERFZtiZ72oZtm9Aq3WR79WsWxXyfVf7QE0xMo4Plcz6w3KVsDIbbInCwWjF%2F%2F1ZunC9vHYF%2F6G3sRXqpHYFDCEsaDDBjqxAfV2w%2Bn60tGhnJtpIoFeaTNVULRQx1MibsAHIh8C3j4FiqfnFLiTW%2FT7zQAehhW9xOFxpfWIIT2rGAuZ0VyYukKcHuwDWqWA6PQFYZwm40jiodmosO%2BLISGlJRNqImp6GeSPsracn87DgqjuP3qodF8engFpPSCITNIjosuLLdfTnUbLNDq8t9cZ7OZcxpcgA3dZKpRD49vbYJ%2BfAucPe89Ylo%2Bkz%2BqjHk70J8KiM%2FzICw%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=f0d0f1ab2507167832315618f247fcf19579e2116afe4e446a46e35f9bb262a9",
      "file_size": 21909,
      "type": "image/png",
      "moderated": false
    },
    {
      "id": 4390945,
      "file_name": "image.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/f6c4kw2hbgr98tbqxthr7r2maf8f?response-content-disposition=attachment%3B%20filename%3D%22image.png%22%3B%20filename%2A%3DUTF-8%27%27image.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ36KDSPN4%2F20250704%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250704T194734Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJHMEUCIQDjolfhj3ABVc7gGZNob1XQvxWJYelaw5kpMDkIl9If1QIgA5KnMMsfMgDF3WCix%2FYSPyLz6C%2BCP0aoOlEmqV3VQkgqsQUIMxADGgwwMTM2MTkyNzQ4NDkiDI%2BPmg5O9cdPNNQvTSqOBfERGAkaq8dokTn39VXvo5nRW2DJlq9vzWDZQuNa7S5w652bG00OtXPDEKwoGLgIObqjffZHDOSSNsjkG%2F5uEcBadXi1Oj91ZEhxwXhQn13sl6Gpp1ugYzUDB5RPHTXhKO5fEsUjFFTJAbtrVzFc2UkDQCu1LrmXPR8BUQclhIC7bmU6YIAITDbyproorx71U8YKsa4PvH%2F7sbbysxjgS9rntUtuIgNlt%2BsP6YxjUST8Bth8Z1WKLRf9eq3VsYfT7jCtX3a3448OjoxgmuOX8BZJGYarObMECtIA4hSCPCd6LlTt%2BNlTv3ZIGniCEBbZixWQ1DSBz37tuZi0wKMRc3gJPpTMg1OUAfZKBN0n2BEagjmPXurPF4X8RNqWseazgI0FwXsGNt0ndtsfyNlGy%2BIAi0VoU8HGNRy6hJ9F5jJAI7BOOzX0RK2V4BSNZ7FnlUJoDILxxdsYuOtJJ9alPjcDQ0srzaNatc1IN6fbSTE37jD64TMHaeV04cI2tGo%2Bke1IEZ2LcSQeyLi2IMoj%2FZkOREfrGALoSNrF3H3ROG7NGHIM52X8jNltui1TqT3JUyDgSIsRaGaG1fCvjbRLz6c%2FfQ1oAcmh8ZRIve5nokVgOWMQ%2FGUCief4nDAOkjf%2FScr%2FNol6TL777Kl8LFvT%2F1JcFV83EVR6OonS0H%2BiF3RUwlA7dnsF%2BM5yqaPw61yUJwuXa5qsHvs%2FRNs1EcHgv4J1muntBKHm3pn2jxxao7%2FmMpCWxmekhT7%2BicsTubIXYSqd%2FumHibt0ry2okBEdgqERFZtiZ72oZtm9Aq3WR79WsWxXyfVf7QE0xMo4Plcz6w3KVsDIbbInCwWjF%2F%2F1ZunC9vHYF%2F6G3sRXqpHYFDCEsaDDBjqxAfV2w%2Bn60tGhnJtpIoFeaTNVULRQx1MibsAHIh8C3j4FiqfnFLiTW%2FT7zQAehhW9xOFxpfWIIT2rGAuZ0VyYukKcHuwDWqWA6PQFYZwm40jiodmosO%2BLISGlJRNqImp6GeSPsracn87DgqjuP3qodF8engFpPSCITNIjosuLLdfTnUbLNDq8t9cZ7OZcxpcgA3dZKpRD49vbYJ%2BfAucPe89Ylo%2Bkz%2BqjHk70J8KiM%2FzICw%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=a3d1e78b18b142523f546ff8a2ab90ee4d9790e2fe4fdff2eed4d0904a48be31",
      "file_size": 76977,
      "type": "image/png",
      "moderated": false
    }
  ],
  "allow_singular_disclosure_at": null,
  "vote_count": 88,
  "voters": [
    "aboalezz",
    "brainspill3r",
    "loaymorad",
    "hacker_441",
    "orange303",
    "alp",
    "alejandroar",
    "2026",
    "0xoroot",
    "ronak_9889",
    "and 78 more..."
  ],
  "severity": {
    "rating": "critical",
    "score": 9.8,
    "author_type": "User",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "low",
      "privileges_required": "none",
      "user_interaction": "none",
      "scope": "unchanged",
      "confidentiality": "high",
      "integrity": "high",
      "availability": "high"
    }
  },
  "structured_scope": {
    "databaseId": 50174,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "https://github.com/lichess-org/lila",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
