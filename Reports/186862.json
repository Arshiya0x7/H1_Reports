{
  "id": 186862,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xODY4NjI=",
  "url": "https://hackerone.com/reports/186862",
  "title": "Order-phishing via Payment ID URL",
  "state": "Closed",
  "substate": "informative",
  "severity_rating": "low",
  "readable_substate": "Informative",
  "created_at": "2016-11-30T13:21:13.847Z",
  "submitted_at": "2016-11-30T13:21:13.847Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "sp1d3rs",
    "url": "/sp1d3rs",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/079/690/6853ada3e124bdd8616b1be752223b558de38195_original.png/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1"
    },
    "is_me?": false,
    "cleared": true,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 15252,
    "url": "https://hackerone.com/portswigger",
    "handle": "portswigger",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/015/252/60e8778f4f1fee57ea2b164a7d2ec1e2d2dd7bc8_original./235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/015/252/60e8778f4f1fee57ea2b164a7d2ec1e2d2dd7bc8_original./3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "PortSwigger Web Security",
      "twitter_handle": "Burp_Suite",
      "website": "https://portswigger.net",
      "about": "Burp Suite is the leading software for web security testing"
    }
  },
  "has_bounty?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2016-11-30T20:14:33.226Z",
  "bug_reporter_agreed_on_going_public_at": "2016-11-30T19:43:47.306Z",
  "team_member_agreed_on_going_public_at": "2016-11-30T20:14:33.195Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Hello. I discovered the endpoint, which allows the attacker conduct the fishing attack to other users and they can pay for attacker's order.\nWhy this can happen? \nOn the site, order id parameter sends to the https://portswigger.net/CCPayment.aspx as POST, but attacker can append it as GET and it will works:\n\nExample:\nhttps://portswigger.net/CCPayment.aspx?id=DD6BE85CDD50DC829C0354F83E5C67\n\nSteps to reproduce:\n1) Go to the https://portswigger.net/buy/ and fill the form.\n2) Click \"Confirm details\".\n3) Click \"Pay by credit card\".\n4) Catch the POST request from ССpayment.aspx with order id:\n\nPOST /CCPayment.aspx HTTP/1.1\n[...Headers...]\n\nid=05BC4BF36F9BB32E80F4B581BF4859\n\n5) Now append the id as GET parameter. You will have link like https://portswigger.net/CCPayment.aspx?id=05BC4BF36F9BB32E80F4B581BF4859\n6) Now you can conduct phishing attack with this link, and users can pay for your order.",
  "weakness": {
    "id": 45,
    "name": "Cross-Site Request Forgery (CSRF)"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 6,
  "voters": [
    "smither",
    "pekafat",
    "shepard",
    "spetr0x",
    "cr4zyrud",
    "thejaguar"
  ],
  "severity": {
    "rating": "low",
    "author_type": "Team"
  },
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "id": 3684,
      "category": "researcher",
      "content": "The issue discovered was trivial, and did not present much security impact (as the form was available for anonymous users). \n\nIt was one of the my early reports here (my 1st week on H1 with zero knowledge), with a lot of technical mistakes, so enjoy the reading :D.\nHere is the funniest quote:\n```\nBasically it is not usual CSRF, but modified kind of CSRF (with GET scenario, since the POST scenario not works due to X-Frame-Options set to SAMEORIGIN)\n```\n{F3614319}\n\nThanks to @albinowax for being patient with me. It was very important for me in those early days",
      "updated_at": "2024-09-19T10:10:52.868Z",
      "can_view?": true,
      "can_create?": false,
      "attachments": [
        {
          "id": 3614319,
          "filename": "spike-monkey-typing.gif",
          "size": 492920,
          "type": "image/gif",
          "url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/bct2yfdauakcjytv7j6gtglpx77d?response-content-disposition=attachment%3B%20filename%3D%22spike-monkey-typing.gif%22%3B%20filename%2A%3DUTF-8%27%27spike-monkey-typing.gif&response-content-type=image%2Fgif&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQXQYWQDQ4%2F20250922%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250922T002427Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJj%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQCI%2Bb8CdWg2BoaTZQObAOV8iGuchcAB55SfdNJZzatxpgIhAPTWmv4OFU22P29VVw9hegltZEX2KWxdj2%2FS2c8BeHvfKrEFCCEQAxoMMDEzNjE5Mjc0ODQ5Igz2e2wgiWF%2B9wm%2FCn8qjgXwqBd69P3WsC7C4Rf51rYIdpjpXJChSbmei2nKwKF9Ywlv14HAFTh6v0TIBsO3gw0Pi1vmQHDDJ7CfCkLHUYlBk4A4PtxXSdQHERa5kc8imicspGSP1PCMUgbuEfgpLFj0vcWgdnudQFhsaIGc8IApSEoNm5SUqq5a2uu5exvhSdON2ZnUxwMpxf2Rc6z2%2Fnn2S7eS5%2BC%2FeMYq5DNGX7LiVMvwjt8eMhG8DiXkcqFABhfZ7VfWBD6KIwacQxno1%2FZXoqXCmbouXWJ48mDNFXsWAKMrF6zPGzUKyQTBtbcTH33JGZ8o79jTpt2z190WVIkZNWtkL46BOdKvkHnV2%2FfCWJyUPzJe0XNTw%2FPdQqOYaS3GJwnAPE1OTa%2BZ9VU70Mq9W953qSuJwi5IVoxZMYtXpT66paCKocbmj4NqXv8doW%2Bb9PilID8%2Fbjq1wRZgPiHUqoaI22q09ym0alDIIdyfBbJ%2BHP3xSdCdpxH2PJ00SpprRzSOfh%2FiRrlTWXtiuIh1hN98sfgA1sG1VxERDoLNePB%2BrKGXDa8hC9HF%2FCKg%2FgwtHHq3i9fBO%2F9nxyXXTP2AgAIw6VJx1uvFWDvFtVWWPFWdTxZ1emgX4M7yelUc77T4CwOF4%2Bshy1N2Po82ZXpPaZf%2FmAFD1QSVQAzbDyxv9ZLPRQDc37W5zxta6KZemzuuoKYrwFYRBGVZPIX1OEV7AURFiilHZdhk5ucva4XMBM25r1LQj4TwH5VMK9C%2FuDToPYD%2FMNtmvHfRXzopMC6uW%2FFb9zO1HVs8Defo3huRqvk8DCdDmLCRoUlmSwKtumRY%2Bf4HE%2BOPQknHmj6PU5HerVkR4IUjr6OtQbssJv0xI5KocJl0FBSYs%2FNnxOEw7JHCxgY6sAEbRaFP912trnUB0enm7M89se3xblgOmrU22x3DPaw0vD1peH6fiEIWBbquvO7iq4EKxYdVbKujE0iPCww%2BcVmZ5m2C7Ducy8WjQNdSo85q3o4KtahTKS86z5OVJwgpCi0vZB0GOr4e%2BNvCsSBnub%2FTzMwvXmc58xreMZVJJuC%2Fos51QneRsMs%2BPFm09lgQsSEiWSdlgdo3wD0lOj8oTnIafc%2BGvvVSQKPzXx3tKVE5iQ%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=5d5014dc39bc347b7b7c04ee4cf8d1263905d40d88807e4d131de5609c0972ff"
        }
      ],
      "user": {
        "id": 79690,
        "username": "sp1d3rs",
        "name": "Eugene Yakovchuk",
        "bio": "The world tried to catch me, but it couldn't.",
        "cleared": true,
        "verified": true,
        "website": "https://r1p.xyz",
        "location": "Canada",
        "created_at": "2016-05-23T03:07:23.595Z",
        "url": "https://hackerone.com/sp1d3rs",
        "hackerone_triager": false,
        "hackerone_employee": false,
        "user_type": "hacker",
        "profile_picture_urls": {
          "small": "https://profile-photos.hackerone-user-content.com/variants/000/079/690/6853ada3e124bdd8616b1be752223b558de38195_original.png/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/079/690/6853ada3e124bdd8616b1be752223b558de38195_original.png/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c",
          "xtralarge": "https://hackerone.com/rails/active_storage/representations/redirect/eyJfcmFpbHMiOnsiZGF0YSI6MTM0NzcsInB1ciI6ImJsb2JfaWQifX0=--c8bb3853d9462d00bf85e988a9d33579e71c0b82/eyJfcmFpbHMiOnsiZGF0YSI6eyJmb3JtYXQiOiJwbmciLCJyZXNpemUiOiIyNjB4MjYwXHUwMDNlIn0sInB1ciI6InZhcmlhdGlvbiJ9fQ==--c155082ce6f9751dcb29cd6ea061a7e4d7329577/z.png"
        }
      }
    }
  ]
}
