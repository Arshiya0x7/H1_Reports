{
  "id": 115402,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xMTU0MDI=",
  "url": "https://hackerone.com/reports/115402",
  "title": "XSS via modified Zomato widget (res_search_widget.php)",
  "state": "Closed",
  "substate": "resolved",
  "readable_substate": "Resolved",
  "created_at": "2016-02-08T15:39:16.409Z",
  "submitted_at": "2016-02-08T15:39:16.409Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "pr0tagon1st",
    "url": "/pr0tagon1st",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/033/123/9e3397fc4128a6ea0579adedf2a30f47f54ad11a_original.jpg/3cb67cc78dc0cba55b102dd9eca2ee89b206d3e960be830f070583d9070b69ef"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 2943,
    "url": "https://hackerone.com/eternal",
    "handle": "eternal",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/9525xdsq4bz7ubnoie172ssjv8ul/3cb67cc78dc0cba55b102dd9eca2ee89b206d3e960be830f070583d9070b69ef",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/9525xdsq4bz7ubnoie172ssjv8ul/d9695107bfcd68eeb1c9e0912b109cdae9a6c00c0bda6fd4cbd6d9bdb828840a"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "Eternal",
      "twitter_handle": "Zomato",
      "website": "https://www.eternal.com",
      "about": "Eternal is India’s largest new-age tech company by market cap, comprising of 4 businesses (as of now) – Zomato, Blinkit, District, & Hyperpure."
    }
  },
  "has_bounty?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2016-03-11T06:17:58.904Z",
  "bug_reporter_agreed_on_going_public_at": "2016-02-10T06:17:56.247Z",
  "team_member_agreed_on_going_public_at": null,
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Table of Contents:\n1.  Short Description of Security Issue\n2. Proof of Concept\n\n#### 1. Short Description of Security Issue\n\nThe widget API endpoint at `https://www.zomato.com/widgets/res_search_widget.php` is vulnerable to XSS in the `language_id` parameter.\n\nAn attacker can create a web page that includes a Zomato widget inside an iframe with a specially crafted URL parameter that contains javascript. If a Zomato user opens this page, the iframe will load and execute the malicious javascript in the zomato.com origin using the user's active session.\n\nThis javascript can then steal a CSRF token from the zomato.com homepage and perform actions _as_ the user - actions such as inviting/removing friends, posting reviews, posting ratings and others. This can potentially be used to message other users with the malicious web page and get them to execute the malicious code, creating a sort of javascript worm or embed external malicious documents (flash, pdf, other) to continue the attack on a user's machine. On the good side, the injected javascript _may not_ steal the user's session cookie thanks to the HTTPOnly cookie parameter.\n\nThe `language_id` parameter should be filtered so that non-essential characters are removed before being output to users.\n\n#### 2. Proof of Concept\n\nI use a piece of javascript code that creates an alert box with the `document.domain`, which shows the SOP is bypassed: `\"}');alert(document.domain);console.log('`. This code is urlencoded and inserted into the `language_id` parameter of the request like so:\n\n```\nhttps://www.zomato.com/widgets/res_search_widget.php?city_id=276&language_id=%22%7D%27)%3Balert(1)%3Bconsole.log(%27&theme=blue&hideCitySearch=on&hideResSearch=on&sort=popularity\n```\n\nThis URL is used to create an iframe as described in Zomato's widget documentation: https://developers.zomato.com/widgets and the final code looks like this:\n\n```\n<html>\n    <body>\n        <iframe src=\"https://www.zomato.com/widgets/res_search_widget.php?city_id=273&language_id=%22%7D%27)%3Balert(document.domain)%3Bconsole.log(%27&theme=blue&hideCitySearch=on&hideResSearch=on&sort=popularity\" style=\"position:relative;width:100%;height:100%;\" border=\"0\" frameborder=\"0\"></iframe>\n    </body>\n</html>\n```\n\nOpening this html document, even locally, will run the javascript in the context of zomato.com as shown in the attached screenshot.\n\nLet me know if you have any questions.\n\nBest,\nMatt",
  "weakness": {
    "id": 60,
    "name": "Cross-site Scripting (XSS) - Generic"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 72661,
      "file_name": "zomato_poc.jpg",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/072/661/16d15c201d028c6f94c40f3871004d67af1a35af/zomato_poc.jpg?response-content-disposition=attachment%3B%20filename%3D%22zomato_poc.jpg%22%3B%20filename%2A%3DUTF-8%27%27zomato_poc.jpg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQYR7W3FZ4%2F20250922%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250922T130459Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEKX%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIHZI7Sn87xpkFKQ6tochGRpFv0cTQwA9789Px6YknW5cAiAIpGUr6vs9hwOKc%2B%2BukMY8vfkGM0MHh5YD1enkLwjezCqxBQgtEAMaDDAxMzYxOTI3NDg0OSIMmImhuS2OvOF%2Fuk2MKo4FXrwccs4SuocNqTTCPk2NhHsi9H%2FyfQz9cGi63rw1nYKOCugrOsReeAMMV%2FAKCLBG3VuJMh1VUnPMWOFgpYM%2Bn8g9y8pEDmcNuaWu9CEa0ZkJOdht6QZdrDFjfseFem9cK%2FtHxM%2FWCnADfvK416poaQ8Zu2aov9hAcyrvFmXnwFUy3WhtY5aCsyLdo6AnIqAGW4z7LUm9TGQv6PJoWKriOAPODKtIo4FXY9ZoFhyWgozmsf%2BEYorpr6fia%2FBQN9RBLuyOIaBvjoVcMh8P1q5kGY%2FT3UWgBO2cSMHioWA5T12BxghHEBdBSH95tgJZ3%2BrkEmMnKdFebulTsR%2BeNnYxc7WfFUFdRSr8EsL5XVgkm3mwj7MlhwqOfidxdGFnvTnOd%2BSqfINTEW%2BXk%2FCsS4tNnpdUfS8SsYFg2ohcDGr9d0l9qi%2FPCEr431yW13FAFwI5ezyDRg3OCC%2F2LUC2ZUurX8%2BU0nP4KUIPfRoRi4IgNQ3UEE26pI6OtyGdv3K6Dk5VDC9NRubOHsPgAAvyimDeuGu1MtVF2Wm%2F5TaXc5S6v2MykDJXXbAlbB7boCZoyk2EVJyA%2FsOv26wN6ibzPQD982lqKBn91WnI%2B%2BQhkE%2Bu10LpENsPfA9ODlxqCPtMOyy4mavOjynND1z3XuDFbuKyQ4t58tXiPWNqiPmV0y%2F0dzzQ7g%2FzJzKvHPEWef2blW8NOzoZwlADsypq%2FvgO3yaBHf3vkmu6ykccAzAcs70oSbbR0YN9jWYprUytMy17v2wQo8kcUTScDxwNTY1NtWKT7X5CeZPCG6BInT3VUhTGkgVgrqVzfhrW9jjNV5Ii6ZxnOslaXFYvuX%2BVwkjOIIXhAVKdUpn%2BVcjeV35nmpYwMPz8xMYGOrIB8rS2qgA4H2V17o9e5gf%2FFBcjX6mJXCvPg0Wl0gBg5ZGFZKbHUClcN47zMy5pmB7aunMHQyHKW8nVQ4zbdJlPELCtfcYBWYzUHIwDEl4qf6ICXb0JHf2KftBSH3l1eqmJQ8kNayrBzn9%2FuXcELZrR14dZJGS8ZRLtLN8rksOOEEJPgodhP2Ekes4o3tstL5umybGI7FUyMpjbLP7ESvBz3uz0ZVOx0Qaj5%2BIH%2BJ7eKjlSjQ%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=29947eb05dd639eb6b386499d7610c5af6f6af14e1394981dd6e8cc1bf585067",
      "file_size": 87241,
      "type": "image/jpeg",
      "moderated": null
    }
  ],
  "allow_singular_disclosure_at": "2016-03-11T06:17:56.646Z",
  "allow_singular_disclosure_after": -300869223.3031445,
  "singular_disclosure_allowed": true,
  "vote_count": 0,
  "voters": [],
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
