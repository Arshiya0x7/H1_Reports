{
  "id": 450315,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC80NTAzMTU=",
  "url": "https://hackerone.com/reports/450315",
  "title": "XSS on www.██████ alerts and a number of other pages",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2018-11-27T08:08:02.043Z",
  "submitted_at": "2018-11-27T08:08:02.043Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "d0nut",
    "url": "/d0nut",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/231/382/894de727558950a3bea19bed943279756d7f1f4a_original.jpg/3cb67cc78dc0cba55b102dd9eca2ee89b206d3e960be830f070583d9070b69ef"
    },
    "is_me?": false,
    "cleared": true,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 16064,
    "url": "https://hackerone.com/deptofdefense",
    "handle": "deptofdefense",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/016/064/46cd0286b1fa224aaa2cb9dfaaca9fa22b5b80b2_original.png/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/016/064/46cd0286b1fa224aaa2cb9dfaaca9fa22b5b80b2_original.png/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": false,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "U.S. Dept Of Defense",
      "twitter_handle": "DC3VDP",
      "website": "https://bit.ly/3ntULtN",
      "about": ""
    }
  },
  "has_bounty?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2019-12-02T19:10:17.263Z",
  "bug_reporter_agreed_on_going_public_at": "2019-06-08T00:08:32.722Z",
  "team_member_agreed_on_going_public_at": "2019-12-02T19:10:16.941Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "**Summary:** If an action on ███████ results in an error, an error dialog is shown. This \ndialog, in certain scenarios, is vulnerable to stored XSS due to a lack of sanitization.\n\n**Description:** In this specific example, I'll be using a GET endpoint that attempts to delete alerts based on an ID supplied. If the ID does not belong to the user, an error is displayed containing the ID. This ID is not sanitized when displayed in the error dialog.\n\nExample PoC: `https://www.██████████/alerts/delete/id/1234<img+src+onerror%3d'alert(1)'>`\n\nThe previous PoC appears to be reflected but it is actually stored. Here's a PoC to prove that: `https://████████pythonanywhere.com/poc/xss/dod/4rspEdWG1tqA2pQ4bY4C`\n\n## Impact\nXSS\n\n## Step-by-step Reproduction Instructions\n\n1. Trick victim to visiting attacker.com\n2. Attacker.com makes a GET request to `https://www.████/alerts/delete/id/1234<img+src+onerror%3d'<PAYLOAD>'>`\n3. Redirect victim to `https://www.██████████/alerts/` or similar (like `https://www.████████/member/options`)\n\n## Product, Version, and Configuration (If applicable)\nhttps://www.█████\n\n## Suggested Mitigation/Remediation Actions\nSanitization of the error message.\n\n## Impact\n\nXSS",
  "weakness": {
    "id": 60,
    "name": "Cross-site Scripting (XSS) - Generic"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 15,
  "voters": [
    "pirateducky",
    "null_rhythm",
    "geeknik",
    "eveeez",
    "lumbridge",
    "armansameer",
    "joshuasoftdev",
    "tomatotiger",
    "manolism",
    "deliquesce",
    "and 5 more..."
  ],
  "severity": {
    "rating": "medium",
    "author_type": "Team"
  },
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
