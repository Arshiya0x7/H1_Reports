{
  "id": 73258,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC83MzI1OA==",
  "url": "https://hackerone.com/reports/73258",
  "title": "Python: imageop Unsafe Arithmetic",
  "state": "Closed",
  "substate": "resolved",
  "readable_substate": "Resolved",
  "created_at": "2015-05-22T00:00:00.000Z",
  "submitted_at": "2015-05-22T00:00:00.000Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "johnleitch",
    "url": "/johnleitch",
    "profile_picture_urls": {
      "small": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/dvpp7edplsutj226qs3pafpzimod/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1?response-content-disposition=inline%3B%20filename%3D%22FWS3.png%22%3B%20filename%2A%3DUTF-8%27%27FWS3.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQUHHHDGJL%2F20250922%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250922T212726Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEKv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIDvcnmzC5emRVk9TkwlGkmgxqUuU1y1B6dakIL7MwtAhAiBLwFrNg1QUXZfxVxbprLSkYhY0g0RZcG2P5DDexvDtVCqxBQg0EAMaDDAxMzYxOTI3NDg0OSIMJB3X4UkrhzbnGBp%2FKo4FxUD3SZ%2Baocrw5to0JIaYigWWahjq6b3fmWZhtm6qBHWoivYigXnpJtLNNk0k1NqDk4rwIRdEJuqhjbUuHalo8LzDSD8okKlg%2FyF2t6YTkGgAVGT8m6%2B28%2B%2Bef%2FSP0%2BKsLs01%2FMHFZudXcqcZpVcJQo%2B0Lis90iJ1Otz3Qw0RsWl4f6W4GIBvdodiadsdsU8Q3CEcc9ALGXzzgVoWVNQQdN5wYOL%2FdkYF0zRp0djhsiNk2jgFrKOBZUzY3CSmIZve7f8gpzgGTlJ6HRVchrBTGfEZS7aTtfc6ETaQKBT2ssqJZY0ODnzijPowkVmZqPG0RveONvE3nWPB3YPsZn5TAbNApyMmVvD18MITLly%2BqK6E0T%2FPmb5htBbf3SIORSr7IutT3Gvn3xd5K4nrv0J0utqQ1uuGR36VfV3xyuoxwqXmUds4%2FVtXUUe1TBj5Aci%2BT1%2B%2F8h8R7cs52Lvn4fcv2JCjIx3yyP5d1%2Br8UPgabsVh%2BIvIaIRJwoWpuzLktl2B751MNGvyp3AIJ8uUq9cJYKLd%2BOIzdEUiO6B7%2Bd304cipo1mZ0NCsUfw2vj4iuEVS3TJf38qMx3bDzdvDygVoVRtSUrXKMzbe%2BsLrSPAtdoZqPrklnSvtGfIOuI7fYAvIook3sC7Gse82XBW1fN%2FWqgywOEDe8DWP8BKEkX6rvZS3jvLf%2BTIXpWBMP41TqAk8fodumPzkFnxKTWhJ9Ujbt2Qqb6eB2WcaX8YzlTUJWcXxOEYyvLH6KHQJLTeVV4qflKPiu5hjQvENp3YPXv%2Ftj5JQdoysW%2BH6JdfkXEL4Km%2B2U%2FzQNIgLUp8LLX3cIhidRMDzMAEaj7m4mComw4Y%2B6AhQkYo%2F%2F7IHjpvei%2FIDMKy%2FxsYGOrIBoBtnfvzs28UoU%2B8G4olY52gZUbNHLkaKj%2BIwwFWt82Bhwe6u%2Ffl9hStE%2F3heRHBzvwyf1gQxkf94NRstCUiZUnnK%2FRdnGiQ%2FekBscOi3szB0HsDZayqHFhgYL7d%2FEx5VxZn58ytPtUceZ2szKI0TCqo3yohZ5UU82Pj3a9gPJ%2Bf6tbauoAk%2F4cp%2BMT3t9rP4%2B815INpw1YUfr223DbMwWXrDg47FrzH3HLjI7OPV%2BE7mHA%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=ea816478bfa7b65fadf5e057dae35c22f32cfb7f35fcec260aaf840fbbd6b9c8"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 54349,
    "url": "https://hackerone.com/ibb",
    "handle": "ibb",
    "profile_picture_urls": {
      "small": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/v0qywgoh5hm4cbhuanu8mqdtowhr/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1?response-content-disposition=inline%3B%20filename%3D%22ibb%20revision%205%20copy.png%22%3B%20filename%2A%3DUTF-8%27%27ibb%2520revision%25205%2520copy.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQUHHHDGJL%2F20250922%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250922T212726Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEKv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIDvcnmzC5emRVk9TkwlGkmgxqUuU1y1B6dakIL7MwtAhAiBLwFrNg1QUXZfxVxbprLSkYhY0g0RZcG2P5DDexvDtVCqxBQg0EAMaDDAxMzYxOTI3NDg0OSIMJB3X4UkrhzbnGBp%2FKo4FxUD3SZ%2Baocrw5to0JIaYigWWahjq6b3fmWZhtm6qBHWoivYigXnpJtLNNk0k1NqDk4rwIRdEJuqhjbUuHalo8LzDSD8okKlg%2FyF2t6YTkGgAVGT8m6%2B28%2B%2Bef%2FSP0%2BKsLs01%2FMHFZudXcqcZpVcJQo%2B0Lis90iJ1Otz3Qw0RsWl4f6W4GIBvdodiadsdsU8Q3CEcc9ALGXzzgVoWVNQQdN5wYOL%2FdkYF0zRp0djhsiNk2jgFrKOBZUzY3CSmIZve7f8gpzgGTlJ6HRVchrBTGfEZS7aTtfc6ETaQKBT2ssqJZY0ODnzijPowkVmZqPG0RveONvE3nWPB3YPsZn5TAbNApyMmVvD18MITLly%2BqK6E0T%2FPmb5htBbf3SIORSr7IutT3Gvn3xd5K4nrv0J0utqQ1uuGR36VfV3xyuoxwqXmUds4%2FVtXUUe1TBj5Aci%2BT1%2B%2F8h8R7cs52Lvn4fcv2JCjIx3yyP5d1%2Br8UPgabsVh%2BIvIaIRJwoWpuzLktl2B751MNGvyp3AIJ8uUq9cJYKLd%2BOIzdEUiO6B7%2Bd304cipo1mZ0NCsUfw2vj4iuEVS3TJf38qMx3bDzdvDygVoVRtSUrXKMzbe%2BsLrSPAtdoZqPrklnSvtGfIOuI7fYAvIook3sC7Gse82XBW1fN%2FWqgywOEDe8DWP8BKEkX6rvZS3jvLf%2BTIXpWBMP41TqAk8fodumPzkFnxKTWhJ9Ujbt2Qqb6eB2WcaX8YzlTUJWcXxOEYyvLH6KHQJLTeVV4qflKPiu5hjQvENp3YPXv%2Ftj5JQdoysW%2BH6JdfkXEL4Km%2B2U%2FzQNIgLUp8LLX3cIhidRMDzMAEaj7m4mComw4Y%2B6AhQkYo%2F%2F7IHjpvei%2FIDMKy%2FxsYGOrIBoBtnfvzs28UoU%2B8G4olY52gZUbNHLkaKj%2BIwwFWt82Bhwe6u%2Ffl9hStE%2F3heRHBzvwyf1gQxkf94NRstCUiZUnnK%2FRdnGiQ%2FekBscOi3szB0HsDZayqHFhgYL7d%2FEx5VxZn58ytPtUceZ2szKI0TCqo3yohZ5UU82Pj3a9gPJ%2Bf6tbauoAk%2F4cp%2BMT3t9rP4%2B815INpw1YUfr223DbMwWXrDg47FrzH3HLjI7OPV%2BE7mHA%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=4d1454e6df9a49141f506db3dd4b6a9badadb819abca3702b7d27b775b5398c3",
      "medium": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/v0qywgoh5hm4cbhuanu8mqdtowhr/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c?response-content-disposition=inline%3B%20filename%3D%22ibb%20revision%205%20copy.png%22%3B%20filename%2A%3DUTF-8%27%27ibb%2520revision%25205%2520copy.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQUHHHDGJL%2F20250922%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250922T212726Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEKv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIDvcnmzC5emRVk9TkwlGkmgxqUuU1y1B6dakIL7MwtAhAiBLwFrNg1QUXZfxVxbprLSkYhY0g0RZcG2P5DDexvDtVCqxBQg0EAMaDDAxMzYxOTI3NDg0OSIMJB3X4UkrhzbnGBp%2FKo4FxUD3SZ%2Baocrw5to0JIaYigWWahjq6b3fmWZhtm6qBHWoivYigXnpJtLNNk0k1NqDk4rwIRdEJuqhjbUuHalo8LzDSD8okKlg%2FyF2t6YTkGgAVGT8m6%2B28%2B%2Bef%2FSP0%2BKsLs01%2FMHFZudXcqcZpVcJQo%2B0Lis90iJ1Otz3Qw0RsWl4f6W4GIBvdodiadsdsU8Q3CEcc9ALGXzzgVoWVNQQdN5wYOL%2FdkYF0zRp0djhsiNk2jgFrKOBZUzY3CSmIZve7f8gpzgGTlJ6HRVchrBTGfEZS7aTtfc6ETaQKBT2ssqJZY0ODnzijPowkVmZqPG0RveONvE3nWPB3YPsZn5TAbNApyMmVvD18MITLly%2BqK6E0T%2FPmb5htBbf3SIORSr7IutT3Gvn3xd5K4nrv0J0utqQ1uuGR36VfV3xyuoxwqXmUds4%2FVtXUUe1TBj5Aci%2BT1%2B%2F8h8R7cs52Lvn4fcv2JCjIx3yyP5d1%2Br8UPgabsVh%2BIvIaIRJwoWpuzLktl2B751MNGvyp3AIJ8uUq9cJYKLd%2BOIzdEUiO6B7%2Bd304cipo1mZ0NCsUfw2vj4iuEVS3TJf38qMx3bDzdvDygVoVRtSUrXKMzbe%2BsLrSPAtdoZqPrklnSvtGfIOuI7fYAvIook3sC7Gse82XBW1fN%2FWqgywOEDe8DWP8BKEkX6rvZS3jvLf%2BTIXpWBMP41TqAk8fodumPzkFnxKTWhJ9Ujbt2Qqb6eB2WcaX8YzlTUJWcXxOEYyvLH6KHQJLTeVV4qflKPiu5hjQvENp3YPXv%2Ftj5JQdoysW%2BH6JdfkXEL4Km%2B2U%2FzQNIgLUp8LLX3cIhidRMDzMAEaj7m4mComw4Y%2B6AhQkYo%2F%2F7IHjpvei%2FIDMKy%2FxsYGOrIBoBtnfvzs28UoU%2B8G4olY52gZUbNHLkaKj%2BIwwFWt82Bhwe6u%2Ffl9hStE%2F3heRHBzvwyf1gQxkf94NRstCUiZUnnK%2FRdnGiQ%2FekBscOi3szB0HsDZayqHFhgYL7d%2FEx5VxZn58ytPtUceZ2szKI0TCqo3yohZ5UU82Pj3a9gPJ%2Bf6tbauoAk%2F4cp%2BMT3t9rP4%2B815INpw1YUfr223DbMwWXrDg47FrzH3HLjI7OPV%2BE7mHA%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=2d15f016dbd7958385927edc9a5ef85e04ca72b7a36770a9dc5d6965158d2c1c"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "Internet Bug Bounty",
      "twitter_handle": "",
      "website": "https://www.hackerone.com/internet-bug-bounty",
      "about": "The Internet Bug Bounty rewards security research into vulnerabilities impacting Open Source Software Projects."
    }
  },
  "has_bounty?": true,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2015-05-31T00:00:00.000Z",
  "bug_reporter_agreed_on_going_public_at": null,
  "team_member_agreed_on_going_public_at": "2015-05-31T00:00:00.000Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "http://bugs.python.org/issue24264\n\n----\n\nSeveral functions within the imageop module are vulnerable to exploitable buffer overflows due to unsafe arithmetic in check_multiply_size(). The problem exists because the check to confirm that size == product / y / x does not take remainders into account.\n\n```\nstatic int\ncheck_multiply_size(int product, int x, const char* xname, int y, const char* yname, int size)\n{\n    if ( !check_coordonnate(x, xname) )\n        return 0;\n    if ( !check_coordonnate(y, yname) )\n        return 0;\n    if ( size == (product / y) / x )\n        return 1;\n    PyErr_SetString(ImageopError, \"String has incorrect length\");\n    return 0;\n}\n```\n\nConsider a call to check_multiply_size() where product is 16, x is 1, and y is 9. In the Windows x86 release of Python 2.7.9, the division is performed using the idiv instruction:\n\n```\n0:000> dV\n        product = 0n16\n              x = 0n1\n          xname = 0x1e1205a4 \"x\"\n              y = 0n9\n          yname = 0x1e127ab8 \"y\"\n           size = 0n1\n0:000> u eip\npython27!check_multiply_size+0x25 [c:\\build27\\cpython\\modules\\imageop.c @ 53]:\n1e0330e5 f7ff            idiv    eax,edi\n1e0330e7 99              cdq\n1e0330e8 f7fe            idiv    eax,esi\n1e0330ea 3944240c        cmp     dword ptr [esp+0Ch],eax\n1e0330ee 7506            jne     python27!check_multiply_size+0x36 (1e0330f6)\n1e0330f0 b801000000      mov     eax,1\n1e0330f5 c3              ret\n1e0330f6 8b15e47e241e    mov     edx,dword ptr [python27!ImageopError (1e247ee4)]\n0:000> ?eax\nEvaluate expression: 16 = 00000010\n0:000> ?edi\nEvaluate expression: 9 = 00000009\n```\n\nWhen the first idiv instruction is executed, the result (eax) is 1 with a remainder of 7 (edx):\n\n```\n0:000> p\neax=00000001 ebx=00000000 ecx=1e127ab8 edx=00000007 esi=00000001 edi=00000009\neip=1e0330e7 esp=0027fcec ebp=00000001 iopl=0         nv up ei pl nz na po nc\ncs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00000202\npython27!check_multiply_size+0x27:\n1e0330e7 99              cdq\n0:000> ?eax\nEvaluate expression: 1 = 00000001\n0:000> ?edx\nEvaluate expression: 7 = 00000007\n```\n\nBecause size is 1, the check passes:\n\n```\nBreakpoint 4 hit\neax=00000001 ebx=00000000 ecx=1e127ab8 edx=00000000 esi=00000001 edi=00000009\neip=1e0330f0 esp=0027fcec ebp=00000001 iopl=0         nv up ei pl zr na pe nc\ncs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00000246\npython27!check_multiply_size+0x30:\n1e0330f0 b801000000      mov     eax,1\n```\n\nThis is problematic because some of the imageop functions, such as grey2rgb, utilize check_multiply_size() to check divisibility prior to copying data into a buffer. Consider a call to grey2rgb where x is 1, y is 9, and len is 16.\n\n```\nstatic PyObject *\nimageop_grey2rgb(PyObject *self, PyObject *args)\n{\n    int x, y, len, nlen; <<<<<<<< x = 1, y = 9, and len = 16.\n    unsigned char *cp;\n    unsigned char *ncp;\n    PyObject *rv;\n    int i;\n    unsigned char value;\n    int backward_compatible = imageop_backward_compatible();\n\n    if ( !PyArg_ParseTuple(args, \"s#ii\", &cp, &len, &x, &y) )\n        return 0;\n\n    if ( !check_multiply(len, x, y) ) <<<<<<<< 16 != 1 * 9, but this check still passes.\n        return 0;\n    nlen = x*y*4; <<<<<<<< 1 * 9 * 4 == 36.\n    if ( !check_multiply_size(nlen, x, \"x\", y, \"y\", 4) )\n        return 0;\n\n    rv = PyString_FromStringAndSize(NULL, nlen); <<<<<<<< This creates a buffer of length 36.\n    if ( rv == 0 )\n        return 0;\n    ncp = (unsigned char *)PyString_AsString(rv); <<<<<<<< This retrieves the buffer of length 36.\n\n    for ( i=0; i < len; i++ ) { <<<<<<<< This loop assumes that len * 4 == nlen, which is incorrect\n                                         in this case.\n        value = *cp++;\n        if (backward_compatible) {\n            VVVVVVVV Each iteration copies 4 bytes into the 36 byte buffer pointed to by ncp and \n                     advances the pointer by 4. Because len is 16, 64 bytes are ultimately copied\n                     into the buffer, leading to an exploitable buffer overflow condition.\n            * (Py_UInt32 *) ncp = (Py_UInt32) value | ((Py_UInt32) value << 8 ) | ((Py_UInt32) value << 16);\n            ncp += 4;\n        } else {\n            *ncp++ = 0;\n            *ncp++ = value;\n            *ncp++ = value;\n            *ncp++ = value;\n        }\n    }\n    return rv;\n}\n```\n\nWhen the call completes, memory has been corrupted:\n\n```\n0:000> g\n(12f4.640): Access violation - code c0000005 (first chance)\nFirst chance exceptions are reported before any exception handling.\nThis exception may be expected and handled.\neax=00444444 ebx=00000001 ecx=1e201d98 edx=00303030 esi=1e201d98 edi=1e201d98\neip=1e031fc6 esp=0027fe7c ebp=00000002 iopl=0         nv up ei ng nz ac pe cy\ncs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00010297\npython27!update_refs+0x6:\n1e031fc6 8b5010          mov     edx,dword ptr [eax+10h] ds:002b:00444454=????????\n0:000> g\n(12f4.640): Access violation - code c0000005 (!!! second chance !!!)\neax=00444444 ebx=00000001 ecx=1e201d98 edx=00303030 esi=1e201d98 edi=1e201d98\neip=1e031fc6 esp=0027fe7c ebp=00000002 iopl=0         nv up ei ng nz ac pe cy\ncs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00010297\npython27!update_refs+0x6:\n1e031fc6 8b5010          mov     edx,dword ptr [eax+10h] ds:002b:00444454=????????\n```\n\nDuring fuzzing, DEP access violations were encountered, so it should be assumed that this vulnerability can be exploited to achieve arbitrary code execution. To fix this vulnerability, it is recommended that check_multiply_size() confirm divisibility.\n",
  "bounty_amount": "1000.0",
  "formatted_bounty": "$1,000",
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 1,
  "voters": [
    "shivammusic"
  ],
  "structured_scope": {
    "databaseId": 84536,
    "asset_type": "OTHER",
    "asset_identifier": "Python (Legacy)",
    "max_severity": "none"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
