{
  "id": 341634,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8zNDE2MzQ=",
  "url": "https://hackerone.com/reports/341634",
  "title": "Invalid URL parsing '#'",
  "state": "Closed",
  "substate": "informative",
  "severity_rating": "none",
  "readable_substate": "Informative",
  "created_at": "2018-04-21T19:23:14.376Z",
  "submitted_at": "2018-04-21T19:23:14.376Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "mrtc0",
    "url": "/mrtc0",
    "profile_picture_urls": {
      "small": "https://hackerone.com/rails/active_storage/representations/redirect/eyJfcmFpbHMiOnsiZGF0YSI6MTQ5MDQyMywicHVyIjoiYmxvYl9pZCJ9fQ==--49f668e27ce2be9ab5b742632b7da1583b5614b4/eyJfcmFpbHMiOnsiZGF0YSI6eyJmb3JtYXQiOiJwbmciLCJncmF2aXR5IjoiQ2VudGVyIiwicmVzaXplIjoiNjJ4NjJeIiwiY3JvcCI6IjYyeDYyKzArMCJ9LCJwdXIiOiJ2YXJpYXRpb24ifX0=--a4d91faed3dff6024dfc1a7b7f8ccc6b45e38396/5842353.png"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 7724,
    "url": "https://hackerone.com/ruby",
    "handle": "ruby",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/007/724/bb067434deef370d6a0b16c2cbbc030b57c75e92_original.png/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/007/724/bb067434deef370d6a0b16c2cbbc030b57c75e92_original.png/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "Ruby",
      "twitter_handle": "",
      "website": "https://www.ruby-lang.org",
      "about": "A Programmer's Best Friend"
    }
  },
  "has_bounty?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2018-05-01T14:47:21.018Z",
  "bug_reporter_agreed_on_going_public_at": "2018-05-01T14:47:20.924Z",
  "team_member_agreed_on_going_public_at": "2018-04-25T06:00:28.700Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "`URI` is not correctly parsed when \"#\" is included in the URL.\nTherefore, could instead be tricked into connecting to a different host. \n\n### PoC\n\n```bash\n$ ruby --version\nruby 2.4.1p111 (2017-03-22 revision 58053) [x86_64-darwin16]\n```\n\n```ruby\nrequire 'uri'\nuri = URI(\"http://www.example.com#@test.evil.com/test\")\n# => #<URI::HTTP http://www.example.com.evil.com/test>\np uri.hostname\n# => \"www.example.com.evil.com\"\n```\n\nBut, does not happen if use single quotes,  like this.\n\n```ruby\nuri = URI.parse('http://www.example.com#@evil.com/test')\np uri.hostname\n# => www.example.com\n```\n\nHowever, in RFC 3986 it is defined that after \"#\" it is interpreted as a fragment.\nTherefore, this behavior is contrary to the user's intuition and easy to overlook.\n\n## Impact\n\nThe user may connect to an unintended host.",
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 0,
  "voters": [],
  "severity": {
    "rating": "none",
    "author_type": "Team"
  },
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
