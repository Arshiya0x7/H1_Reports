{
  "id": 2352676,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8yMzUyNjc2",
  "url": "https://hackerone.com/reports/2352676",
  "title": "cookie is sent on redirect",
  "state": "Closed",
  "substate": "not-applicable",
  "severity_rating": "medium",
  "readable_substate": "N/A",
  "created_at": "2024-02-02T09:26:49.804Z",
  "submitted_at": "2024-02-02T09:26:50.071Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "iylz",
    "url": "/iylz",
    "profile_picture_urls": {
      "small": "/assets/avatars/default-14ffa99f59cd01423c64904352cc130ffcb6a802eadfd11777a54485749e60f2.png"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 35663,
    "url": "https://hackerone.com/curl",
    "handle": "curl",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/035/663/2faf4c279d437d64bfda6d23d62ce1833813a4d9_original.png/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/035/663/2faf4c279d437d64bfda6d23d62ce1833813a4d9_original.png/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "curl",
      "twitter_handle": "",
      "website": "https://curl.se",
      "about": "cURL is an Open Source project providing a library and command-line tool doing internet transfers"
    }
  },
  "has_bounty?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2024-03-28T08:56:28.173Z",
  "bug_reporter_agreed_on_going_public_at": "2024-03-28T08:52:03.321Z",
  "team_member_agreed_on_going_public_at": "2024-03-28T08:56:27.904Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "## Summary:\n[add summary of the vulnerability]\n\nCurl can be coaxed to leak user credentials to third-party host by issuing HTTP redirect.\n\n## Steps To Reproduce:\n[add details for how we can reproduce the issue]\n\n  1.Create a 302.php file, such as:\n```\n<?php\nheader(\"Location: http://a.com:8000\");\n?>\n```\nAdd the 2 record in the /etc/hosts file:  \n```\n127.0.0.1 a.com\n127.0.0.1 b.com\n```\n 2.  curl -vv --cookie 'aaa=2222'  http://b.com/302a.php -L\nThe redirect will be followed, and the confidential headers cookie will be sent to a.com:\n```\n# ./curl -V\ncurl 8.6.0 (x86_64-pc-linux-gnu) libcurl/8.6.0 OpenSSL/1.0.2k-fips zlib/1.2.7\nRelease-Date: 2024-01-31\nProtocols: dict file ftp ftps gopher gophers http https imap imaps ipfs ipns mqtt pop3 pop3s rtsp smb smbs smtp smtps telnet tftp\nFeatures: alt-svc AsynchDNS HSTS HTTPS-proxy IPv6 Largefile libz NTLM SSL threadsafe UnixSockets\n# curl -vv --cookie 'aaa=2222'  http://b.com/302a.php -L\n* About to connect() to b.com port 80 (#0)\n*   Trying 127.0.0.1...\n* Connected to b.com (127.0.0.1) port 80 (#0)\n> GET /302a.php HTTP/1.1\n> User-Agent: curl/7.29.0\n> Host: b.com\n> Accept: */*\n> Cookie: aaa=2222\n>\n< HTTP/1.1 302 Found\n< Date: Fri, 02 Feb 2024 08:49:12 GMT\n< Server: Apache/2.4.6 (CentOS) PHP/5.4.16\n< X-Powered-By: PHP/5.4.16\n< Location: http://a.com:8000\n< Content-Length: 0\n< Content-Type: text/html; charset=UTF-8\n<\n* Connection #0 to host b.com left intact\n* Issue another request to this URL: 'http://a.com:8000'\n* About to connect() to a.com port 8000 (#1)\n*   Trying 127.0.0.1...\n* Connected to a.com (127.0.0.1) port 8000 (#1)\n> GET / HTTP/1.1\n> User-Agent: curl/7.29.0\n> Host: a.com:8000\n> Accept: */*\n> Cookie: aaa=2222\n```\n\nThis does not comply with RFC regulations and is inconsistent with browser behavior, and RFC also states that redirection requires deleting cookies.\nhttps://www.ietf.org/rfc/rfc9110.txt \n```\n3.  Consider removing header fields that were not automatically\n       generated by the implementation (i.e., those present in the\n       request because they were added by the calling context) where\n       there are security implications; this includes but is not limited\n       to Authorization and Cookie.\n```\n\n## Supporting Material/References:\n[list any additional material (e.g. screenshots, logs, etc.)]\n\n  * [attachment / reference]\nhttps://www.ietf.org/rfc/rfc9110.txt\n\n## Impact\n\nLeak of confidential information (user credentials).",
  "weakness": {
    "id": 87,
    "name": "Insufficiently Protected Credentials"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 30,
  "voters": [
    "0xdead4f",
    "kichukishor",
    "obx03",
    "hariharasuthan1624",
    "sushant102",
    "ci5h3r",
    "francisco08",
    "princessmalika",
    "gk844",
    "edra",
    "and 20 more..."
  ],
  "severity": {
    "rating": "medium",
    "author_type": "User"
  },
  "structured_scope": {
    "databaseId": 18844,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "https://github.com/curl/curl",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
