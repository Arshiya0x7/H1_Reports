{
  "id": 155657,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNTU2NTc=",
  "url": "https://hackerone.com/reports/155657",
  "title": "Arbitrary Code Injection in ownCloud’s Windows Client",
  "state": "Closed",
  "substate": "resolved",
  "readable_substate": "Resolved",
  "created_at": "2016-07-31T19:00:09.481Z",
  "submitted_at": "2016-07-31T19:00:09.481Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "fbogner",
    "url": "/fbogner",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/097/209/c6a39a3f503e5915ea2ebf90fc4f5b2ca45ef78e_original.png/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 3059,
    "url": "https://hackerone.com/owncloud",
    "handle": "owncloud",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/003/059/d31dc64427bbbf2e428a0b0b97bce59b98d2ba0d_original.png/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/003/059/d31dc64427bbbf2e428a0b0b97bce59b98d2ba0d_original.png/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "paused",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "ownCloud",
      "twitter_handle": "ownCloud",
      "website": "https://www.owncloud.com",
      "about": "ownCloud GmbH is the company behind the ownCloud Project - the most downloaded open source project for data and file sync, share and view."
    }
  },
  "has_bounty?": true,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2016-11-23T18:45:41.271Z",
  "bug_reporter_agreed_on_going_public_at": "2016-10-24T18:45:33.607Z",
  "team_member_agreed_on_going_public_at": null,
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "The current ownCloud Windows Desktop client is prone to an arbitrary code injection vulnerability.\n\nThe underlying issue is that the ownCloud desktop client tries to load QT extensions from C:\\usr\\i686-w64-mingw32\\sys-root\\mingw\\lib\\qt5\\plugins.\n\nAs any authenticated user on Windows is allowed to create new folders within C:, the expected folder structure can be created.\n\nWhat that means is that a local attacker can create a malicious QT extensions that gets automatically loaded on the next launch of the ownCloud Desktop client.\n\nTo verify the issue I first tried to simply create a new QT imageformats plugin. However I failed! Have you ever tried to install QT? So I decided to simply modify an existing DLL.\n\nHence, I used Hopper to disassemble the qwindows.dll platform’s library to learn more about its entry points. With that knowledge I planned to modify the DLL so that it shows a simply message box. The necessary shellcode was created with Metasploit:\n\nmsfvenom -a x86 --platform windows -p windows/messagebox TEXT=\"DLL Loaded\" EXTIFUNC=process -f raw > shellcode\ncat shellcode |xxd -p\n\nI then overwrote some bytes after one of the previously identified DLL entry points with the shellcode.\n\nAfter placing the modified payload DLL into C:\\usr\\i686-w64-mingw32\\sys-root\\mingw\\lib\\qt5\\plugins\\platforms the shellcode got executed after launching the ownCloud desktop client.\n\nPlease see the attached PDF for some images documenting the process.\nFurthermore I created a private screen capture: https://owncloud.bogner.sh/s/Ik8AYJ9FfY5Rkyq",
  "weakness": {
    "id": 58,
    "name": "Command Injection - Generic"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 108748,
      "file_name": "Arbitrary_Code_Injection_in_ownCloud_s_Windows_Client___bogner.pdf",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/108/748/565e07f2044a4e5fc528185cc13379041ea120e6/Arbitrary_Code_Injection_in_ownCloud_s_Windows_Client___bogner.pdf?response-content-disposition=attachment%3B%20filename%3D%22Arbitrary_Code_Injection_in_ownCloud_s_Windows_Client___bogner.pdf%22%3B%20filename%2A%3DUTF-8%27%27Arbitrary_Code_Injection_in_ownCloud_s_Windows_Client___bogner.pdf&response-content-type=application%2Fpdf&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ6UYDYGUM%2F20250922%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250922T073840Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIBz8FhWOnB1FOlYc0y8zFudkVb3PRtWRI4bNEB7EVdXGAiEA3MOTzKSd0I2M4y514TLCCsfWSJWIMRCGTZCOM%2FnCoF0qsQUIKBADGgwwMTM2MTkyNzQ4NDkiDMIsrZQJ79l5vCiGjSqOBVTObvPb0ZMhf%2F3e%2FB%2Bd%2Bx7p6SLPmcAc1l5UTEkHGamtiMUVSduYTkriHVZ5WUqGwkzyCRg8RjWkP9XMmE1Yk67u%2Fh9J4VATeKxgrzo%2F%2FgZ%2Fhad8YOyyLwbZSEMSpW9Qd5S7ZgI5kBASWxz7ztpOjLcFjNx2Nia6ktmcn0LIJbxLRL3sTZruIucDkUT5kvSFaVHPGDHKbSCT6dp17BBa9UFiJxf6YbkQ3CtWsRwZXfajtr1obUdBIe8rqtd8XACDDWw8McXV95jCYcI2jkLnfM9F4N4Mb1c2Tw4VHUk%2FtrL%2FzWHcIMFdeKNgW%2BwHkp4tqfqMGBGBemHuh%2F%2BQkDHABaqEqckOK8vWnPezPXjfnyL0vCjV%2BKzMhAyq7%2F5Mj1yRvH1f2YfZvCSmwRdyYAb4pB%2BabKI3B5ekFtjA8epCzpI38X4hZMaPEMg1xKmDt31XdPc8JAIFZhHvJfcdbWInlRJvrdP%2BwS%2FvyO%2FadT2rMyz3748fYxoziFQc2UAceGyVDpcPCZePCfl08OxFwQKmAnT3ugOzAHI%2Fe3TdU2J2hIUUAFvoUF9p9LYhgSrZSUO8kXPGmeHhdjkesRnrbaxqSk%2FdXvB4EFuraWUErXppql4UrDWIo0QR4mhIMp163MzgPiQTehdSGoflngw1ZHXeqdW3miI%2BbXN%2Bp%2B327vqhAl2BduEEzYCJS%2Bp9wvpTuTP1XejzxG4ao9CG5GQDLB6KTRw9zXf1v3uFDVBV4N4BgPI8GBy8AmFpLnz0uTe270aiusYKLIlTjG8Zyt3FOgNs3KShgKkT6jsPCOZ0O9QdMvce%2B5A61SGvHm4Jm%2FK6%2BRQTYpcDAzA%2B3QDD1tcrAddoFGQ1ENbZuQm6t5jMTGdGrzC%2B4MPGBjqxAW2cCyBJNmqTO030Fap34IQfw5RcSB4KLzP%2BWu2Ax0uC6UISjJEKActyoMx7LA2NtV2Hij9xBCTGZws048t3iXfhzfQvQqdttCZvDQ3%2B4IIzAByi4T0ZtRnP%2FFZFdYGuQnwwLSgecXqcFkLA33TJwD12EYynPc7ELjB5gBWg7sc71va6QeJV0Uv64%2B%2BIA%2FSMaW0Aud8vQB5EWAyNRDn1ncZfOu3goK0yIbAJeQWBmH%2BJtg%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=01122525aedc2f8599c9d0e505d7c2fcd3a2dc3fbb5fc06a3c5113263203e418",
      "file_size": 2086093,
      "type": "application/pdf",
      "moderated": null
    }
  ],
  "allow_singular_disclosure_at": "2016-11-23T18:45:33.646Z",
  "allow_singular_disclosure_after": -278599986.9921524,
  "singular_disclosure_allowed": true,
  "vote_count": 16,
  "voters": [
    "flashdisk",
    "rj01",
    "fbogner",
    "xsam",
    "pappan",
    "brye",
    "madrobot",
    "eveeez",
    "khizer47",
    "m16",
    "and 6 more..."
  ],
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
