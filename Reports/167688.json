{
  "id": 167688,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNjc2ODg=",
  "url": "https://hackerone.com/reports/167688",
  "title": "msilib.OpenDatabase Type Confusion",
  "state": "Closed",
  "substate": "resolved",
  "readable_substate": "Resolved",
  "created_at": "2016-09-12T04:21:54.616Z",
  "submitted_at": "2016-09-12T04:21:54.616Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "johnleitch",
    "url": "/johnleitch",
    "profile_picture_urls": {
      "small": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/dvpp7edplsutj226qs3pafpzimod/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1?response-content-disposition=inline%3B%20filename%3D%22FWS3.png%22%3B%20filename%2A%3DUTF-8%27%27FWS3.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ224LELOS%2F20250922%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250922T080720Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIA3aeeU%2BGXh7BnyZ%2FnfW9OrHLYwD%2Bv3Cme1Mcelj2o%2FdAiBo3jaEUqAbbc6XwDQ1ekZEVeCJmXfKbO9w8Jo5N%2FPl9yqyBQgnEAMaDDAxMzYxOTI3NDg0OSIM05%2B9iwi28sxdY%2BX0Ko8FjACqYpGZNZrzeSHg4ouK4qdf3m%2FXOrXAsRB%2FLbWpx17sUeyicWV8Ap98Cof67HmbwbFAWLCj8bV25N%2BFxoBvOvnKv6r03CttTzyx6T6gQ%2BVh2x35N%2Ffy3zFe8TP%2FvxjxnhwJCoVjB3rX8Jn70j34KVuVqopder57YGcuw7QFR5Su31ebIAcuVvk7NeKjcfyXUSO7gbqXGF4B88%2BGkFoQBDFELyf6RgfD363x%2B69v57eUKUZ166tq5%2BwhEeajKJKtKwE%2FNszkNXQ7el%2F0nwzuwGp0DPre08wnuNi60FRj8Yaxym2u%2BaKVLddFj%2BmuF8o2kn1fnehxmzTJ%2Bdldy2eXdpIILmMbFpG27iwHqcIgsCHJ0UR5op2PpNhXcAsIC4urWHMY8786szq00GLF%2BBANdMSDTbIBPDTvhBBNcoyrk5P18sT0w6mdwEFAIdiGOB1u1uia7VZh%2BfAEQQqikx68UQJFJelspdB1B%2B49ylzqA4bCJ8Ddt00dmwGyyMzmO3d5SRDBcRLhJcfK%2BA32UeHcwCtG%2BFa2CfMZlCRq0DGqXmzvULjOxxKDctz0jbPGteVMBK7bhTVdMi8qZ34LmHBwJxyr3M3o%2Bn05j1X6XHm9PFGvSMwCe86Z%2FD3WIxqRpFCmK2FNGLG%2Fgu9Rz1rhBqcVjdw0%2BuF9gB6eQUDS5PM6NySy16i8OAWtyW8%2BizByTkxE3qUsWoQWBLTBn2n4vb7lWYSO9PF4J3h12Db4qJcbX6K1UHTo2Fzt6JR9ACXmgKhHynfJGVvmOeN1nr1036HA3PB795jNsp%2Fl1TObkcZXrW05526dKFTgmC%2BEgFpzi%2Bjd6BVe4%2BWuvD6k21ZkAelTDqlc9kJB69ttQwjkSKnRKTD4z8PGBjqyAWUnOOErmzLKaYcGmllCLHSTZjIPx8bsdo4%2FfrCcBsi%2FagEXjJQv5AyRiuf7TFO4lTvxwd1rW%2BLaGBCMf3CBhDpn2RWBiR1QKX%2FVCAnvPFkiAV4oBLFk%2Fj5CGkDVkK8kqYlEcWnz19KWBAmeRdxqy0tTwPmmKJhIyVXQZ00jpYRtFrKcwaiQtWgCMEpi4eXT%2F22Bn02CkaNLAa2zk2xfvPmqGd8wzKH3JuQ93zVZlEQRpyc%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=c11ad43c289d8a07d2582d1330508cb30b9f3fdc358db1dfed3c5ade0e9ee167"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 54349,
    "url": "https://hackerone.com/ibb",
    "handle": "ibb",
    "profile_picture_urls": {
      "small": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/v0qywgoh5hm4cbhuanu8mqdtowhr/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1?response-content-disposition=inline%3B%20filename%3D%22ibb%20revision%205%20copy.png%22%3B%20filename%2A%3DUTF-8%27%27ibb%2520revision%25205%2520copy.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ224LELOS%2F20250922%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250922T080720Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIA3aeeU%2BGXh7BnyZ%2FnfW9OrHLYwD%2Bv3Cme1Mcelj2o%2FdAiBo3jaEUqAbbc6XwDQ1ekZEVeCJmXfKbO9w8Jo5N%2FPl9yqyBQgnEAMaDDAxMzYxOTI3NDg0OSIM05%2B9iwi28sxdY%2BX0Ko8FjACqYpGZNZrzeSHg4ouK4qdf3m%2FXOrXAsRB%2FLbWpx17sUeyicWV8Ap98Cof67HmbwbFAWLCj8bV25N%2BFxoBvOvnKv6r03CttTzyx6T6gQ%2BVh2x35N%2Ffy3zFe8TP%2FvxjxnhwJCoVjB3rX8Jn70j34KVuVqopder57YGcuw7QFR5Su31ebIAcuVvk7NeKjcfyXUSO7gbqXGF4B88%2BGkFoQBDFELyf6RgfD363x%2B69v57eUKUZ166tq5%2BwhEeajKJKtKwE%2FNszkNXQ7el%2F0nwzuwGp0DPre08wnuNi60FRj8Yaxym2u%2BaKVLddFj%2BmuF8o2kn1fnehxmzTJ%2Bdldy2eXdpIILmMbFpG27iwHqcIgsCHJ0UR5op2PpNhXcAsIC4urWHMY8786szq00GLF%2BBANdMSDTbIBPDTvhBBNcoyrk5P18sT0w6mdwEFAIdiGOB1u1uia7VZh%2BfAEQQqikx68UQJFJelspdB1B%2B49ylzqA4bCJ8Ddt00dmwGyyMzmO3d5SRDBcRLhJcfK%2BA32UeHcwCtG%2BFa2CfMZlCRq0DGqXmzvULjOxxKDctz0jbPGteVMBK7bhTVdMi8qZ34LmHBwJxyr3M3o%2Bn05j1X6XHm9PFGvSMwCe86Z%2FD3WIxqRpFCmK2FNGLG%2Fgu9Rz1rhBqcVjdw0%2BuF9gB6eQUDS5PM6NySy16i8OAWtyW8%2BizByTkxE3qUsWoQWBLTBn2n4vb7lWYSO9PF4J3h12Db4qJcbX6K1UHTo2Fzt6JR9ACXmgKhHynfJGVvmOeN1nr1036HA3PB795jNsp%2Fl1TObkcZXrW05526dKFTgmC%2BEgFpzi%2Bjd6BVe4%2BWuvD6k21ZkAelTDqlc9kJB69ttQwjkSKnRKTD4z8PGBjqyAWUnOOErmzLKaYcGmllCLHSTZjIPx8bsdo4%2FfrCcBsi%2FagEXjJQv5AyRiuf7TFO4lTvxwd1rW%2BLaGBCMf3CBhDpn2RWBiR1QKX%2FVCAnvPFkiAV4oBLFk%2Fj5CGkDVkK8kqYlEcWnz19KWBAmeRdxqy0tTwPmmKJhIyVXQZ00jpYRtFrKcwaiQtWgCMEpi4eXT%2F22Bn02CkaNLAa2zk2xfvPmqGd8wzKH3JuQ93zVZlEQRpyc%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=0b73cf5ad7219f9ddd3fe10dc2896d82bc00c4501828937f611c29d6f2ac3d74",
      "medium": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/v0qywgoh5hm4cbhuanu8mqdtowhr/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c?response-content-disposition=inline%3B%20filename%3D%22ibb%20revision%205%20copy.png%22%3B%20filename%2A%3DUTF-8%27%27ibb%2520revision%25205%2520copy.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ224LELOS%2F20250922%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250922T080720Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIA3aeeU%2BGXh7BnyZ%2FnfW9OrHLYwD%2Bv3Cme1Mcelj2o%2FdAiBo3jaEUqAbbc6XwDQ1ekZEVeCJmXfKbO9w8Jo5N%2FPl9yqyBQgnEAMaDDAxMzYxOTI3NDg0OSIM05%2B9iwi28sxdY%2BX0Ko8FjACqYpGZNZrzeSHg4ouK4qdf3m%2FXOrXAsRB%2FLbWpx17sUeyicWV8Ap98Cof67HmbwbFAWLCj8bV25N%2BFxoBvOvnKv6r03CttTzyx6T6gQ%2BVh2x35N%2Ffy3zFe8TP%2FvxjxnhwJCoVjB3rX8Jn70j34KVuVqopder57YGcuw7QFR5Su31ebIAcuVvk7NeKjcfyXUSO7gbqXGF4B88%2BGkFoQBDFELyf6RgfD363x%2B69v57eUKUZ166tq5%2BwhEeajKJKtKwE%2FNszkNXQ7el%2F0nwzuwGp0DPre08wnuNi60FRj8Yaxym2u%2BaKVLddFj%2BmuF8o2kn1fnehxmzTJ%2Bdldy2eXdpIILmMbFpG27iwHqcIgsCHJ0UR5op2PpNhXcAsIC4urWHMY8786szq00GLF%2BBANdMSDTbIBPDTvhBBNcoyrk5P18sT0w6mdwEFAIdiGOB1u1uia7VZh%2BfAEQQqikx68UQJFJelspdB1B%2B49ylzqA4bCJ8Ddt00dmwGyyMzmO3d5SRDBcRLhJcfK%2BA32UeHcwCtG%2BFa2CfMZlCRq0DGqXmzvULjOxxKDctz0jbPGteVMBK7bhTVdMi8qZ34LmHBwJxyr3M3o%2Bn05j1X6XHm9PFGvSMwCe86Z%2FD3WIxqRpFCmK2FNGLG%2Fgu9Rz1rhBqcVjdw0%2BuF9gB6eQUDS5PM6NySy16i8OAWtyW8%2BizByTkxE3qUsWoQWBLTBn2n4vb7lWYSO9PF4J3h12Db4qJcbX6K1UHTo2Fzt6JR9ACXmgKhHynfJGVvmOeN1nr1036HA3PB795jNsp%2Fl1TObkcZXrW05526dKFTgmC%2BEgFpzi%2Bjd6BVe4%2BWuvD6k21ZkAelTDqlc9kJB69ttQwjkSKnRKTD4z8PGBjqyAWUnOOErmzLKaYcGmllCLHSTZjIPx8bsdo4%2FfrCcBsi%2FagEXjJQv5AyRiuf7TFO4lTvxwd1rW%2BLaGBCMf3CBhDpn2RWBiR1QKX%2FVCAnvPFkiAV4oBLFk%2Fj5CGkDVkK8kqYlEcWnz19KWBAmeRdxqy0tTwPmmKJhIyVXQZ00jpYRtFrKcwaiQtWgCMEpi4eXT%2F22Bn02CkaNLAa2zk2xfvPmqGd8wzKH3JuQ93zVZlEQRpyc%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=55fc7cb895854efccaaf358c07c5c97f8bbbd0b8047c483ad6145c99c787dfca"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "Internet Bug Bounty",
      "twitter_handle": "",
      "website": "https://www.hackerone.com/internet-bug-bounty",
      "about": "The Internet Bug Bounty rewards security research into vulnerabilities impacting Open Source Software Projects."
    }
  },
  "has_bounty?": true,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2016-09-20T05:38:52.437Z",
  "bug_reporter_agreed_on_going_public_at": "2016-09-20T05:37:29.448Z",
  "team_member_agreed_on_going_public_at": "2016-09-20T05:38:52.358Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "I have reported a vulnerability in Python that is now fixed. My patch was accepted with minor changes.\n\n---\n\nhttp://bugs.python.org/issue24594\n\nThe msilib.OpenDatabase method suffers from a type confusion vulnerability caused by the behavior of MsiOpenDatabase(), the underlying win32 function utilized. This is due to the unorthodox handling of the szPersist parameter: when an MSIDBOPEN_* value is passed, it is treated as a predefined persistence mode. However, when a larger value is passed, it is treated as a string pointer, which is used as the path to a new file.\n\nBecause the Python method msilib.OpenDatabase passes its persist parameter through to MsiOpenDatabase, it may be possible for an attacker to trigger the type confusion bug should the seemingly innocuous persist parameter be exposed as attack surface. This could have a few consequences: \n\n1) An attacker might be able to leverage this vulnerability to probe for valid addresses, which could then be used in another exploit to bypass ASLR/DEP.\n2) An attacker might be able to leverage this vulnerability to dereference aribtrary values in memory, disclosing secrets. \n3) An attacker may be able to spray memory with specially crafted string values, then leverage this vulnerability to pass one of the values as a persist string. Because this would lead to the creation of an MSI file in a location now controlled by the attacker, it could potentially be exploited to achieve remote code execution.\n\nA Python script that demonstrates the vulnerability is as follows:\n\nimport msilib\nmsilib.OpenDatabase(\"\",0x41414141)\n\nAnd it produces the following exception:\n\n0:000> r\neax=41414141 ebx=00000000 ecx=0027f8c0 edx=41414142 esi=0027f8c0 edi=00000000\neip=757252aa esp=0027f874 ebp=0027f89c iopl=0         nv up ei pl zr na pe nc\ncs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00010246\nKERNELBASE!lstrlenA+0x1a:\n757252aa 8a08            mov     cl,byte ptr [eax]          ds:002b:41414141=??\n0:000> !analyze -v -nodb\n*******************************************************************************\n*                                                                             *\n*                        Exception Analysis                                   *\n*                                                                             *\n*******************************************************************************\n\n\nFAULTING_IP: \nKERNELBASE!lstrlenA+1a\n757252aa 8a08            mov     cl,byte ptr [eax]\n\nEXCEPTION_RECORD:  ffffffff -- (.exr 0xffffffffffffffff)\nExceptionAddress: 757252aa (KERNELBASE!lstrlenA+0x0000001a)\n   ExceptionCode: c0000005 (Access violation)\n  ExceptionFlags: 00000000\nNumberParameters: 2\n   Parameter[0]: 00000000\n   Parameter[1]: 41414141\nAttempt to read from address 41414141\n\nCONTEXT:  00000000 -- (.cxr 0x0;r)\neax=41414141 ebx=00000000 ecx=0027f8c0 edx=41414142 esi=0027f8c0 edi=00000000\neip=757252aa esp=0027f874 ebp=0027f89c iopl=0         nv up ei pl zr na pe nc\ncs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00010246\nKERNELBASE!lstrlenA+0x1a:\n757252aa 8a08            mov     cl,byte ptr [eax]          ds:002b:41414141=??\n\nFAULTING_THREAD:  00000d38\n\nPROCESS_NAME:  python.exe\n\nERROR_CODE: (NTSTATUS) 0xc0000005 - The instruction at 0x%08lx referenced memory at 0x%08lx. The memory could not be %s.\n\nEXCEPTION_CODE: (NTSTATUS) 0xc0000005 - The instruction at 0x%08lx referenced memory at 0x%08lx. The memory could not be %s.\n\nEXCEPTION_PARAMETER1:  00000000\n\nEXCEPTION_PARAMETER2:  41414141\n\nREAD_ADDRESS:  41414141 \n\nFOLLOWUP_IP: \nmsi!CApiConvertString::operator unsigned short const *+1b1d\n622e1fa1 40              inc     eax\n\nNTGLOBALFLAG:  70\n\nAPPLICATION_VERIFIER_FLAGS:  0\n\nAPP:  python.exe\n\nANALYSIS_VERSION: 6.3.9600.17029 (debuggers(dbg).140219-1702) x86fre\n\nBUGCHECK_STR:  APPLICATION_FAULT_INVALID_POINTER_READ_FILL_PATTERN_41414141\n\nPRIMARY_PROBLEM_CLASS:  INVALID_POINTER_READ_FILL_PATTERN_41414141\n\nDEFAULT_BUCKET_ID:  INVALID_POINTER_READ_FILL_PATTERN_41414141\n\nLAST_CONTROL_TRANSFER:  from 622e1fa1 to 757252aa\n\nSTACK_TEXT:  \n0027f89c 622e1fa1 41414141 41414141 623e22d0 KERNELBASE!lstrlenA+0x1a\n0027fcfc 1d162217 01c54334 41414141 0027fd10 msi!CApiConvertString::operator unsigned short const *+0x1b1d\n0027fd18 1e0aafd7 00000000 01d86940 01d7ea08 _msi!msiopendb+0x37\n0027fd30 1e0edd10 01d7ea08 01d86940 00000000 python27!PyCFunction_Call+0x47\n0027fd5c 1e0f017a 0027fdb4 01c86b18 01c86b18 python27!call_function+0x2b0\n0027fdcc 1e0f1150 01cb4030 00000000 01c86b18 python27!PyEval_EvalFrameEx+0x239a\n0027fe00 1e0f11b2 01c86b18 01cb4030 01c8aa50 python27!PyEval_EvalCodeEx+0x690\n0027fe2c 1e11707a 01c86b18 01c8aa50 01c8aa50 python27!PyEval_EvalCode+0x22\n0027fe44 1e1181c5 01d43a20 01c8aa50 01c8aa50 python27!run_mod+0x2a\n0027fe64 1e118760 68e87408 003f2e93 00000101 python27!PyRun_FileExFlags+0x75\n0027fea4 1e1190d9 68e87408 003f2e93 00000001 python27!PyRun_SimpleFileExFlags+0x190\n0027fec0 1e038d35 68e87408 003f2e93 00000001 python27!PyRun_AnyFileExFlags+0x59\n0027ff3c 1d00116d 00000002 003f2e70 003f1940 python27!Py_Main+0x965\n0027ff80 75847c04 7ffde000 75847be0 0c2f39c0 python!__tmainCRTStartup+0x10f\n0027ff94 77c9b90f 7ffde000 0e681648 00000000 KERNEL32!BaseThreadInitThunk+0x24\n0027ffdc 77c9b8da ffffffff 77c806e0 00000000 ntdll!__RtlUserThreadStart+0x2f\n0027ffec 00000000 1d001314 7ffde000 00000000 ntdll!_RtlUserThreadStart+0x1b\n\n\nSTACK_COMMAND:  .cxr 0x0 ; kb\n\nSYMBOL_STACK_INDEX:  1\n\nSYMBOL_NAME:  msi!CApiConvertString::operator unsigned short const *+1b1d\n\nFOLLOWUP_NAME:  MachineOwner\n\nMODULE_NAME: msi\n\nIMAGE_NAME:  msi.dll\n\nDEBUG_FLR_IMAGE_TIMESTAMP:  5450468f\n\nFAILURE_BUCKET_ID:  INVALID_POINTER_READ_FILL_PATTERN_41414141_c0000005_msi.dll!CApiConvertString::operator_unsigned_short_const_*\n\nBUCKET_ID:  APPLICATION_FAULT_INVALID_POINTER_READ_FILL_PATTERN_41414141_msi!CApiConvertString::operator_unsigned_short_const_*+1b1d\n\nANALYSIS_SOURCE:  UM\n\nFAILURE_ID_HASH_STRING:  um:invalid_pointer_read_fill_pattern_41414141_c0000005_msi.dll!capiconvertstring::operator_unsigned_short_const_*\n\nFAILURE_ID_HASH:  {11693fba-32c4-0880-2440-574cbd780159}\n\nFollowup: MachineOwner\n---------\n\nTo fix the issue, msiopendb() should perform whitelist validation of the persist value to confirm that it is a valid MSIDBOPEN_* constant. A proposed patch is attached.",
  "bounty_amount": "1000.0",
  "formatted_bounty": "$1,000",
  "weakness": {
    "id": 70,
    "name": "Code Injection"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2016-10-20T05:37:29.583Z",
  "allow_singular_disclosure_after": -281586590.7609253,
  "singular_disclosure_allowed": true,
  "vote_count": 1,
  "voters": [
    "dyabla"
  ],
  "structured_scope": {
    "databaseId": 84536,
    "asset_type": "OTHER",
    "asset_identifier": "Python (Legacy)",
    "max_severity": "none"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
