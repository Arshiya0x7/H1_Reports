{
  "id": 1095612,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xMDk1NjEy",
  "url": "https://hackerone.com/reports/1095612",
  "title": "Node Validation Admission does not observe all oldObject fields",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2021-02-04T16:40:22.095Z",
  "submitted_at": "2021-02-04T16:40:22.115Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "ariellima",
    "url": "/ariellima",
    "profile_picture_urls": {
      "small": "/assets/avatars/default-14ffa99f59cd01423c64904352cc130ffcb6a802eadfd11777a54485749e60f2.png"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 39386,
    "url": "https://hackerone.com/kubernetes",
    "handle": "kubernetes",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/039/386/486f4380e09776d05a912ca9f46be23f72fe8197_original.png/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/039/386/486f4380e09776d05a912ca9f46be23f72fe8197_original.png/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "Kubernetes",
      "twitter_handle": "kubernetesio",
      "website": "https://kubernetes.io/",
      "about": ""
    }
  },
  "has_bounty?": true,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": true,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2021-09-05T23:17:03.481Z",
  "bug_reporter_agreed_on_going_public_at": null,
  "team_member_agreed_on_going_public_at": "2021-08-06T23:16:50.516Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "## Summary:\nThe Validating Admission webhook for Node Objects is passing oldObject fields incorrectly on AdmissionReview.Request. It was identified initially in metadata.labels, but a list of impacted fields follows below:\n \noldNode.Spec.PodCIDRs\noldNode.Spec.ProviderID\noldNode.Spec.ConfigSource\noldNode.Status.Config\noldNode.ObjectMeta\noldNode.Status.Capacity\noldNode.Spec.Unschedulable\noldNode.Status\noldNode.Spec.Taints\n\nThose fields are being set with the same values as the new node object, potentially allowing users to bypass validating admission to update node labels, taints, and others.\n\n## Kubernetes Version:\nv1.19.x\n\n## Component Version:\nValidation Webhook for Nodes\n\n## Steps To Reproduce:\n\n1. Create a Validating Webhook Configuration for Node updates\n2. Create an admission Webhook that outputs the content of oldNode and newNode from the admissionReview obejct\n3. Run a patch that changes one of the fields mentioned above.\n4. Look at the log output and compare the old and newObject CRs -- you will notice that the patch you just made appears on the new AND oldObject CRs logged.\n\n## Supporting Material/References:\nValidating Webhook we created -> https://github.com/ArielLima/managed-cluster-validating-webhooks/blob/nodelabels-webhook/pkg/webhooks/node/node.go#L145-L179\n\nDummy Validating Webhook -> https://github.com/openshift/generic-admission-server/pull/40/files#diff-ce34cccb3b86fc2740015cfa93de7e314262e3db76d54708d5e1c302e6986436R39\n\nPotential issue location -> https://github.com/kubernetes/kubernetes/blob/c970a46bc1bcc100bbbfabd5c12bd4c5d87f8aea/pkg/apis/core/validation/validation.go#L4792-L4794\n\n## Impact\n\nEven though a validating admission webhook thinks that it is restricting actors from mutating certain fields like taints, labels, and schedulability it is not.  \nSome examples of actions you could perform:\n1. change labels to steer workloads\n2. change labels to prevent scheduling any workload\n3. change taints to push pods off a node",
  "weakness": {
    "id": 26,
    "name": "Improper Access Control - Generic"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2021-09-05T23:16:50.647Z",
  "allow_singular_disclosure_after": -127535211.44806148,
  "singular_disclosure_allowed": true,
  "vote_count": 14,
  "voters": [
    "drsniper",
    "ali",
    "akashhamal0x01",
    "mohaned0101",
    "demonia",
    "khizer47",
    "cryptographer",
    "z4yn1",
    "destinedtohack",
    "meispi",
    "and 4 more..."
  ],
  "severity": {
    "rating": "medium",
    "score": 6.5,
    "author_type": "Team",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "low",
      "privileges_required": "high",
      "user_interaction": "none",
      "scope": "unchanged",
      "confidentiality": "none",
      "integrity": "high",
      "availability": "high"
    }
  },
  "structured_scope": {
    "databaseId": 32503,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "https://github.com/kubernetes/apiserver",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
