{
  "id": 911880,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC85MTE4ODA=",
  "url": "https://hackerone.com/reports/911880",
  "title": "No rate Limit on Licenses Activation ",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2020-06-30T13:48:27.461Z",
  "submitted_at": "2020-06-30T13:48:27.461Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "akash-labade",
    "url": "/akash-labade",
    "profile_picture_urls": {
      "small": "https://hackerone.com/rails/active_storage/representations/redirect/eyJfcmFpbHMiOnsiZGF0YSI6NDEwOTEsInB1ciI6ImJsb2JfaWQifX0=--fd9dd73d390170078f9173b13d841e0ebab35b39/eyJfcmFpbHMiOnsiZGF0YSI6eyJmb3JtYXQiOiJqcGciLCJncmF2aXR5IjoiQ2VudGVyIiwicmVzaXplIjoiNjJ4NjJeIiwiY3JvcCI6IjYyeDYyKzArMCJ9LCJwdXIiOiJ2YXJpYXRpb24ifX0=--2de8067d228529d65848a4eeed0bed0bb2531bc3/Q6Y-2Nyx_400x400.jpg"
    },
    "is_me?": false,
    "cleared": false,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 43746,
    "url": "https://hackerone.com/clario",
    "handle": "clario",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/t3XRtv8dYQo3cRSYWh2iL7CE/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/t3XRtv8dYQo3cRSYWh2iL7CE/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "paused",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "Clario",
      "twitter_handle": "",
      "website": "https://clario.co/",
      "about": ""
    }
  },
  "has_bounty?": true,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "no-content",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2021-02-18T09:06:33.024Z",
  "bug_reporter_agreed_on_going_public_at": "2021-01-19T09:38:55.514Z",
  "team_member_agreed_on_going_public_at": "2021-02-18T09:06:32.738Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "",
  "bounty_amount": "300.0",
  "formatted_bounty": "$300",
  "weakness": {
    "id": 65,
    "name": "Business Logic Errors"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2021-02-18T09:38:55.629Z",
  "allow_singular_disclosure_after": -144797279.3649681,
  "singular_disclosure_allowed": true,
  "vote_count": 27,
  "voters": [
    "loaymorad",
    "arist0phanes",
    "m4t35z",
    "ezzra",
    "ali",
    "2026",
    "akashhamal0x01",
    "thalaivar304",
    "h4x0r_dz",
    "mohaned0101",
    "and 17 more..."
  ],
  "severity": {
    "rating": "medium",
    "author_type": "User"
  },
  "structured_scope": {
    "databaseId": 39228,
    "asset_type": "WILDCARD",
    "asset_identifier": "*.mackeeper.com",
    "max_severity": "none"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "id": 26700,
      "category": "team",
      "content": "## Introduction\nA little bit about Rate Limit\nA rate-limiting algorithm is used to check if the user session (or IP-address) has to be limited based on the information in the session cache.\nIn case a client made too many requests within a given time-frame, HTTP-Servers can respond with status code 429: Too Many Requests.\n\n## Description\nI have identified that when License activation on account.mackeeper.com , the request has no rate limit which then can be used to loop through one request. Which can be caused to brute force the license key for mackeeper.\n\nThe first request generated for the activation code does not validate G-Captcha verification. Due to this attacker brute-force the activation code.\n\n##Request\n```\nPOST /my-licenses/enter-activation-code HTTP/1.1\nHost: account.mackeeper.com\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101 Firefox/68.0\nAccept: */*\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nReferer: https://account.mackeeper.com/mylicenses\nContent-Type: application/x-www-form-urlencoded; charset=UTF-8\nX-Requested-With: XMLHttpRequest\nContent-Length: 59\nConnection: close\nCookie: mk_app_yes=mk_app_yes; ActivateMacKeeperPopUpShown5efb180de6b37b3326166ef5=1; showCookiePolicy=true; _ga=GA1.3.1268580131.1593521017; _gid=GA1.3.2072436200.1593521017; _hjid=76d1e19a-d544-4123-8d02-65f30c9901df; _hjIncludedInSample=1; _hjAbsoluteSessionInProgress=1; sid=fstrk1gg07rva675puuftotju7; aguid=d82aa8c6a8c239b88f6bdca39af1b7ad5efb37b7e99293.37291003; jwtToken=eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Ijk1YTYyYzc4N2ViYjcwYTY5OTFhNzdhMTI1ODJkZjlhIn0.eyJ1c2VyX2lkIjoiNWVmYjE4MGRlNmIzN2IzMzI2MTY2ZWY1IiwiaXNzIjoibWthcGkiLCJleHAiOjE1OTQxNTIwNjEsImhhc2giOiI2NmM4NmRjOTAxYTM2MSJ9.IDg6BJBiNowewfO4vg0P8O4yFC2SuX57RkEqod1Cr-wScfB2YqO8COt5EUwyVLT_RXECk8fPtubnrp_VxTsK6iMsrLa2FNz73uqyir9RvzYrfgs-JUH0ZzpaK63Cnd9xCGBJcUfN40d6txmlM426ey5qgX9vLICzX1WMtYEdvQ3xskfPcweJMZihceB1dq1oro2OJUahV28Y3gfOn6UzuNsfitlGbQss6pKPbDKBv5VgUoW4madD0rXo6iXuhrXs130f6pbdZ6ZRkmlyBuGm3mK3Rve6pji7sQXHMk1myo7GiDZG0tj_L_Fty68NPnvKRa9OGSfe0vnbioCCkAe6eg; loginInfo=akash-labade\n\ncsrf=38a8b676d202e1c513637e6d8ce224fe&code=ABCDEFGH12345678\n```\n##Steps To Reproduce:\n1. Go to `https://account.mackeeper.com/mylicenses`\n2. Click On Enter Activation code button.\n3. Intercept request using burp and send to the intruder.\n4. Add payload list and click on start attack.\n5. See You Will Get 200 ok Status Code with error \"The key \"ABCDEFGH12345678\" does not exist\".\n\n##Solution\n* I Will Recommend You To Add A ReCaptcha for the first request too. The first Request For Activation Doesn't Validate the ReCaptcha.\n* Sort Of Something Which Requires Manual Human Interaction To Proceed Like You Can Add Captcha Like 2+2=___ so that it cannot be brute-forced.\n* Set a limit at the back-end for a particular number up-to 5 times a day user can request activation or something like that will prevent from exploiting this vulnerability\n\n##Impact\n* If there are no rate limits on activation key verification, Users can create any number of keys by the brute-forcing attack.\n* This type of attack can result in financial loss and can lead to business risk.",
      "updated_at": "2021-02-18T09:06:06.372Z",
      "can_view?": true,
      "can_create?": false,
      "attachments": [],
      "user": {
        "id": 778068,
        "username": "jair",
        "name": "Nazarii Uniiat",
        "bio": "",
        "cleared": false,
        "verified": false,
        "website": null,
        "location": "",
        "created_at": "2019-10-11T11:56:52.161Z",
        "url": "https://hackerone.com/jair",
        "hackerone_triager": false,
        "hackerone_employee": false,
        "user_type": "hacker",
        "profile_picture_urls": {
          "small": "https://profile-photos.hackerone-user-content.com/variants/N18CABo2oLzv3uDAMHznVUhh/3cb67cc78dc0cba55b102dd9eca2ee89b206d3e960be830f070583d9070b69ef",
          "medium": "https://hackerone.com/rails/active_storage/representations/redirect/eyJfcmFpbHMiOnsiZGF0YSI6OTgzMDk5LCJwdXIiOiJibG9iX2lkIn19--a6ac64615601aa589ac86aea930f1b19af0f4041/eyJfcmFpbHMiOnsiZGF0YSI6eyJmb3JtYXQiOiJqcGciLCJncmF2aXR5IjoiQ2VudGVyIiwicmVzaXplIjoiODJ4ODJeIiwiY3JvcCI6IjgyeDgyKzArMCJ9LCJwdXIiOiJ2YXJpYXRpb24ifX0=--29ac517e159d5d0770b357ab67c25f2cbc1a5e86/dethbee.jpg",
          "xtralarge": "https://hackerone.com/rails/active_storage/representations/redirect/eyJfcmFpbHMiOnsiZGF0YSI6OTgzMDk5LCJwdXIiOiJibG9iX2lkIn19--a6ac64615601aa589ac86aea930f1b19af0f4041/eyJfcmFpbHMiOnsiZGF0YSI6eyJmb3JtYXQiOiJqcGciLCJyZXNpemUiOiIyNjB4MjYwXHUwMDNlIn0sInB1ciI6InZhcmlhdGlvbiJ9fQ==--cf3aeca803d1baf476958c689ca7b472a4cb54f1/dethbee.jpg"
        }
      }
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
