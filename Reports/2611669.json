{
  "id": 2611669,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8yNjExNjY5",
  "url": "https://hackerone.com/reports/2611669",
  "title": "[Switch, PIA/MK8DX] Stack buffer overflow and potential RCE in PIA (LAN/LDN, possibly NEX) room info deserialization",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2024-07-18T23:18:38.219Z",
  "submitted_at": "2024-07-18T23:18:38.867Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "jitlua",
    "url": "/jitlua",
    "profile_picture_urls": {
      "small": "https://hackerone.com/rails/active_storage/representations/redirect/eyJfcmFpbHMiOnsiZGF0YSI6NjEwODEyOSwicHVyIjoiYmxvYl9pZCJ9fQ==--6e2522a25ad34512ad564f86bd6e451fa42b57ab/eyJfcmFpbHMiOnsiZGF0YSI6eyJmb3JtYXQiOiJqcGciLCJncmF2aXR5IjoiQ2VudGVyIiwicmVzaXplIjoiNjJ4NjJeIiwiY3JvcCI6IjYyeDYyKzArMCJ9LCJwdXIiOiJ2YXJpYXRpb24ifX0=--2de8067d228529d65848a4eeed0bed0bb2531bc3/reggie-h1.jpg"
    },
    "is_me?": false,
    "cleared": false,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 16634,
    "url": "https://hackerone.com/nintendo",
    "handle": "nintendo",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/016/634/999cefca933756faeeb2ea39c07557943437c94f_original.png/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/016/634/999cefca933756faeeb2ea39c07557943437c94f_original.png/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "Nintendo",
      "twitter_handle": "",
      "website": "http://www.nintendo.com",
      "about": ""
    }
  },
  "has_bounty?": true,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "no-content",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2024-09-30T03:24:54.670Z",
  "bug_reporter_agreed_on_going_public_at": "2024-09-30T02:56:31.465Z",
  "team_member_agreed_on_going_public_at": "2024-09-30T03:24:54.461Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "",
  "weakness": {
    "id": 4,
    "name": "Stack Overflow"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 36,
  "voters": [
    "roccodev",
    "metereorpreter",
    "zy9ard3",
    "anonxr",
    "d3f7ult",
    "mrnbayoh",
    "thalaivar304",
    "spaghettisec",
    "hundredpercent",
    "0xleonidas",
    "and 26 more..."
  ],
  "severity": {
    "rating": "medium",
    "score": 4.3,
    "author_type": "Team",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "low",
      "privileges_required": "low",
      "user_interaction": "none",
      "scope": "unchanged",
      "confidentiality": "none",
      "integrity": "none",
      "availability": "low"
    }
  },
  "structured_scope": {
    "databaseId": 372585,
    "asset_type": "HARDWARE",
    "asset_identifier": "Nintendo Switch applications for which Nintendo is the publisher worldwide",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "id": 540510,
      "category": "team",
      "content": "-",
      "updated_at": "2024-09-30T03:24:47.108Z",
      "can_view?": true,
      "can_create?": false,
      "attachments": [],
      "user": {
        "id": 60412,
        "username": "tattsun",
        "name": "Ramen Chevalier",
        "bio": null,
        "cleared": false,
        "verified": false,
        "website": null,
        "location": null,
        "created_at": "2016-03-11T10:24:56.230Z",
        "url": "https://hackerone.com/tattsun",
        "hackerone_triager": false,
        "hackerone_employee": false,
        "user_type": "company",
        "profile_picture_urls": {
          "small": "/assets/avatars/default-14ffa99f59cd01423c64904352cc130ffcb6a802eadfd11777a54485749e60f2.png",
          "medium": "/assets/avatars/default-14ffa99f59cd01423c64904352cc130ffcb6a802eadfd11777a54485749e60f2.png",
          "xtralarge": "/assets/avatars/default-14ffa99f59cd01423c64904352cc130ffcb6a802eadfd11777a54485749e60f2.png"
        }
      }
    },
    {
      "id": 540502,
      "category": "researcher",
      "content": "# Background Information\n\nA vulnerability was discovered in Mario Kart 8 Deluxe's **incorrect usage** of the [`Pia`](https://github.com/kinnay/NintendoClients/wiki/Pia-Overview) P2P networking library, in which implementations of \"`CopyAppData`\" *(See pseudocode below)* are sometimes called with an `outBufSize` larger than the `out` buffer itself. This can potentially lead to user-mode remote code execution (RCE) on peers' consoles if chained with an info leak.\n\nAs of **2024/09/11**, Nintendo has deployed a fix for this vulnerability alongside **v3.0.3** for all regions, excluding China. As of **2024/09/27**, v3.0.3 has now also been released for China.\n\nA complete write-up is included here: <https://github.com/latte-soft/kartlanpwn>\n\n# Report Timeline\n\n| Date           | Info |\n| :------------- | :--- |\n| **2024/07/18** | Report submitted to Nintendo via HackerOne |\n| **2024/07/31** | Report triaged internally |\n| **2024/09/11** | Fix released alongside Mario Kart 8 Deluxe **v3.0.3** for all regions, excluding China |\n| **2024/09/12** | Bounty paid out by Nintendo |\n| **2024/09/12** | Other researchers [quite quickly found out](https://x.com/OatmealDome/status/1834350565544824979) about the fix for \"`a security flaw in the game's netcode`\" in the bindiff for v3.0.3 |\n| **2024/09/27** | Mario Kart 8 Deluxe v3.0.3 released for the Chinese region |\n| **2024/09/29** | Disclosure granted by Nintendo |\n\n## LAN Protocol (Browse-Reply Packet)\n\n*At least in the case of the `Pia` version MK8DX is using*, for what we're focusing on, browse-reply packets for LAN are constructed as follows:\n\n(All int types are encoded as big-endian)\n\n| Index | Pseudo-Type     | Description |\n| :---: | :-------------- | ----------- |\n| 0     | `u8`            | Packet type (`0x1`) |\n| 1     | `u32`           | Size of session info body (`1266` in our case) |\n| 5     | (`42` bytes)    | Misc session info fields, irrelevant to us |\n| 47    | (`0x180` bytes) | **Start of space for application data** |\n| 431   | `u32`           | **Length of application data** |\n\n*The rest of session info follows, though unimportant for crafting a packet for this vulnerability*\n\n## \"`LAN_CopyAppData`\" Pseudocode\n\nFor the sake of demonstration, below is rough pseudocode from the LAN implementation of \"`CopyAppData`\". While nothing is inherently wrong with this function alone, incorrect usage (in MK8DX's case) can allow for the stack frame to be overwritten by our input application data in `packet`.\n\n(function located @ `+0xA0F8C0` in `main` for MK8DX v3.0.1)\n```c\nvoid LAN_CopyAppData(int* r0, int packet, int out, uint outBufSize) {\n    int u1 = 68612;\n\n    if (out != NULL) {\n        // The actual length to read from the `packet` buffer at the start of our\n        // application data (which our 'server' controls)\n        uint appDataLength = *(uint *)(packet + 432);\n\n        // In some cases, outBufSize is input as a larger number than the bounds of the\n        // `out` buffer, which allows a stack buffer overflow (in our specific case, `*out`\n        // is 128 bytes long, and outBufSize is 150!)\n        if (appDataLength <= outBufSize) {\n            memcpy(out, packet + 48, outBufSize); // packet[47], start of application data\n\n            u1 = 0;\n        }\n\n        *r0 = u1;\n        return;\n    }\n\n    *r0 = 68615;\n    return;\n}\n```\n\n{F3640876}",
      "updated_at": "2024-09-30T05:35:03.176Z",
      "can_view?": true,
      "can_create?": false,
      "attachments": [
        {
          "id": 3640876,
          "filename": "lan.gif",
          "size": 882688,
          "type": "image/gif",
          "url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/qvb5jecfpcni8bz446byx3pru8og?response-content-disposition=attachment%3B%20filename%3D%22lan.gif%22%3B%20filename%2A%3DUTF-8%27%27lan.gif&response-content-type=image%2Fgif&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ65VHY4Z7%2F20250920%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250920T180558Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHgaCXVzLXdlc3QtMiJHMEUCIQCyg%2B5Ssf9GRU59%2Bkync2bOt7x6A4WYOE2EWe8N9ua8DgIgSNulINmRAv2Bt0wwr8UYwa5xpgMH6LtJxEneNLUcFRsqugUI8f%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARADGgwwMTM2MTkyNzQ4NDkiDOTz%2FpGvx8cQysomJiqOBS99Jtfa15bKJomjTK5QnIoppnlQkyD4rjs%2FsJTgjQoYAXbWi7xejVNGhvBzQi4ad2dUQIYFs7OAzdT%2FUllZvMfuZpYyWOg3l04gn1q%2BRyvMLsBr%2FbOr%2BqcwAlNBKJpnd%2BgSEHRk1fsnuCuN1whhpTdUc6mxHlyDoEnZDNZKENrXz7QOuc2yv9ZXCJE%2BmssW9ffIQK3n%2FlQOeh31Ss2Wlrp1TQSVOxUFVgGA2G%2BXb7THpC7A9IZN7juETY1FNPV2ve52kdkpdpl9yphdTxuVrxvd5AYAhkzMmBXxEwR1Cj1yovx0IunZaV879Bazbm%2BcfHZgwys5Qat2muSFv9NFAiayu63r9kkgSXKRgJTBSo27EVJ0hLPmeHl5pSs3%2B3z7Rz3K2JTWBJKacaNrY4ityJHG0lChY3AiUUEQfm6FH56HSdUCzlRhCgRXw7vHnhxfH8Pm2LwZpJ1qxaE%2ByXIQZ%2Fbkdw8aXV5z5Idg213EEC0ILR4vgn1Orzbwl0g1%2FrOTESYLHasy0wcLKIa7%2Bx5GsybsaztcM%2FaeDIkgmyDHrE8dmUM4OGGoFrEiLptvi4ipQTfOnZv%2FW8L0DmN1mCew0ZGuLQoDefflIXeN3js453tCYkgw47FLq5o3XWx7t83rShJXDkk9Z67O91QPdHoajRK2WUBEfSdSx0K4ZP%2BUUnEyFH7UNpgQ0RGtT1YKDRo6DnWUZNpFUV72FrTG%2B%2B%2BWhirUXxnwzxtN49el9oy%2B6Zp%2FjfTVEDNdGnKmLX4Rp5BzUPGHXo9%2F2M76%2Fo9gaYWPekSq%2B%2FGwN9jyRLHBAVa1AwiFHx8rdMSBE9uFPnYCooXI%2BCZoWzutS%2B%2B6zqgl2eAD1hzd7%2FXRzzh9u64VTZ3tijDbnrvGBjqxARFf0E54%2BgdK7Dqw81sRnbmFvMlT3dHf%2BiqrwGKs4KOFIaHkwmBzOVE3vpsUIrNUgO920xXt4Wxnl%2BYVYIiB%2BzXNbT46JlZcZk%2FbfkQJG9TKQLeemXNwhR3OPAW0ypnaTobqy2zzn8d3dbTbKWbz5CaaRn%2B%2BgyNRP2zWb6y7hi4GhpVQS4%2FKbVxoNvkNg6OpFGsFaCjVmQzDmM300a0zrZ2shsdclYZacrrYxRPYPrAzDg%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=5cd3f57d219f09042beb2e4b445ac8c079872a666727316d1ce1c70f68c92f45"
        }
      ],
      "user": {
        "id": 2201189,
        "username": "jitlua",
        "name": "Chad Hyatt",
        "bio": "",
        "cleared": false,
        "verified": true,
        "website": "https://hyatt.page",
        "location": "",
        "created_at": "2022-01-31T13:09:13.683Z",
        "url": "https://hackerone.com/jitlua",
        "hackerone_triager": false,
        "hackerone_employee": false,
        "user_type": "hacker",
        "profile_picture_urls": {
          "small": "https://hackerone.com/rails/active_storage/representations/redirect/eyJfcmFpbHMiOnsiZGF0YSI6NjEwODEyOSwicHVyIjoiYmxvYl9pZCJ9fQ==--6e2522a25ad34512ad564f86bd6e451fa42b57ab/eyJfcmFpbHMiOnsiZGF0YSI6eyJmb3JtYXQiOiJqcGciLCJncmF2aXR5IjoiQ2VudGVyIiwicmVzaXplIjoiNjJ4NjJeIiwiY3JvcCI6IjYyeDYyKzArMCJ9LCJwdXIiOiJ2YXJpYXRpb24ifX0=--2de8067d228529d65848a4eeed0bed0bb2531bc3/reggie-h1.jpg",
          "medium": "https://profile-photos.hackerone-user-content.com/variants/70gt9txlibx3w5b6fnk918e5brhy/d9695107bfcd68eeb1c9e0912b109cdae9a6c00c0bda6fd4cbd6d9bdb828840a",
          "xtralarge": "https://hackerone.com/rails/active_storage/representations/redirect/eyJfcmFpbHMiOnsiZGF0YSI6NjEwODEyOSwicHVyIjoiYmxvYl9pZCJ9fQ==--6e2522a25ad34512ad564f86bd6e451fa42b57ab/eyJfcmFpbHMiOnsiZGF0YSI6eyJmb3JtYXQiOiJqcGciLCJyZXNpemUiOiIyNjB4MjYwXHUwMDNlIn0sInB1ciI6InZhcmlhdGlvbiJ9fQ==--cf3aeca803d1baf476958c689ca7b472a4cb54f1/reggie-h1.jpg"
        }
      }
    }
  ]
}
