{
  "id": 182169,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xODIxNjk=",
  "url": "https://hackerone.com/reports/182169",
  "title": "Type confusion in FutureIter_throw() which may potentially lead to an arbitrary code execution",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "low",
  "readable_substate": "Resolved",
  "created_at": "2016-11-14T21:37:24.096Z",
  "submitted_at": "2016-11-14T21:37:24.096Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "artem",
    "url": "/artem",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/2i1RS84yiWXNaegFdcLMbwu9/8774a5031fc14b74dc4404da039040c69df8ed41021007c0c2beb9de489fcf66"
    },
    "is_me?": false,
    "cleared": false,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 54349,
    "url": "https://hackerone.com/ibb",
    "handle": "ibb",
    "profile_picture_urls": {
      "small": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/v0qywgoh5hm4cbhuanu8mqdtowhr/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1?response-content-disposition=inline%3B%20filename%3D%22ibb%20revision%205%20copy.png%22%3B%20filename%2A%3DUTF-8%27%27ibb%2520revision%25205%2520copy.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2F6CBASO%2F20250922%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250922T002347Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJb%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIA9NYf66XNurPsekZraJhcnjCKSqlWGgE7j2DISB7M%2BXAiEA1aPqbdonkg%2F2gBQSRzqMDBirHNUcJYFsdnlsLC7EvasqsgUIHxADGgwwMTM2MTkyNzQ4NDkiDExtU6gLIZW1VYo6dyqPBfUiT315biR5WrjyTtFejey9CpUKuGub9Awlk%2BSAFq64qiPSz9jAcCJGsPv4GKQva%2F5BeByqaOkF7W9Och06QXVxlbBcFelaEM8IuPSO3asV5lfi5IHPefO87jrwBiGOjEPaz9P6vWKZRkJF9uEwBfWjiYYoIIKzu%2Bh%2FBdzitAakoRjldRkZ8yRkV0J9NpNFkjZQtoCkE0Zb5uJnvaaJsIr5DW4H6EXaX1dlagTVQP%2FEI%2F1Wsy0WnPHElX783NHkEkQ74KuioAxHvKWyEY9%2FXbK%2BVF6qD6elTWbAL2x%2FQ5iGKzo%2FglSM40v0K9WEsucXPmCEGYVqpPhtA%2FQVPWTgtGdxzfyR45ESOd9BW8jxNCvXEJiDVZhvWUgMruWVS0SZ0%2Fb99zYD%2FiknbFBslAFBSXkPPI%2BT2Qw37b6f39ROee01PuyRkSulgoaKNtyIg98L5MnlNqFG5Be3qMAPccrwl18QLtbhgNkD0torQipyMdAYmnWkWsRTTy6JyGM%2BLkB0imQN0%2F9AullOPdrL031IqudGEoA2SdbvkeNGJ%2F7rEGmEWF8H06xvd3nnPAjEtBhsTSEIv19IsCjx0VfnRLAH%2BJtc4AxuGC2rLRjs3e3WD%2Fzas8KhlrtKoEyY4MfYGvBVPHwFAhzmJTLxegygX3M7ZJreCn8Ly9ROtGt4WbG23wpJc0RhY90Qrj2T%2FNavip7D%2Boo6fqLIOJqVgbMzrzWvS65b58TnlZj2ricgLw%2ByzmGJ9GET%2Bv%2FW8RqNGw7fbu%2F6kRsrq4d59D0qGQMMd1Nmi1SuzGCRvgGWVMNUJmbCSCTKpQAqnvNI8Nc6eQXO3Mlr7GFsS63kYC1aD26ThAIaDUKDakOjlewZ06hfLZXgW2Ew2PLBxgY6sQFgpSZgEdI%2BDyq0M45rMYwHcKSEKjC1jR4%2BFaYF5kdcDY3itUrtErt3%2FU7pz%2BIQUcY2WNdFbIVpZVuTZVfz8cnFAM%2Bwvo62InjjgRQEiFy1dAXCWJENqc%2BeShpJ960q438r6IB38LxNMH9cccXOJmoYl7tRi2VTHxshZO%2FeMhMQV9pFn4kCZW44jKi4LZA3qDNq83xevHX4DYc4rkBNrkJuyGlOVTcwtLAyQyTIq40n0Oc%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=84f0c4e61ac71297343e25cf48a41ca16e89e5997a372960fc66f5ca8d288675",
      "medium": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/v0qywgoh5hm4cbhuanu8mqdtowhr/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c?response-content-disposition=inline%3B%20filename%3D%22ibb%20revision%205%20copy.png%22%3B%20filename%2A%3DUTF-8%27%27ibb%2520revision%25205%2520copy.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2F6CBASO%2F20250922%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250922T002347Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJb%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIA9NYf66XNurPsekZraJhcnjCKSqlWGgE7j2DISB7M%2BXAiEA1aPqbdonkg%2F2gBQSRzqMDBirHNUcJYFsdnlsLC7EvasqsgUIHxADGgwwMTM2MTkyNzQ4NDkiDExtU6gLIZW1VYo6dyqPBfUiT315biR5WrjyTtFejey9CpUKuGub9Awlk%2BSAFq64qiPSz9jAcCJGsPv4GKQva%2F5BeByqaOkF7W9Och06QXVxlbBcFelaEM8IuPSO3asV5lfi5IHPefO87jrwBiGOjEPaz9P6vWKZRkJF9uEwBfWjiYYoIIKzu%2Bh%2FBdzitAakoRjldRkZ8yRkV0J9NpNFkjZQtoCkE0Zb5uJnvaaJsIr5DW4H6EXaX1dlagTVQP%2FEI%2F1Wsy0WnPHElX783NHkEkQ74KuioAxHvKWyEY9%2FXbK%2BVF6qD6elTWbAL2x%2FQ5iGKzo%2FglSM40v0K9WEsucXPmCEGYVqpPhtA%2FQVPWTgtGdxzfyR45ESOd9BW8jxNCvXEJiDVZhvWUgMruWVS0SZ0%2Fb99zYD%2FiknbFBslAFBSXkPPI%2BT2Qw37b6f39ROee01PuyRkSulgoaKNtyIg98L5MnlNqFG5Be3qMAPccrwl18QLtbhgNkD0torQipyMdAYmnWkWsRTTy6JyGM%2BLkB0imQN0%2F9AullOPdrL031IqudGEoA2SdbvkeNGJ%2F7rEGmEWF8H06xvd3nnPAjEtBhsTSEIv19IsCjx0VfnRLAH%2BJtc4AxuGC2rLRjs3e3WD%2Fzas8KhlrtKoEyY4MfYGvBVPHwFAhzmJTLxegygX3M7ZJreCn8Ly9ROtGt4WbG23wpJc0RhY90Qrj2T%2FNavip7D%2Boo6fqLIOJqVgbMzrzWvS65b58TnlZj2ricgLw%2ByzmGJ9GET%2Bv%2FW8RqNGw7fbu%2F6kRsrq4d59D0qGQMMd1Nmi1SuzGCRvgGWVMNUJmbCSCTKpQAqnvNI8Nc6eQXO3Mlr7GFsS63kYC1aD26ThAIaDUKDakOjlewZ06hfLZXgW2Ew2PLBxgY6sQFgpSZgEdI%2BDyq0M45rMYwHcKSEKjC1jR4%2BFaYF5kdcDY3itUrtErt3%2FU7pz%2BIQUcY2WNdFbIVpZVuTZVfz8cnFAM%2Bwvo62InjjgRQEiFy1dAXCWJENqc%2BeShpJ960q438r6IB38LxNMH9cccXOJmoYl7tRi2VTHxshZO%2FeMhMQV9pFn4kCZW44jKi4LZA3qDNq83xevHX4DYc4rkBNrkJuyGlOVTcwtLAyQyTIq40n0Oc%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=75a51f0cc538f00c0fab274f4c9129b166e1a313ada6d5f28794581ba09d465e"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "Internet Bug Bounty",
      "twitter_handle": "",
      "website": "https://www.hackerone.com/internet-bug-bounty",
      "about": "The Internet Bug Bounty rewards security research into vulnerabilities impacting Open Source Software Projects."
    }
  },
  "has_bounty?": true,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2016-12-03T20:13:05.980Z",
  "bug_reporter_agreed_on_going_public_at": "2016-12-03T20:08:23.367Z",
  "team_member_agreed_on_going_public_at": "2016-12-03T20:13:05.947Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Hello,\n\nI reported this directly to security@python.org. The issue has been fixed. Python Team confirmed that it's fixed and disclosed:\n\nIt's disclosed. Feel free to file a bug if that would be helpful to you. \n\n\n\nOn Mon, Nov 14, 2016, at 09:54, Artem Smotrakov wrote:\n> Hello Benjamin,\n>\n> I am planning to submit it to https://hackerone.com/ibb-python to see if\n> it's eligible. Since the fix is in public repo, may it be considered as\n> disclosed? Or, should I wait for next release?\n>\n> Is there a bug id for it?\n>\n> Thanks for fixing this quickly!\n>\n> Artem\n>\n> 2016-11-14 0:17 GMT-08:00 Benjamin Peterson <benjamin@python.org>:\n>\n> > Thank you for the report. Fixed in\n> > https://hg.python.org/cpython/rev/3ea121235ede\n\n\nHere is the original report:\n\n\n\n\nHello Python Security Team,\n\nA type confusion may occur in FutureIter_throw() method of _asynciomodule:\n\nhttps://hg.python.org/cpython/file/tip/Modules/_asynciomodule.c#l1022\n\n```\nstatic PyObject *\nFutureIter_throw(futureiterobject *self, PyObject *args)\n{\n    PyObject *type=NULL, *val=NULL, *tb=NULL;\n    if (!PyArg_ParseTuple(args, \"O|OO\", &type, &val, &tb))\n        return NULL;\n\n    if (val == Py_None) {\n        val = NULL;\n    }\n    if (tb == Py_None) {\n        tb = NULL;\n    }\n\n    Py_CLEAR(self->future);\n\n    if (tb != NULL) {\n        PyErr_Restore(type, val, tb);\n    }\n```\n\nThe method doesn't check types of \"type\" and \"val\", and passes them to PyErr_Restore().\n\nPyErr_Restore() method doesn't perform any type check on \"type\" and \"val\" either,\nand stores them \"as is\" to \"tstate->curexc_type\" and \"tstate->curexc_value\".\n\nhttps://hg.python.org/cpython/file/tip/Python/errors.c#l27\n\nThen, \"tstate->curexc_value\" can be retrieved by PyErr_Fetch() funciton,\nand callers will assume that it returns an object of exception type.\nThis results to a type confusion.\n\nThere are a lot of invocation of PyErr_Fetch() which may lead to different consequences.\nI am attaching two POCs which demonstrates the problem.\n\n1. FutureIter_type_confusion_1.py results to a crash with the following output:\n\n```\nin A.__init__\nin A.__str__\nin except, e = this is not an exception\nin except, type(e) = <class 'Exception'>\nTraceback (most recent call last):\n  File \"./FutureIter_type_confusion_report/FutureIter_type_confusion_1.py\", line 13, in <module>\nSegmentation fault (core dumped)\n```\n\n2. FutureIter_type_confusion_2.py shows that the issue may lead to overwritting function pointers\nwhich may potentially result to an arbitrary code execution:\n\n```\n(gdb) run\nStarting program: /home/artem/projects/python/build/cpython-normal/bin/python3 ./FutureIter_type_confusion_report/FutureIter_type_confusion_2.py\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\n\nProgram received signal SIGSEGV, Segmentation fault.\n0x00000000004b751a in PyObject_Repr (v=0xae1890) at Objects/object.c:474\n474\t    if (Py_TYPE(v)->tp_repr == NULL)\n(gdb) p v->ob_type->tp_repr\nCannot access memory at address 0x50607020304050c8\n(gdb) list\n469\t        return NULL;\n470\t    }\n471\t#endif\n472\t    if (v == NULL)\n473\t        return PyUnicode_FromString(\"<NULL>\");\n474\t    if (Py_TYPE(v)->tp_repr == NULL)\n475\t        return PyUnicode_FromFormat(\"<%s object at %p>\",\n476\t                                    v->ob_type->tp_name, v);\n477\n478\t#ifdef Py_DEBUG\n479\t    /* PyObject_Repr() must not be called with an exception set,\n480\t       because it may clear it (directly or indirectly) and so the\n481\t       caller loses its exception */\n482\t    assert(!PyErr_Occurred());\n483\t#endif\n484\n485\t    res = (*v->ob_type->tp_repr)(v);\n486\t    if (res == NULL)\n487\t        return NULL;\n488\t    if (!PyUnicode_Check(res)) {\n(gdb)\n```\n\n\"v->ob_type->tp_repr\" contains an invalid address 0x50607020304050c8, so it results to a crash.\nBut this address is controlled by an attacker.\n\"v->ob_type->tp_repr\" is called later in line 485, so if it had a valid pointer,\nthen it may potentially lead to full control of instruction pointer.\n\n\nFutureIter_throw() accepts any types, and confused \"tstate->curexc_value\" may be used in lots of places,\nso there may be much more many ways to use this problem.\n\nI am also attaching an untested patch which updates FutureIter_throw() function to check types of its parameters.\nThe patch seems to solve the problem. I am wondering if such a check might be added to PyErr_Restore() to prevent similar issues.",
  "bounty_amount": "500.0",
  "formatted_bounty": "$500",
  "weakness": {
    "id": 70,
    "name": "Code Injection"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 134741,
      "file_name": "FutureIter_type_confusion.patch",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/134/741/d9a988ab528a11188dfaae9782a2ede9138fca5a/FutureIter_type_confusion.patch?response-content-disposition=attachment%3B%20filename%3D%22FutureIter_type_confusion.patch%22%3B%20filename%2A%3DUTF-8%27%27FutureIter_type_confusion.patch&response-content-type=text%2Fx-diff&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2F6CBASO%2F20250922%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250922T002348Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJb%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIA9NYf66XNurPsekZraJhcnjCKSqlWGgE7j2DISB7M%2BXAiEA1aPqbdonkg%2F2gBQSRzqMDBirHNUcJYFsdnlsLC7EvasqsgUIHxADGgwwMTM2MTkyNzQ4NDkiDExtU6gLIZW1VYo6dyqPBfUiT315biR5WrjyTtFejey9CpUKuGub9Awlk%2BSAFq64qiPSz9jAcCJGsPv4GKQva%2F5BeByqaOkF7W9Och06QXVxlbBcFelaEM8IuPSO3asV5lfi5IHPefO87jrwBiGOjEPaz9P6vWKZRkJF9uEwBfWjiYYoIIKzu%2Bh%2FBdzitAakoRjldRkZ8yRkV0J9NpNFkjZQtoCkE0Zb5uJnvaaJsIr5DW4H6EXaX1dlagTVQP%2FEI%2F1Wsy0WnPHElX783NHkEkQ74KuioAxHvKWyEY9%2FXbK%2BVF6qD6elTWbAL2x%2FQ5iGKzo%2FglSM40v0K9WEsucXPmCEGYVqpPhtA%2FQVPWTgtGdxzfyR45ESOd9BW8jxNCvXEJiDVZhvWUgMruWVS0SZ0%2Fb99zYD%2FiknbFBslAFBSXkPPI%2BT2Qw37b6f39ROee01PuyRkSulgoaKNtyIg98L5MnlNqFG5Be3qMAPccrwl18QLtbhgNkD0torQipyMdAYmnWkWsRTTy6JyGM%2BLkB0imQN0%2F9AullOPdrL031IqudGEoA2SdbvkeNGJ%2F7rEGmEWF8H06xvd3nnPAjEtBhsTSEIv19IsCjx0VfnRLAH%2BJtc4AxuGC2rLRjs3e3WD%2Fzas8KhlrtKoEyY4MfYGvBVPHwFAhzmJTLxegygX3M7ZJreCn8Ly9ROtGt4WbG23wpJc0RhY90Qrj2T%2FNavip7D%2Boo6fqLIOJqVgbMzrzWvS65b58TnlZj2ricgLw%2ByzmGJ9GET%2Bv%2FW8RqNGw7fbu%2F6kRsrq4d59D0qGQMMd1Nmi1SuzGCRvgGWVMNUJmbCSCTKpQAqnvNI8Nc6eQXO3Mlr7GFsS63kYC1aD26ThAIaDUKDakOjlewZ06hfLZXgW2Ew2PLBxgY6sQFgpSZgEdI%2BDyq0M45rMYwHcKSEKjC1jR4%2BFaYF5kdcDY3itUrtErt3%2FU7pz%2BIQUcY2WNdFbIVpZVuTZVfz8cnFAM%2Bwvo62InjjgRQEiFy1dAXCWJENqc%2BeShpJ960q438r6IB38LxNMH9cccXOJmoYl7tRi2VTHxshZO%2FeMhMQV9pFn4kCZW44jKi4LZA3qDNq83xevHX4DYc4rkBNrkJuyGlOVTcwtLAyQyTIq40n0Oc%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=81964b2965dd33912979d68673e5778eac8198e4c7a8ff8de8ba7c3979e8a91a",
      "file_size": 790,
      "type": "text/x-diff",
      "moderated": null
    },
    {
      "id": 134742,
      "file_name": "FutureIter_type_confusion_1.py",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/134/742/a26e5b0b0681f03c55659c9177bcea0597766632/FutureIter_type_confusion_1.py?response-content-disposition=attachment%3B%20filename%3D%22FutureIter_type_confusion_1.py%22%3B%20filename%2A%3DUTF-8%27%27FutureIter_type_confusion_1.py&response-content-type=text%2Fx-python&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2F6CBASO%2F20250922%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250922T002348Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJb%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIA9NYf66XNurPsekZraJhcnjCKSqlWGgE7j2DISB7M%2BXAiEA1aPqbdonkg%2F2gBQSRzqMDBirHNUcJYFsdnlsLC7EvasqsgUIHxADGgwwMTM2MTkyNzQ4NDkiDExtU6gLIZW1VYo6dyqPBfUiT315biR5WrjyTtFejey9CpUKuGub9Awlk%2BSAFq64qiPSz9jAcCJGsPv4GKQva%2F5BeByqaOkF7W9Och06QXVxlbBcFelaEM8IuPSO3asV5lfi5IHPefO87jrwBiGOjEPaz9P6vWKZRkJF9uEwBfWjiYYoIIKzu%2Bh%2FBdzitAakoRjldRkZ8yRkV0J9NpNFkjZQtoCkE0Zb5uJnvaaJsIr5DW4H6EXaX1dlagTVQP%2FEI%2F1Wsy0WnPHElX783NHkEkQ74KuioAxHvKWyEY9%2FXbK%2BVF6qD6elTWbAL2x%2FQ5iGKzo%2FglSM40v0K9WEsucXPmCEGYVqpPhtA%2FQVPWTgtGdxzfyR45ESOd9BW8jxNCvXEJiDVZhvWUgMruWVS0SZ0%2Fb99zYD%2FiknbFBslAFBSXkPPI%2BT2Qw37b6f39ROee01PuyRkSulgoaKNtyIg98L5MnlNqFG5Be3qMAPccrwl18QLtbhgNkD0torQipyMdAYmnWkWsRTTy6JyGM%2BLkB0imQN0%2F9AullOPdrL031IqudGEoA2SdbvkeNGJ%2F7rEGmEWF8H06xvd3nnPAjEtBhsTSEIv19IsCjx0VfnRLAH%2BJtc4AxuGC2rLRjs3e3WD%2Fzas8KhlrtKoEyY4MfYGvBVPHwFAhzmJTLxegygX3M7ZJreCn8Ly9ROtGt4WbG23wpJc0RhY90Qrj2T%2FNavip7D%2Boo6fqLIOJqVgbMzrzWvS65b58TnlZj2ricgLw%2ByzmGJ9GET%2Bv%2FW8RqNGw7fbu%2F6kRsrq4d59D0qGQMMd1Nmi1SuzGCRvgGWVMNUJmbCSCTKpQAqnvNI8Nc6eQXO3Mlr7GFsS63kYC1aD26ThAIaDUKDakOjlewZ06hfLZXgW2Ew2PLBxgY6sQFgpSZgEdI%2BDyq0M45rMYwHcKSEKjC1jR4%2BFaYF5kdcDY3itUrtErt3%2FU7pz%2BIQUcY2WNdFbIVpZVuTZVfz8cnFAM%2Bwvo62InjjgRQEiFy1dAXCWJENqc%2BeShpJ960q438r6IB38LxNMH9cccXOJmoYl7tRi2VTHxshZO%2FeMhMQV9pFn4kCZW44jKi4LZA3qDNq83xevHX4DYc4rkBNrkJuyGlOVTcwtLAyQyTIq40n0Oc%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=517d2d18954657f5b31d8ca25feff71814834fd1ab3adbc0e92ca11b12f557d4",
      "file_size": 387,
      "type": "text/x-python",
      "moderated": null
    },
    {
      "id": 134743,
      "file_name": "FutureIter_type_confusion_2.py",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/134/743/72c27ea0307bf08afdecc4d51a30435a4c9b1bb5/FutureIter_type_confusion_2.py?response-content-disposition=attachment%3B%20filename%3D%22FutureIter_type_confusion_2.py%22%3B%20filename%2A%3DUTF-8%27%27FutureIter_type_confusion_2.py&response-content-type=text%2Fx-python&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2F6CBASO%2F20250922%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250922T002348Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJb%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIA9NYf66XNurPsekZraJhcnjCKSqlWGgE7j2DISB7M%2BXAiEA1aPqbdonkg%2F2gBQSRzqMDBirHNUcJYFsdnlsLC7EvasqsgUIHxADGgwwMTM2MTkyNzQ4NDkiDExtU6gLIZW1VYo6dyqPBfUiT315biR5WrjyTtFejey9CpUKuGub9Awlk%2BSAFq64qiPSz9jAcCJGsPv4GKQva%2F5BeByqaOkF7W9Och06QXVxlbBcFelaEM8IuPSO3asV5lfi5IHPefO87jrwBiGOjEPaz9P6vWKZRkJF9uEwBfWjiYYoIIKzu%2Bh%2FBdzitAakoRjldRkZ8yRkV0J9NpNFkjZQtoCkE0Zb5uJnvaaJsIr5DW4H6EXaX1dlagTVQP%2FEI%2F1Wsy0WnPHElX783NHkEkQ74KuioAxHvKWyEY9%2FXbK%2BVF6qD6elTWbAL2x%2FQ5iGKzo%2FglSM40v0K9WEsucXPmCEGYVqpPhtA%2FQVPWTgtGdxzfyR45ESOd9BW8jxNCvXEJiDVZhvWUgMruWVS0SZ0%2Fb99zYD%2FiknbFBslAFBSXkPPI%2BT2Qw37b6f39ROee01PuyRkSulgoaKNtyIg98L5MnlNqFG5Be3qMAPccrwl18QLtbhgNkD0torQipyMdAYmnWkWsRTTy6JyGM%2BLkB0imQN0%2F9AullOPdrL031IqudGEoA2SdbvkeNGJ%2F7rEGmEWF8H06xvd3nnPAjEtBhsTSEIv19IsCjx0VfnRLAH%2BJtc4AxuGC2rLRjs3e3WD%2Fzas8KhlrtKoEyY4MfYGvBVPHwFAhzmJTLxegygX3M7ZJreCn8Ly9ROtGt4WbG23wpJc0RhY90Qrj2T%2FNavip7D%2Boo6fqLIOJqVgbMzrzWvS65b58TnlZj2ricgLw%2ByzmGJ9GET%2Bv%2FW8RqNGw7fbu%2F6kRsrq4d59D0qGQMMd1Nmi1SuzGCRvgGWVMNUJmbCSCTKpQAqnvNI8Nc6eQXO3Mlr7GFsS63kYC1aD26ThAIaDUKDakOjlewZ06hfLZXgW2Ew2PLBxgY6sQFgpSZgEdI%2BDyq0M45rMYwHcKSEKjC1jR4%2BFaYF5kdcDY3itUrtErt3%2FU7pz%2BIQUcY2WNdFbIVpZVuTZVfz8cnFAM%2Bwvo62InjjgRQEiFy1dAXCWJENqc%2BeShpJ960q438r6IB38LxNMH9cccXOJmoYl7tRi2VTHxshZO%2FeMhMQV9pFn4kCZW44jKi4LZA3qDNq83xevHX4DYc4rkBNrkJuyGlOVTcwtLAyQyTIq40n0Oc%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=2823ccd0cc588d30eb28ce76658185a416f9f4c63ffc8b3618d3dd09d8aab880",
      "file_size": 653,
      "type": "text/x-python",
      "moderated": null
    }
  ],
  "allow_singular_disclosure_at": "2017-01-02T20:08:23.415Z",
  "allow_singular_disclosure_after": -275112924.60847867,
  "singular_disclosure_allowed": true,
  "vote_count": 4,
  "voters": [
    "alfredsaonoy",
    "spetr0x",
    "0xsyed",
    "arice"
  ],
  "severity": {
    "rating": "low",
    "author_type": "Team"
  },
  "structured_scope": {
    "databaseId": 84536,
    "asset_type": "OTHER",
    "asset_identifier": "Python (Legacy)",
    "max_severity": "none"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
