{
  "id": 1071102,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xMDcxMTAy",
  "url": "https://hackerone.com/reports/1071102",
  "title": "Registration bypass with leaked Invite Token",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "high",
  "readable_substate": "Resolved",
  "created_at": "2021-01-04T13:48:48.100Z",
  "submitted_at": "2021-01-04T13:48:48.160Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "gronke",
    "url": "/gronke",
    "profile_picture_urls": {
      "small": "/assets/avatars/default-14ffa99f59cd01423c64904352cc130ffcb6a802eadfd11777a54485749e60f2.png"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 19858,
    "url": "https://hackerone.com/rocket_chat",
    "handle": "rocket_chat",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/019/858/ada6c92a338715afad123af214dd6e22fd8dc6ff_original.png/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/019/858/ada6c92a338715afad123af214dd6e22fd8dc6ff_original.png/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "paused",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": false,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "Rocket.Chat",
      "twitter_handle": "RocketChat",
      "website": "https://rocket.chat",
      "about": "Rocket.Chat is a company built on open source values and a love for efficiency. The company is driven by our amazing community of contributors."
    }
  },
  "has_bounty?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": true,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2024-08-10T21:58:46.526Z",
  "bug_reporter_agreed_on_going_public_at": "2024-07-11T21:58:45.156Z",
  "team_member_agreed_on_going_public_at": null,
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "**Summary:**\n\nRegular expressions in the `validateInviteToken` route allows unauthenticated users to guess a valid invite token, that allows them to access a private channel or register accounts on a remote server with \"Secret URL\" registration method enabled.\n\n**Description:**\n\nThe API route `validateInviteToken` passes an unauthenticated clients token bodyParam to the validateInviteToken method as found in [app/api/server/v1/invites.js#L45-L62](https://github.com/RocketChat/Rocket.Chat/blob/729e258326bcd1fd0685d6d4c4755e38c9f8831d/app/api/server/v1/invites.js#L45-L62)\n\n\n```javascript\nAPI.v1.addRoute('validateInviteToken', { authRequired: false }, {\n\tpost() {\n\t\tconst { token } = this.bodyParams;\n\n\t\tif (!token) {\n\t\t\tthrow new Meteor.Error('error-invalid-token', 'The invite token is invalid.', { method: 'validateInviteToken', field: 'token' });\n\t\t}\n\n\t\tlet valid = true;\n\t\ttry {\n\t\t\tvalidateInviteToken(token);\n\t\t} catch (e) {\n\t\t\tvalid = false;\n\t\t}\n\n\t\treturn API.v1.success({ valid });\n\t},\n});\n```\n\nThe token is then passed to `Invites.findOneById(token)` without further checks of the input data, which allows to send an Object instead of a string. This object can be a `$regex` Mongo DB query, that reduces the number of queries required to leak a valid invite token.\n\nOnce found, an attacker can navigate to `/invite/:token` to then register a new account with access to the specific channel. After initial registration, the process can be repeated to join more rooms with non-expired invites.\n\n```sh\ncurl 'https://open.rocket.chat/api/v1/validateInviteToken'\n  -H \"content-type: application/json\"\n  -d '{ \"token\": { \"$regex\": \".*\" } }'\n```\n\nExpired invite token might mask other token because Mongo DB only returns one document (sorted by order of insertion). A valid strategy to leak a 6 character token (case-sensitive letters and numbers) is to prefix the regex (e.g. `^a.*`, `^b.*`, etc) and check the boolean result.\n\n## Releases Affected:\n\n  * 3.9.4\n\n## Steps To Reproduce (from initial installation to vulnerability):\n\n(Add details for how we can reproduce the issue)\n\n  1.) Leak a valid token with consecutive `validateInviteToken` checks\n  2.) Browse to `/invite/:leaked_token`\n  3.) Register account\n\n## Suggested mitigation\n\n  * validate user input to be a String\n\n## Impact\n\nUnauthenticated attackers can leak invite links to register new accounts, although public registration is disabled. Authenticated users might gain unauthorized access to private chat rooms.",
  "weakness": {
    "id": 27,
    "name": "Improper Authentication - Generic"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2024-08-10T21:58:45.268Z",
  "allow_singular_disclosure_after": -35065490.16806901,
  "singular_disclosure_allowed": true,
  "vote_count": 26,
  "voters": [
    "loaymorad",
    "g3ksec",
    "shreyaschavhan",
    "h4x0r_dz",
    "pr0f0x01",
    "mr-inspector",
    "skeptiker",
    "aliening",
    "l00pz",
    "destinedtohack",
    "and 16 more..."
  ],
  "severity": {
    "rating": "high",
    "score": 8.2,
    "author_type": "User",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "low",
      "privileges_required": "none",
      "user_interaction": "none",
      "scope": "unchanged",
      "confidentiality": "high",
      "integrity": "low",
      "availability": "none"
    }
  },
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
