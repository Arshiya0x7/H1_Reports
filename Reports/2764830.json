{
  "id": 2764830,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8yNzY0ODMw",
  "url": "https://hackerone.com/reports/2764830",
  "title": "CVE-2024-9681: HSTS subdomain overwrites parent cache entry",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "low",
  "readable_substate": "Resolved",
  "created_at": "2024-10-07T16:58:58.995Z",
  "submitted_at": "2024-10-07T16:58:59.386Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "newfunction",
    "url": "/newfunction",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/2miia86h6gou58lati8p3usdvhan/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1"
    },
    "is_me?": false,
    "cleared": true,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 35663,
    "url": "https://hackerone.com/curl",
    "handle": "curl",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/035/663/2faf4c279d437d64bfda6d23d62ce1833813a4d9_original.png/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/035/663/2faf4c279d437d64bfda6d23d62ce1833813a4d9_original.png/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "curl",
      "twitter_handle": "",
      "website": "https://curl.se",
      "about": "cURL is an Open Source project providing a library and command-line tool doing internet transfers"
    }
  },
  "has_bounty?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [
    "CVE-2024-9681"
  ],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2024-11-06T10:28:40.846Z",
  "bug_reporter_agreed_on_going_public_at": "2024-11-06T10:28:40.671Z",
  "team_member_agreed_on_going_public_at": "2024-11-06T07:33:28.031Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "## Summary:\nSuppose my HSTS cache file has the following content:\n```\n.domain.com \"20241107 01:02:03\"\n.sub.domain.com \"unlimited\"\n```\nNow, I connect to https://sub.domain.com/. Suppose this domain now sets a HSTS policy: `Strict-Transport-Security: max-age=15768000 ; includeSubDomains`. Surprisingly my HSTS cache file now becomes:\n```\n.domain.com \"unlimited\"\n.sub.domain.com \"20250408 00:26:19\"\n```\nWhile the HSTS policy for \"sub.domain.com\" is correctly updated, the HSTS expiration time for \"domain.com\" is mistakenly set to be the previous expiration time for \"sub.domain.com\".\n\nIf I have multiple levels of subdomains in my HSTS cache, the situation is more confusing. Suppose my HSTS cache is:\n```\n.com \"20241108 01:02:03\"\n.badssl.com \"20260408 04:39:00\"\n```\nNow I connect to https://hsts.badssl.com/index.html. After that, the HSTS cache becomes:\n```\n.com \"20260408 04:39:00\"\n.hsts.badssl.com \"20250408 04:49:30\"\n```\n\n## Steps To Reproduce:\n\n* curl version: curl 8.11.0-DEV (x86_64-pc-linux-gnu) libcurl/8.11.0-DEV OpenSSL/3.0.2 libpsl/0.21.0, curl source HEAD commit: 86d5c2651d3ea8af316eff2a2452ae61413c66ba\n* Also reproducible in curl 8.10.1 release version.\n\n  1. Create a text file `testhsts.txt` with the following content: `.badssl.com \"20241101 00:25:31\"` (less than 1 month expiration time)\n  2. Run `curl -v --hsts ./testhsts.txt \"http://hsts.badssl.com/index.html\"`. Check the content of `testhsts.txt`\n  3. Run `curl -v --hsts ./testhsts.txt \"http://hsts.badssl.com/index.html\"` again. Check the content of `testhsts.txt` again.\n\n* After step 2, the content of `testhsts.txt` is:\n```\n.badssl.com \"20241101 00:25:31\"\n.hsts.badssl.com \"20250408 04:39:00\"\n```\n\n* After step 3, the content of `testhsts.txt` is:\n```\n.badssl.com \"20250408 04:39:00\"\n.hsts.badssl.com \"20250408 04:40:01\"\n```\nYou can see the expiration time of `.badssl.com` is set incorrectly.\n\n\n## Supporting Material/References:\nNone\n\n## Impact\n\nFor shared subdomains, i.e. different subdomains are controlled by different users, a malicious subdomain can influence the HSTS expiration time of the parent domain. By my tests, a subdomain can only increase the expiration time of its parent domain, but can't shorten it. A malicious subdomain can cause a denial of service of its parent domain, if the parent domain only plans to support HSTS for a short period of time, and wants to revert to plaintext http after a while. By exploiting this bug, the malicious subdomain can set a very long max-age for itself, and this bug can cause curl to overwrite the parent domain's HSTS expiration time to be very long.",
  "weakness": {
    "id": 65,
    "name": "Business Logic Errors"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2024-12-06T07:33:28.269Z",
  "allow_singular_disclosure_after": -24920518.99344549,
  "singular_disclosure_allowed": true,
  "vote_count": 48,
  "voters": [
    "aboalezz",
    "nox1024",
    "zy9ard3",
    "raslanco",
    "thalaivar304",
    "spaghettisec",
    "mohaned0101",
    "x0_h0nda",
    "muralidharan_1530",
    "sarthakbhingare015",
    "and 38 more..."
  ],
  "severity": {
    "rating": "low",
    "author_type": "User"
  },
  "structured_scope": {
    "databaseId": 18844,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "https://github.com/curl/curl",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
