{
  "id": 975983,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC85NzU5ODM=",
  "url": "https://hackerone.com/reports/975983",
  "title": "Site-wide CSRF on Safari due to CORS misconfiguration (not localhost)",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2020-09-07T06:27:53.765Z",
  "submitted_at": "2020-09-07T06:27:53.837Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "nnez",
    "url": "/nnez",
    "profile_picture_urls": {
      "small": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/o57fk2v0jbxr7qss2fksjpkxb824/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1?response-content-disposition=inline%3B%20filename%3D%22candidate%20-%203.png%22%3B%20filename%2A%3DUTF-8%27%27candidate%2520-%25203.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ7DD2MSUT%2F20250921%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250921T084006Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEIf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQD15yEU4EsNuQmyp1Bq5UcgEx%2Fbn%2F7Eu8GWPfjXBwQ6CQIgOsJYAA872aNokqhAlEPN4%2BJ5vaOkXf%2FD1ecnB3N29BcqsgUIEBADGgwwMTM2MTkyNzQ4NDkiDPLO%2BfVO06SC45B8qCqPBeiYfC0P1QmOeCe3H1Un9gCZvA9TF8zDPRIYxaXVXPgRlPV66R5Tkitk5PXkqit5tr6yFFfP%2Fg4s6hmCakhkQspovXP3UuoNS7F8ADShsUMYnBkVRLE%2F4s%2FE3GYAUyyw6BjssYE6cWji6nZP5XesFjz2Zww%2BHIixCkQNmHxi%2BfHncEjhP%2Fw1hqML%2B5WQFJyKeWupxGXitcv6qQos2VbPhVoZB69NxRAu7mLPkAKlffBcsQDmENqUmawF2%2FAFdy0btH7gXWin25NFlhTdg14m6U7m7PYLiVPgY3uH8YNoTqMibLewCNLFykbUScWhho18KYK4AtBrX2v3gfaY3RihLkWRP0C5nY7EGlMLsXiqoDDV8xgg4GnLYRtaP3tKuCmircgAi%2F7sw9rTgJV%2B7NJcY%2BNMiR36kNx%2BI%2Bu39g0IHHY1j1kpHswK%2FT8X0WeC5kzXJx1VkTSWTp2lE8oDmkLzP00rg9e0DwolFaMrgv0AOnGKxj5NSOB1QoNBCEK6f1gCXNrc9%2B6h6lC%2BTuODn8o35EUjMRGZ9lJb2NfqDoGrtwA43AWUcu0ZQ9KkUAKRAqYrHdSHedoVHMn47lehwTo2WUHM9qyJrRssKmf6KgRH4nHpV1i6I3nUQCjzw%2BJUs%2B46gY0DVO0Ux%2BJahsPenoB1B65hGgaRZUZjdvqEeMHmaRkR9X8xPhRCWmaeAM7HciUp5Js0KFYkayOUaD5tqnBEFZNP0vh70Sa7FpvvwB7yicefFaYxP9ZwbQmiSIZJQGhdFR50%2B4IoypxiVRXj4rR855%2Bx4%2FYpbYRAr8o557xDquB3pidrjJIlVV%2ByHKAQUZVbc1TLLVN1SKOrHLcCQSxyXYm%2BpUw7YiJAvhsjnPYu1LAwqbu%2BxgY6sQF3nlZi0IXLiAuzLgHvYt2a5iu4FKeFHXd5dukiQb7j%2FWjbXb11x5RactWQ%2BB8rDhIhiExDwOBGr52kxEhajZexorWyheQ5CTEXZjEqUFXfXURh6DlDyZNeevMB1h8mOdLTcwpvzJMSQW%2BDy4IlKX9iBk2l1p7Hd2HTSagFefS69PrBlMq1nF5EX%2Ba0JISbWx8uSDtgzf8x7EWI6RM6jLC68i6HN3EztKYbWtdDy98ipMA%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=3b43a58a18e6f3065965e15f0f9ed308819137a2a01a98a83e486351745b719c"
    },
    "is_me?": false,
    "cleared": true,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 48311,
    "url": "https://hackerone.com/cs_money",
    "handle": "cs_money",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/6zBhWTJ4KuDdcSg86WvWXrFV/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/6zBhWTJ4KuDdcSg86WvWXrFV/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "CS Money",
      "twitter_handle": "csmoneytrade",
      "website": "https://cs.money",
      "about": "CS2 trading platform that helps people to trade, buy, sell and search for the best skins and deals they could possibly find."
    }
  },
  "has_bounty?": true,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2020-10-27T19:25:44.977Z",
  "bug_reporter_agreed_on_going_public_at": "2020-10-27T15:46:07.545Z",
  "team_member_agreed_on_going_public_at": "2020-10-27T19:25:44.878Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "## Description\nHello there, on `new.cs.money` or `cs.money`, there is anti-CSRF mechanism, which is `Referer` header check.\nHowever, I discovered that regex logic for checking `Referer` header is flawed.\n\nI found that adding `{` or `}` at the end of the domain pass the validation.\nTherefore, if a request comes from `new.cs.money{.attacker.com` it would pass validation.\nAnd because there is no other protective mechanisms in place (SameSite flag, Origin check, Content-Type check), thus allowing attacker to perform CSRF attack on victim.\n\nAccording to this research, https://www.corben.io/advanced-cors-techniques/\nUnlike other browsers, Safari will load the domain with weird characters like `{` or `}` in it.\n\nYou can try this by accessing `new.cs.money{.withgoogle.com` on Safari and Chrome then see the differences.\n\n## Steps To Reproduce\nThese steps are gonna demonstrate how an attacker can perform CSRF attack forcing user to `change_email` on this endpoint `https://new.cs.money/change_email`\n1.Open Safari on MacOS, login on `new.cs.money` (you also need steam account to do this)\n2.Open new tab on safari, and navigate to `new.cs.money{.withgoogle.com`\n\n*I want to note that `new.cs.money{.withgoogle.com` can be hosted on attacker site like, `new.cs.money{.attacker.com`. However, I'm still on the process of buying new domain, so I'm gonna come back and provide you with another way to exploit this with my domain. But I think that these steps are also enough for PoC*\n\n3.Inspect element to bring up javascript console (To enable dev tool, please refer to https://stackoverflow.com/questions/40234993/how-to-inspect-element-using-safari-browser)\n4.Go to JS console, paste below code and hit enter\n```\nvar FormEl = `\n<form action=\"https://new.cs.money/change_email\" method=\"POST\">\n        <input type=\"hidden\" name=\"email\" value=\"nnez+attacker@wearehackerone.com\" />\n        <button type=\"submit\" style=\"font-size:28pt;z-index:99999\">Submit</button>\n    </form>\n`;\nvar Div = document.createElement('div');\nDiv.innerHTML = FormEl;\ndocument.body.appendChild(Div);\n```\n5.Click submit button\n6.Go back to https://new.cs.money/th/csgo/personal-info and see that the email is changed\n\n## Video Demonstration\n{F978459}\n\n## Impact\n\nBecause `new.cs.money` and `cs.money` implement anti-CSRF mechanism the same way, and use it in all endpoints, therefore, it could lead to site-wide CSRF attack on any endpoints. I can't test `Cash Out` function yet because I can't access it, but I set the severity to high because of this.\n\nI can't access https://hackerone_sellmode.zaebumba.com/ despite the new credentials you updated.",
  "bounty_amount": "300.0",
  "formatted_bounty": "$300",
  "weakness": {
    "id": 45,
    "name": "Cross-Site Request Forgery (CSRF)"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 978459,
      "file_name": "new-cs-money-csrf-site-wide-safari.mp4",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/cNMtAZXfNmEjpeLRkQKxjvQ2?response-content-disposition=attachment%3B%20filename%3D%22new-cs-money-csrf-site-wide-safari.mp4%22%3B%20filename%2A%3DUTF-8%27%27new-cs-money-csrf-site-wide-safari.mp4&response-content-type=video%2Fmp4&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ7DD2MSUT%2F20250921%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250921T084006Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEIf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQD15yEU4EsNuQmyp1Bq5UcgEx%2Fbn%2F7Eu8GWPfjXBwQ6CQIgOsJYAA872aNokqhAlEPN4%2BJ5vaOkXf%2FD1ecnB3N29BcqsgUIEBADGgwwMTM2MTkyNzQ4NDkiDPLO%2BfVO06SC45B8qCqPBeiYfC0P1QmOeCe3H1Un9gCZvA9TF8zDPRIYxaXVXPgRlPV66R5Tkitk5PXkqit5tr6yFFfP%2Fg4s6hmCakhkQspovXP3UuoNS7F8ADShsUMYnBkVRLE%2F4s%2FE3GYAUyyw6BjssYE6cWji6nZP5XesFjz2Zww%2BHIixCkQNmHxi%2BfHncEjhP%2Fw1hqML%2B5WQFJyKeWupxGXitcv6qQos2VbPhVoZB69NxRAu7mLPkAKlffBcsQDmENqUmawF2%2FAFdy0btH7gXWin25NFlhTdg14m6U7m7PYLiVPgY3uH8YNoTqMibLewCNLFykbUScWhho18KYK4AtBrX2v3gfaY3RihLkWRP0C5nY7EGlMLsXiqoDDV8xgg4GnLYRtaP3tKuCmircgAi%2F7sw9rTgJV%2B7NJcY%2BNMiR36kNx%2BI%2Bu39g0IHHY1j1kpHswK%2FT8X0WeC5kzXJx1VkTSWTp2lE8oDmkLzP00rg9e0DwolFaMrgv0AOnGKxj5NSOB1QoNBCEK6f1gCXNrc9%2B6h6lC%2BTuODn8o35EUjMRGZ9lJb2NfqDoGrtwA43AWUcu0ZQ9KkUAKRAqYrHdSHedoVHMn47lehwTo2WUHM9qyJrRssKmf6KgRH4nHpV1i6I3nUQCjzw%2BJUs%2B46gY0DVO0Ux%2BJahsPenoB1B65hGgaRZUZjdvqEeMHmaRkR9X8xPhRCWmaeAM7HciUp5Js0KFYkayOUaD5tqnBEFZNP0vh70Sa7FpvvwB7yicefFaYxP9ZwbQmiSIZJQGhdFR50%2B4IoypxiVRXj4rR855%2Bx4%2FYpbYRAr8o557xDquB3pidrjJIlVV%2ByHKAQUZVbc1TLLVN1SKOrHLcCQSxyXYm%2BpUw7YiJAvhsjnPYu1LAwqbu%2BxgY6sQF3nlZi0IXLiAuzLgHvYt2a5iu4FKeFHXd5dukiQb7j%2FWjbXb11x5RactWQ%2BB8rDhIhiExDwOBGr52kxEhajZexorWyheQ5CTEXZjEqUFXfXURh6DlDyZNeevMB1h8mOdLTcwpvzJMSQW%2BDy4IlKX9iBk2l1p7Hd2HTSagFefS69PrBlMq1nF5EX%2Ba0JISbWx8uSDtgzf8x7EWI6RM6jLC68i6HN3EztKYbWtdDy98ipMA%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=0b1b8e3383b5d39150b4fbb0450743cc4d03d59035ebe253936c4583cd745008",
      "file_size": 17376893,
      "type": "video/mp4",
      "moderated": null
    }
  ],
  "allow_singular_disclosure_at": null,
  "vote_count": 28,
  "voters": [
    "th3hidd3nmist",
    "mainteemoforfun",
    "shreyaschavhan",
    "ali",
    "nightm4re",
    "sudi",
    "f_m",
    "0nlymohammed",
    "term1nal",
    "abdilahrf_",
    "and 18 more..."
  ],
  "severity": {
    "rating": "medium",
    "author_type": "Team"
  },
  "structured_scope": {
    "databaseId": 45902,
    "asset_type": "URL",
    "asset_identifier": "old.cs.money",
    "max_severity": "none"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
