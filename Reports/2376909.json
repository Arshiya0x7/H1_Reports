{
  "id": 2376909,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8yMzc2OTA5",
  "url": "https://hackerone.com/reports/2376909",
  "title": "Possible to enumerate valid files in password protected shares/files drop shares as well as spam folder with files",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "low",
  "readable_substate": "Resolved",
  "created_at": "2024-02-17T01:13:04.793Z",
  "submitted_at": "2024-02-17T02:39:41.667Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "lukasreschke",
    "url": "/lukasreschke",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/037/891/e7fea4d5383dc07d1fe767b02f3bda2bc7639c63_original.png/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1"
    },
    "is_me?": false,
    "cleared": false,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 13291,
    "url": "https://hackerone.com/nextcloud",
    "handle": "nextcloud",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/tnqlkt8d6fcch8hj8brdjp8nw864/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/tnqlkt8d6fcch8hj8brdjp8nw864/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "Nextcloud",
      "twitter_handle": "nextclouders",
      "website": "https://nextcloud.com",
      "about": "Access, share and protect your files, calendars, contacts, communication & more at home and in your enterprise."
    }
  },
  "has_bounty?": true,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2025-02-21T10:39:25.700Z",
  "bug_reporter_agreed_on_going_public_at": "2025-01-22T10:39:21.281Z",
  "team_member_agreed_on_going_public_at": null,
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "## Summary:\nIt is possible possible to enumerate valid files in password protected shares/files drop shares as well as spam the folder with empty files with an attacker controlled file name.\n\n## Steps To Reproduce:\n1. Create a folder and create the file `foo.txt` in it\n2. Share the file publicly and mark it as Files Drops and Password Protected (the combination is not necessary, but simplifies the testing)\n3. As attacker send a request to `DocumentAPIController#create` to enumerate the valid files\n4. As attacker send a request to `DocumentAPIController#create` to spam files\n\nI've attached screenshots of these two behaviours here:\n\n{F3055801}\n\n{F3055802}\n\n## Supporting Material/References:\n\n[`DocumentAPIController#create`](https://github.com/nextcloud/richdocuments/blob/24cc1ec714f63b36a823f1f614723f9676abc76d/lib/Controller/DocumentAPIController.php#L70-L149)  is not validating whether the share is writable, upload only or password protected:\n\n```php\n\tpublic function create(string $mimeType, string $fileName, string $directoryPath = '/', ?string $shareToken = null, ?int $templateId = null): JSONResponse {\n\t\ttry {\n\t\t\tif ($shareToken !== null) {\n\t\t\t\t$share = $this->shareManager->getShareByToken($shareToken);\n\t\t\t}\n\n\t\t\t$rootFolder = $shareToken !== null ? $share->getNode() : $this->rootFolder->getUserFolder($this->userId);\n\t\t\t$folder = $rootFolder->get($directoryPath);\n\n\t\t\tif (!($folder instanceof Folder)) {\n\t\t\t\tthrow new Exception('Node is not a folder');\n\t\t\t}\n\t\t} catch (Throwable $e) {\n\t\t\t$this->logger->error('Failed to create document', ['exception' => $e]);\n\t\t\treturn new JSONResponse([\n\t\t\t\t'status' => 'error',\n\t\t\t\t'message' => $this->l10n->t('Cannot create document')\n\t\t\t], Http::STATUS_BAD_REQUEST);\n\t\t}\n\n\t\t$basename = $this->l10n->t('New Document.odt');\n\t\tswitch ($mimeType) {\n\t\t\tcase 'application/vnd.oasis.opendocument.spreadsheet':\n\t\t\t\t$basename = $this->l10n->t('New Spreadsheet.ods');\n\t\t\t\tbreak;\n\t\t\tcase 'application/vnd.oasis.opendocument.presentation':\n\t\t\t\t$basename = $this->l10n->t('New Presentation.odp');\n\t\t\t\tbreak;\n\t\t\tcase 'application/vnd.openxmlformats-officedocument.wordprocessingml.document':\n\t\t\t\t$basename = $this->l10n->t('New Document.docx');\n\t\t\t\tbreak;\n\t\t\tcase 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet':\n\t\t\t\t$basename = $this->l10n->t('New Spreadsheet.xlsx');\n\t\t\t\tbreak;\n\t\t\tcase 'application/vnd.openxmlformats-officedocument.presentationml.presentation':\n\t\t\t\t$basename = $this->l10n->t('New Presentation.pptx');\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (!$fileName) {\n\t\t\t$fileName = Helper::getNewFileName($folder, $basename);\n\t\t}\n\n\t\tif ($folder->nodeExists($fileName)) {\n\t\t\treturn new JSONResponse([\n\t\t\t\t'status' => 'error',\n\t\t\t\t'message' => $this->l10n->t('File already exists')\n\t\t\t], Http::STATUS_BAD_REQUEST);\n\t\t}\n\n\t\ttry {\n\t\t\t$file = $folder->newFile($fileName);\n\t\t\t$templateType = $this->templateManager->getTemplateTypeForExtension(pathinfo($fileName, PATHINFO_EXTENSION));\n\n\t\t\t$empty = $this->templateManager->getEmpty($templateType);\n\t\t\t$templateFile = array_shift($empty);\n\n\t\t\tif ($templateId) {\n\t\t\t\t$templateFile = $this->templateManager->get($templateId);\n\t\t\t}\n\n\t\t\t$file->putContent($this->templateManager->getEmptyFileContent($file->getExtension()));\n\t\t\tif ($this->templateManager->isSupportedTemplateSource($templateFile->getExtension())) {\n\t\t\t\t// Only use TemplateSource if supported filetype\n\t\t\t\t$this->templateManager->setTemplateSource($file->getId(), $templateFile->getId());\n\t\t\t}\n\t\t} catch (Exception $e) {\n\t\t\t$this->logger->error('Failed to create file from template', ['exception' => $e]);\n\t\t\treturn new JSONResponse([\n\t\t\t\t'status' => 'error',\n\t\t\t\t'message' => $this->l10n->t('Not allowed to create document')\n\t\t\t], Http::STATUS_BAD_REQUEST);\n\t\t}\n\t\treturn new JSONResponse([\n\t\t\t'status' => 'success',\n\t\t\t'data' => \\OCA\\Files\\Helper::formatFileInfo($file->getFileInfo())\n\t\t]);\n}\n```\n\n## Impact\n\nIt is possible possible to enumerate valid files in password protected shares/files drop shares as well as spam the folder with empty files with an attacker controlled file name.",
  "weakness": {
    "id": 18,
    "name": "Information Disclosure"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 3055801,
      "file_name": "enumerate-share.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/ah1v7ho3vou569xbdnhcr40fpcmm?response-content-disposition=attachment%3B%20filename%3D%22enumerate-share.png%22%3B%20filename%2A%3DUTF-8%27%27enumerate-share.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQUX64IZSQ%2F20250920%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250920T172825Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHgaCXVzLXdlc3QtMiJHMEUCIFiLe1BDc47M%2FGEYt6B6yp2EdygGNJwtzOGSlwqlZQEXAiEAwBQ4Ur3B%2FaFEs0fY8H0mg7G3j3QxyOWOB9PWkHneNs4quwUI8f%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARADGgwwMTM2MTkyNzQ4NDkiDLry5f62zCqjLY4KMSqPBWu1cy8EIQ6eRljs5bt%2B5LQ3RplYifzmQr%2Br9weTijzbL%2BVWf8wkCkU4V%2FKYJThuHLTDIwM%2BvmYd5r22lKsiQ0Urjws6I08tUkhuwe2HNj0CI14ReJ7Vzkt%2BJ%2FZZOt%2FojgP8QkXycvpUIUnal%2FUyj215f5tjGW0ZHMfhHfVdSxTQe05SuL2EfTdN4EFvxiF6lz8R6Oj58xZdaGfCWus%2BFD4NIlMNErOVgYjnrpdFo3ilJhD1eiBWwSYhDxMyMzzFD1MhNmhPiayhBdEVfPOn7%2BMO4AJPqDkgGuCH7ccnTJJhZajM6CNFNbLdoVONQzx2QHGJl3ANw6xXXwoP8jf%2BMhmKKw6IlEQWGV%2BJZGMsQ9P1sNKCTAaiqJPSeolfNGUBf8Aa22Mex8Y86C24HjuitMz77Ze6eBWSnqQkJXa2R2zbIQ%2FPtJfPqAv7h3sYvVWw0eGoPjnes17RFjEMhYPZcU%2BBzoEKl8Lx96T7K7AiDvO97C00wlp91SE%2FsJKyvgYW7MwDJYLsa9jHXbiWMM8Jm1pPeglj7bQ4luQish0eyzFEXnfwYh357naTHZuFOOVnrH4cHwI1ZBaqIZ%2BhUuP2SjZOpdyVlV5Mbr61e%2BDrrtKOukgqcsMKzNzyKlq8MEWRuCO1igunQ6tGBv9OuQMVzeStOLUpD1TuJIEpFFKgAVlSp5Qgy8GKoawckDO5Qg9n5rl8ppwSGBZtbAQH0wUp%2BQ%2FPqfYyIrpTTM0C4Gi6SvqehOOud3sAv096ZiUWlefEwCQrmnf0jhUSFKcj9jJQE5M9stGL0y%2Fj%2BCAWHQF3zTbaZaxufInypBcZNveuw4GErkZH80Jkzzb7pMn%2BzVF3i%2BXxdvdOXrtAAwUP%2Fz9SNYQwzI%2B7xgY6sQGmEkMHCJR3C8OFnDmWmUD43pKLVnxpv87U8ex2OLLCj5T%2ByGA6JNFRYuMWZDHxwI8ravVA9eNPEnjiULNclow%2Bu5uzfc2EuUk5wcKAO8XJAmw%2F%2FA%2F76mqrDHWUcOtpTFDnN4bkyAOKG43JnDNl4lXH2Uqv9eHF2F82xABB%2BthrE277Z%2BdXgn0dYCqCwxQBWFYPhAW3BMPcszvIuoK7O7U8JwCJeOvASfLHlYiF9S2zaEg%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=3416cc7deed5c34f01944890f0a68200f76e6108df0527a7f375ec34006497a4",
      "file_size": 576683,
      "type": "image/png",
      "moderated": false
    },
    {
      "id": 3055802,
      "file_name": "create-spam-file.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/5ymicyipg0bgpczasupybex2ds32?response-content-disposition=attachment%3B%20filename%3D%22create-spam-file.png%22%3B%20filename%2A%3DUTF-8%27%27create-spam-file.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQUX64IZSQ%2F20250920%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250920T172825Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHgaCXVzLXdlc3QtMiJHMEUCIFiLe1BDc47M%2FGEYt6B6yp2EdygGNJwtzOGSlwqlZQEXAiEAwBQ4Ur3B%2FaFEs0fY8H0mg7G3j3QxyOWOB9PWkHneNs4quwUI8f%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARADGgwwMTM2MTkyNzQ4NDkiDLry5f62zCqjLY4KMSqPBWu1cy8EIQ6eRljs5bt%2B5LQ3RplYifzmQr%2Br9weTijzbL%2BVWf8wkCkU4V%2FKYJThuHLTDIwM%2BvmYd5r22lKsiQ0Urjws6I08tUkhuwe2HNj0CI14ReJ7Vzkt%2BJ%2FZZOt%2FojgP8QkXycvpUIUnal%2FUyj215f5tjGW0ZHMfhHfVdSxTQe05SuL2EfTdN4EFvxiF6lz8R6Oj58xZdaGfCWus%2BFD4NIlMNErOVgYjnrpdFo3ilJhD1eiBWwSYhDxMyMzzFD1MhNmhPiayhBdEVfPOn7%2BMO4AJPqDkgGuCH7ccnTJJhZajM6CNFNbLdoVONQzx2QHGJl3ANw6xXXwoP8jf%2BMhmKKw6IlEQWGV%2BJZGMsQ9P1sNKCTAaiqJPSeolfNGUBf8Aa22Mex8Y86C24HjuitMz77Ze6eBWSnqQkJXa2R2zbIQ%2FPtJfPqAv7h3sYvVWw0eGoPjnes17RFjEMhYPZcU%2BBzoEKl8Lx96T7K7AiDvO97C00wlp91SE%2FsJKyvgYW7MwDJYLsa9jHXbiWMM8Jm1pPeglj7bQ4luQish0eyzFEXnfwYh357naTHZuFOOVnrH4cHwI1ZBaqIZ%2BhUuP2SjZOpdyVlV5Mbr61e%2BDrrtKOukgqcsMKzNzyKlq8MEWRuCO1igunQ6tGBv9OuQMVzeStOLUpD1TuJIEpFFKgAVlSp5Qgy8GKoawckDO5Qg9n5rl8ppwSGBZtbAQH0wUp%2BQ%2FPqfYyIrpTTM0C4Gi6SvqehOOud3sAv096ZiUWlefEwCQrmnf0jhUSFKcj9jJQE5M9stGL0y%2Fj%2BCAWHQF3zTbaZaxufInypBcZNveuw4GErkZH80Jkzzb7pMn%2BzVF3i%2BXxdvdOXrtAAwUP%2Fz9SNYQwzI%2B7xgY6sQGmEkMHCJR3C8OFnDmWmUD43pKLVnxpv87U8ex2OLLCj5T%2ByGA6JNFRYuMWZDHxwI8ravVA9eNPEnjiULNclow%2Bu5uzfc2EuUk5wcKAO8XJAmw%2F%2FA%2F76mqrDHWUcOtpTFDnN4bkyAOKG43JnDNl4lXH2Uqv9eHF2F82xABB%2BthrE277Z%2BdXgn0dYCqCwxQBWFYPhAW3BMPcszvIuoK7O7U8JwCJeOvASfLHlYiF9S2zaEg%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=b8abd5c7196c908d982c7cbf51477f52e40325074f3bde8cdb451b96fe6979f8",
      "file_size": 508063,
      "type": "image/png",
      "moderated": false
    }
  ],
  "allow_singular_disclosure_at": "2025-02-21T10:39:21.580Z",
  "allow_singular_disclosure_after": -18254943.66725845,
  "singular_disclosure_allowed": true,
  "vote_count": 29,
  "voters": [
    "aboalezz",
    "starlox",
    "zy9ard3",
    "shubham_srt",
    "2026",
    "thalaivar304",
    "mohaned0101",
    "mr-alienx-kurd",
    "muhammadwaseem3",
    "mohammadtayb",
    "and 19 more..."
  ],
  "severity": {
    "rating": "low",
    "score": 2.6,
    "author_type": "User",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "high",
      "privileges_required": "low",
      "user_interaction": "required",
      "scope": "unchanged",
      "confidentiality": "none",
      "integrity": "low",
      "availability": "none"
    }
  },
  "structured_scope": {
    "databaseId": 68219,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "nextcloud/richdocuments",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
