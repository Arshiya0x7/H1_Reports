{
  "id": 822262,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC84MjIyNjI=",
  "url": "https://hackerone.com/reports/822262",
  "title": "Path traversal in Nuget Package Registry",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "high",
  "readable_substate": "Resolved",
  "created_at": "2020-03-17T15:51:58.636Z",
  "submitted_at": "2020-03-17T15:51:58.636Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "saltyyolk",
    "url": "/saltyyolk",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/252/596/b03010470e2928f744f71fb5c1685806f1878341_original.jpeg/c8a1698ff707a5e3e8a91a3484838363845daac68cb82c86d55c9e2d44d67b67"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 264,
    "url": "https://hackerone.com/gitlab",
    "handle": "gitlab",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/f0hovtq73f9ap815a0r1w42bocp4/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/f0hovtq73f9ap815a0r1w42bocp4/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "GitLab",
      "twitter_handle": "gitlab",
      "website": "https://about.gitlab.com",
      "about": "A single application for the entire software development lifecycle."
    }
  },
  "has_bounty?": true,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [
    "CVE-2020-12448"
  ],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2022-06-07T14:16:20.534Z",
  "bug_reporter_agreed_on_going_public_at": "2022-06-07T14:16:20.343Z",
  "team_member_agreed_on_going_public_at": "2020-11-20T20:55:13.986Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "### Summary\nThere's a path traversal issue in Nuget package registry which was released to GitLab-EE recently. The issue allows an attacker to create any file with an extension “.nupkg” in the filesystem. By combining the bug with a race condition in Gitaly which I used several times before (#762421, #732330). It could finally be used to read sensitive files in a GitLab instance.\n\nFor some context, a large part of the exploit were explained in #762421, the npm registry issue. Here I will focus on the simple path traversal part which makes a little bit difference.\n\nThe root cause of the path traversal lies at `ee/app/services/packages/nuget/metadata_extraction_service.rb`\n```\n      XPATHS = {                                                               \n        package_name: '//xmlns:package/xmlns:metadata/xmlns:id',               \n        package_version: '//xmlns:package/xmlns:metadata/xmlns:version'        \n      }.freeze \n...\n      def extract_metadata(file)                                               \n        doc = Nokogiri::XML(file)                                              \n                                                                               \n        XPATHS.map do |key, query|                                             \n          [key, doc.xpath(query).text]                                         \n        end.to_h \n```\nIt extracts the uploaded nupkg (which is in zip format) for the contained nuspec file (which is an XML). And then looks for attribute `id` and `version`. Then the extracted package_name(id), and package_version(version) will be concatenated into a new filename in `ee/app/services/packages/nuget/update_package_from_metadata_service.rb`\n```                                                                      \n        @package_file.transaction do                                           \n          @package_file.update!(                                               \n            file_name: package_filename,                                       \n            file: @package_file.file                                           \n          )      \n...\n      def package_filename                                                     \n        \"#{package_name.downcase}.#{package_version.downcase}.nupkg\"           \n      end    \n```\nSo my payload is:\n```                                                                  \n  <?xml version=\"1.0\" encoding=\"utf-8\"?>                                       \n  <package xmlns=\"http://schemas.microsoft.com/packaging/2013/05/nuspec.xsd\">  \n    <metadata>                                                                 \n      <id>DummyProject.DummyPackage</id>                                       \n      <version>../../../../../nyangawa</version>                                            \n    </metadata>                                                                \n  </package>                                                                   \n```\nname the file above as `dummy.nuspec` and zip it into `dummy.nupkg` and upload it through `PUT /api/v4/projects/#{id}/packages/nuget/` endpoint  will make GitLab to create a `nyangawa.nupkg` somewhere in the filesystem.\n\nThen I wrote a script (I used in #762421) to combine this issue and the race in Gitaly. I could finally read any file I want in my GitLab instance.\n\n### Steps to reproduce\n\n1. Download the attached exploit.tar.gz and extract it.\n2. Install some requirements by gem install faraday and gem install rubyzip\n3. Edit exp.rb to update some url and credentials\n4. Execute the exp.rb to watch the result of .gitlab_shell_secret of target GitLab instance.\n\n### Examples\n{F750878}\n\n#### Results of GitLab environment info\n```\nroot@localhost:/# gitlab-rake gitlab:env:info\n\nSystem information\nSystem:\t\t\nProxy:\t\tno\nCurrent User:\tgit\nUsing RVM:\tno\nRuby Version:\t2.6.5p114\nGem Version:\t2.7.10\nBundler Version:1.17.3\nRake Version:\t12.3.3\nRedis Version:\t5.0.7\nGit Version:\t2.24.1\nSidekiq Version:5.2.7\nGo Version:\tunknown\n\nGitLab information\nVersion:\t12.8.7-ee\nRevision:\t2643fd87200\nDirectory:\t/opt/gitlab/embedded/service/gitlab-rails\nDB Adapter:\tPostgreSQL\nDB Version:\t10.12\nURL:\t\thttp://10.26.0.5\nHTTP Clone URL:\thttp://10.26.0.5/some-group/some-project.git\nSSH Clone URL:\tgit@10.26.0.5:some-group/some-project.git\nElasticsearch:\tno\nGeo:\t\tno\nUsing LDAP:\tno\nUsing Omniauth:\tyes\nOmniauth Providers: \n\nGitLab Shell\nVersion:\t11.0.0\nRepository storage paths:\n- default: \t/var/opt/gitlab/git-data/repositories\nGitLab Shell path:\t\t/opt/gitlab/embedded/service/gitlab-shell\nGit:\t\t/opt/gitlab/embedded/bin/git\n```\n\nps. I changed my username because of a lost bet, don't be strange :p\n\nBest regards,\nSaltyYolk\n\n## Impact\n\nCommon arbitrary file read issue caused by path traversal similar to my previous reports.",
  "bounty_amount": "12000.0",
  "formatted_bounty": "$12,000",
  "weakness": {
    "id": 19,
    "name": "Path Traversal"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 750878,
      "file_name": "2020-03-17-234802_649x700_scrot.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/E9Ap6Era4ypQ4R3XqBVvjKMh?response-content-disposition=attachment%3B%20filename%3D%222020-03-17-234802_649x700_scrot.png%22%3B%20filename%2A%3DUTF-8%27%272020-03-17-234802_649x700_scrot.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQVETB6NTJ%2F20250920%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250920T233201Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEH0aCXVzLXdlc3QtMiJHMEUCIQCYnko1tMVzQaQ44fz7rO80zexmhh2%2FLqdPjZ4gDJjHTAIgdorI8tGUcvQvsAKCxGLcjr9sd%2BJ026hdb1p84pF%2B18YqugUI9v%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARADGgwwMTM2MTkyNzQ4NDkiDIHUt0Xxh8Fh3tz0GSqOBUppGn7A3c4oWm7vMmwVvkuUj3TQgXMso%2FSyeExTvBTlGRRlCy5e6oM6JaJtD8ezJoCN6jrY7TXJ7BG9Z%2Fs%2FRnPXME39pzTlppIPJug6ByZ%2FTfrU0ubZ%2Fc91w99L8rB4kqHpjhA6YRj7uVEb3RjExDPIyvf%2BuNeiQS9nt%2FNqghxB4YHGB0EA3vavAII%2FKBJOR9um91KYYvacIabStfej44EZO9EvkVO04%2Bt26s3nYDk5rdQpHWOAZI8eUkYXRkNMneVhVOJzj9qm8uZNM73T1TTk6tX6Nw4XqGpJPK1tW38IY1qfUS9ycwY%2Bn410n28iaQfvCr5Uddd9apL5K%2Bw3v3kxMvd2QzfepYbT5bJE6Rpej%2BfRxg5cDr%2B16u9sOYVmoge9AteGT5QtBxvBsyDOFleNLD42RyUXnGtlbiPe5XdtlTswhnHl8VDlWfczQ%2FMHtuybt1teIudbnaIFR0TV%2B3h1jzykB2m4qkDfMyQwM6mqIc6aLlqpKV0cbnDfWbj4I8FhoJt2HwVbZJGFNYdj2dBJi7ApQkDgJIUXcbY5cT7pXZK6kU4Tm9m%2BuI%2Br8uW27MvE1AefLtWvZqGZIGERkT9kPN6dH5jaWlg9%2B%2FfM5mH6op%2Fkc%2B3j6HwNc%2BZWWQWaao3WDXM5Vp3%2FxOLeSyczFkRTiQQyeEeT1K8G5mRpTBOerlt2npzMWSF5o5o%2B0jlp9EhmBfRIHwn3Rl%2FNJYllugDGRrAvamtsk2ecMfchFXEaaOI7KaIynC2Jm0cTpjx2MXdfXB%2F9kakgXPgvkLBnhBt4PIEiiUI1hozbLzmZDcNyAykwM%2BQbh5wq5RwXemft1m3Y2fxp8pMsqXYHcuakmekzsjeFNON7zS3Yz1jiKjDUpbzGBjqxAQ1mXx%2Fmv4lCG9meklEB9YnHcqq5vuyXfLgnZI6zGjXvmgoQBRLHlWST%2F0k9ddAF2Yv7FQ0RbL6JgRcSaO5uI%2BmvaCY%2BE0PB9FSN27w%2FHgnHB1vM%2BGT5%2ByGxGPxyY2I%2Fb%2BiBEmEf3VZG0axRZ5tINJZDjkSkTWdPPAQnB%2BnAvi5ywcvTxVdxSU9jk20mJ0awmb6z9AnfkVscGPkg1KCZZ54nRsl%2F2uDcxL6s4iPU%2FtvI9A%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=d3df090eebe4a2c04e70dd4ca9f12fdb4846220a7506b00b67be0c40e6848d6b",
      "file_size": 135484,
      "type": "image/png",
      "moderated": null
    }
  ],
  "allow_singular_disclosure_at": null,
  "vote_count": 86,
  "voters": [
    "ghaem51",
    "jumpydata",
    "joaxcar",
    "adilnbabras",
    "n1m0",
    "tolga",
    "mrmax4o4",
    "yxw21",
    "thruster",
    "zy9ard3",
    "and 76 more..."
  ],
  "severity": {
    "rating": "high",
    "author_type": "Team"
  },
  "structured_scope": {
    "databaseId": 39022,
    "asset_type": "OTHER",
    "asset_identifier": "Your Own GitLab Instance",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
