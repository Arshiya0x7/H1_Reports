{
  "id": 3083011,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8zMDgzMDEx",
  "url": "https://hackerone.com/reports/3083011",
  "title": "Private AWS AMIs are temporarily being exposed publicly",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "none",
  "readable_substate": "Resolved",
  "created_at": "2025-04-08T15:23:55.640Z",
  "submitted_at": "2025-04-08T15:23:55.983Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "seth_art_dd",
    "url": "/seth_art_dd",
    "profile_picture_urls": {
      "small": "/assets/avatars/default-14ffa99f59cd01423c64904352cc130ffcb6a802eadfd11777a54485749e60f2.png"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 84809,
    "url": "https://hackerone.com/aws_vdp",
    "handle": "aws_vdp",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/24kn32xntf4cdmtpkqlf6lp1o3q3/36bca6668139d77be42208d896968344ae7a76c55ee0f8b0f28281ccd492ff02",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/24kn32xntf4cdmtpkqlf6lp1o3q3/19c85a12ac35f466af1ea2b0ae853bfe5e8f057fb1d6fb62db131707bb67b30d"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": false,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "AWS VDP",
      "twitter_handle": "amazon",
      "website": "https://aws.amazon.com/",
      "about": "Amazon Web Services (AWS) is a secure cloud services platform, offering compute power and other functionality to help businesses scale and grow. "
    }
  },
  "has_bounty?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2025-05-29T21:05:05.434Z",
  "bug_reporter_agreed_on_going_public_at": "2025-05-06T15:57:47.640Z",
  "team_member_agreed_on_going_public_at": "2025-05-29T21:05:05.148Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "The AMI community catalog is where people can publish Amazon Machine Images (AMIs) publicly. AMIs are used to create EC2 instances. While working with the AMI community catalog, using the `aws ec2 describe-images` command, I found multiple images that all have the same prefix that keep getting published to this public community catalog, but then shortly after discovery, they get removed from the catalog. \n\nThe Description for all images is: `█████`\n\n In summary, I was able to manually create an EC2 instance in my own account using one of these AMIs during the short window it was public, and I believe that this AMI is supposed to be for internal AWS use only, and is never supposed to be public. I found multiple binaries on this AMI (chronicled & chroniclectl) that are not mentioned anywhere else on the internet and pull imports from ████████ (an internal golang package repo), and they contain references to internal AWS environments, like gamma/beta/dev. \n\nI did not find anything really critical here - no private internal AWS credentials or anything like that.  Also noteworthy is that these AMIs are being made public by hundreds of unique AWS account IDs. \n\nMy assumption is that there is a bug in some internal processes that is accidentally making these AMIs public during some type of job execution, but there is also some type of clean-up action that either makes the AMI private when the job is finished, or maybe the AMI is simply just deleted. \n\n\n## Steps To Reproduce:\n\n(Add details for how we can reproduce the issue)\n\n  1. Search for the AMI either for one region like this: `aws --profile ███ ec2 describe-images --filters \"Name=name,Values=ib-lifecycle-basic-ami*\" --region us-west-2`, or in a loop like this: `for region in `aws ec2 describe-regions --query \"Regions[].RegionName\" --output text`; do; echo \"$region\"; aws ec2 describe-images --filters \"Name=name,Values=ib-lifecycle-basic-ami*\" --region $region; done` or in the console\n  2. Create an EC2 with the AMI ID\n  3. Connect to the EC2\n  4. Find AWS private binaries ████████\n  5. Find references to internal resources such as █████, public pgp key from the ███ <█████████> team, etc.\n\n## Impact\n\nAn attacker can access an AMI that is intended to be used internally at AWS. The attacker can learn about the existence of AWS systems, private AWS binaries and their endpoints. An attacker could attempt to reverse engineer the binaries to see if they expose any additional information or lead to other vulnerabilities in the endpoints the binaries interact with. \n\nAdditionally, an attacker can monitor these AMIs and create a list of unique AWS accounts that appear to be for internal AWS use (as opposed to customer accounts)",
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 4,
  "voters": [
    "nitsec7",
    "mira7",
    "athanas",
    "jacobsilva"
  ],
  "severity": {
    "rating": "none",
    "author_type": "Team"
  },
  "structured_scope": {
    "databaseId": 742103,
    "asset_type": "OTHER",
    "asset_identifier": "Amazon Elastic Compute Cloud (Amazon EC2)",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
