{
  "id": 3008446,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8zMDA4NDQ2",
  "url": "https://hackerone.com/reports/3008446",
  "title": "1-Click Cross-Site Scripting via Custom Configuration in SafeListSanitizer",
  "state": "Closed",
  "substate": "informative",
  "severity_rating": "medium",
  "readable_substate": "Informative",
  "created_at": "2025-02-23T17:03:07.674Z",
  "submitted_at": "2025-02-23T17:03:07.909Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "leonsirio",
    "url": "/leonsirio",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/tiwxec7gu41otmcv5502ka9r596z/727634197f209244e4307a490cdcd36c76d6e37fef1b0c164bd35ac010105f99"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 22,
    "url": "https://hackerone.com/rails",
    "handle": "rails",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/000/022/5e2b46658c8b86bed62f574d8e1793f353cbbc63_original.png/36bca6668139d77be42208d896968344ae7a76c55ee0f8b0f28281ccd492ff02",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/000/022/5e2b46658c8b86bed62f574d8e1793f353cbbc63_original.png/19c85a12ac35f466af1ea2b0ae853bfe5e8f057fb1d6fb62db131707bb67b30d"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "Ruby on Rails",
      "twitter_handle": "rails",
      "website": "http://rubyonrails.org/security",
      "about": "Web development that doesn't hurt."
    }
  },
  "has_bounty?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "no-content",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2025-04-09T02:02:59.191Z",
  "bug_reporter_agreed_on_going_public_at": "2025-03-05T10:56:34.675Z",
  "team_member_agreed_on_going_public_at": "2025-04-09T02:02:58.860Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "",
  "weakness": {
    "id": 60,
    "name": "Cross-site Scripting (XSS) - Generic"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 68,
  "voters": [
    "aboalezz",
    "reinhardtthe",
    "ezz0",
    "alejandroar",
    "2026",
    "mohaned0101",
    "mr-alienx-kurd",
    "thalaivar304",
    "idealphaseth",
    "linuxstorm101",
    "and 58 more..."
  ],
  "severity": {
    "rating": "medium",
    "score": 6.1,
    "author_type": "User",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "high",
      "privileges_required": "none",
      "user_interaction": "required",
      "scope": "changed",
      "confidentiality": "high",
      "integrity": "none",
      "availability": "none"
    }
  },
  "structured_scope": {
    "databaseId": 160,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "https://github.com/rails/rails",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "id": 670515,
      "category": "team",
      "content": "Researcher @leonsirio reported that the SafeListSanitizer, when explicitly configured to allow `form` and `button` tags and the `formaction` attribute, can be fed crafted input that results in XSS. It's the position of the maintainers that although this may be undesirable behavior, that it does not constitute a security vulnerability because the developer must opt-in to allow multiple blocked tags (form and button) and a blocked attribute (formaction). The default sanitizer configuration successfully sanitizes the input, and we feel this POC requires an extremely unlikely configuration -- in a real world application, it would be extremely surprising to configure the sanitizer to allow these tags and attributes in untrusted content.\n\nWe would prefer to address in the public tracker the sanitizer's behavior when configured to allow `formaction` attributes.\n",
      "updated_at": "2025-04-09T02:02:50.941Z",
      "can_view?": true,
      "can_create?": false,
      "attachments": [],
      "user": {
        "id": 21838,
        "username": "flavorjones",
        "name": "Mike Dalessio",
        "bio": "https://twitter.com/flavorjones",
        "cleared": false,
        "verified": false,
        "website": "http://mike.daless.io",
        "location": "New York City / New Jersey, USA",
        "created_at": "2015-05-12T15:14:18.801Z",
        "url": "https://hackerone.com/flavorjones",
        "hackerone_triager": false,
        "hackerone_employee": false,
        "user_type": "company",
        "profile_picture_urls": {
          "small": "https://profile-photos.hackerone-user-content.com/variants/000/021/838/46ee032291a72117d0024e2c8db75deb2c51f76f_original.png/36bca6668139d77be42208d896968344ae7a76c55ee0f8b0f28281ccd492ff02",
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/021/838/46ee032291a72117d0024e2c8db75deb2c51f76f_original.png/19c85a12ac35f466af1ea2b0ae853bfe5e8f057fb1d6fb62db131707bb67b30d",
          "xtralarge": "https://profile-photos.hackerone-user-content.com/variants/000/021/838/46ee032291a72117d0024e2c8db75deb2c51f76f_original.png/41e80259f0e9503ef154e10f39296dbefc2217dd885433e52a9107ef82fe7535"
        }
      }
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
