{
  "id": 820146,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC84MjAxNDY=",
  "url": "https://hackerone.com/reports/820146",
  "title": "PHPUnit is included in groupfolders release package potentially causing RCE",
  "state": "Closed",
  "substate": "resolved",
  "readable_substate": "Resolved",
  "created_at": "2020-03-16T13:33:19.649Z",
  "submitted_at": "2020-03-16T13:33:19.649Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "ledfan",
    "url": "/ledfan",
    "profile_picture_urls": {
      "small": "https://hackerone.com/rails/active_storage/representations/redirect/eyJfcmFpbHMiOnsiZGF0YSI6ODU0OTAzLCJwdXIiOiJibG9iX2lkIn19--f5475fae7df73c2e21ff56ee9acd33a8f33a0b55/eyJfcmFpbHMiOnsiZGF0YSI6eyJmb3JtYXQiOiJwbmciLCJncmF2aXR5IjoiQ2VudGVyIiwicmVzaXplIjoiNjJ4NjJeIiwiY3JvcCI6IjYyeDYyKzArMCJ9LCJwdXIiOiJ2YXJpYXRpb24ifX0=--a4d91faed3dff6024dfc1a7b7f8ccc6b45e38396/avatar-512-512.png"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 13291,
    "url": "https://hackerone.com/nextcloud",
    "handle": "nextcloud",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/tnqlkt8d6fcch8hj8brdjp8nw864/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/tnqlkt8d6fcch8hj8brdjp8nw864/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "Nextcloud",
      "twitter_handle": "nextclouders",
      "website": "https://nextcloud.com",
      "about": "Access, share and protect your files, calendars, contacts, communication & more at home and in your enterprise."
    }
  },
  "has_bounty?": true,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2020-06-25T14:17:32.830Z",
  "bug_reporter_agreed_on_going_public_at": "2020-06-25T14:17:32.786Z",
  "team_member_agreed_on_going_public_at": "2020-06-25T12:15:28.953Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "The groupfolders tarball contains the phpunit code in the vendor directory (https://github.com/nextcloud/groupfolders/releases/download/v6.0.2/groupfolders.tar.gz) .\nAs discussed on https://thephp.cc/news/2020/02/phpunit-a-security-risk this really is a potential security risk.\nThe phpunit code contains a file called `eval-stdin.php` which evaluates the contents of `php://stdin`.\nNote that the same issue was discovered in PrestaShop which according to thephp.cc claims:\n\n```\nI was contacted by the vendor of PrestaShop, an Open Source E-Commerce software, on January 6, 2020. They informed me that eval-stdin.php can be exploited for remote code execution when PHPUnit is publicly available on the web server and FastCGI is used to integrate PHP with that web server.\n```\n\nI was not able to exploit this using different FastCGI configurations. However, again according to phpcc:\n\n```\nAn HTTP post payload can only be accessed via the php://stdin stream if PHP is used by the web server via CGI or FastCGI. I was not sure if php://stdin really behaves like this, so I reached out to PHP core developers. Joe Watkins and Christoph M. Becker were able to confirm that php://stdin behaves like this and that its implementation is based on the specifications for CGI and FastCGI, which mandate access to the request payload via the standard input stream.\n```\n\nIf the Nextcloud is configured so that the url still contains `index.php` I was able to access the `eval-stdin.php` file without authentication.\nNote that the following apps also include the phpunit package:\n - https://apps.nextcloud.com/apps/carnet\n - https://apps.nextcloud.com/apps/discoursesso\n - https://apps.nextcloud.com/apps/extract\n\n## Impact\n\nAccording to the PHP core developers and PrestaShop the `eval-stdin.php` makes it possible to perform RCE.\nMy research shows that in at least certain circumstances (i.e., index.php is not rewritten) the `eval-stdin.php` file is accessible.",
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2020-07-25T12:15:29.039Z",
  "allow_singular_disclosure_after": -162769579.78390345,
  "singular_disclosure_allowed": true,
  "vote_count": 9,
  "voters": [
    "a_d_a_m",
    "ali",
    "brahim_boufakri01",
    "sa1tama0",
    "cryptographer",
    "love07oj",
    "rupeshsahay",
    "helius",
    "theklash77"
  ],
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
